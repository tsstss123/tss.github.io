<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tan Song&#39; Blog</title>
  <subtitle>ACM蒟蒻</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tsstss123.github.io/"/>
  <updated>2017-02-24T16:10:18.000Z</updated>
  <id>http://tsstss123.github.io/</id>
  
  <author>
    <name>Tan Song</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Codeforces Round</title>
    <link href="http://tsstss123.github.io/2017/02/24/cf-round-401/"/>
    <id>http://tsstss123.github.io/2017/02/24/cf-round-401/</id>
    <published>2017-02-24T15:53:48.000Z</published>
    <updated>2017-02-24T16:10:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>这么多年了第一次AK一场…虽然全是大水题…思来想去还是纪念一下</p>
<a id="more"></a>
<h1 id="A-Shell-Game"><a href="#A-Shell-Game" class="headerlink" title="A. Shell Game"></a>A. Shell Game</h1><p>大概是6种情况打个表就好了</p>
<figure class="highlight hsp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">n=<span class="keyword">int</span>(<span class="keyword">input</span>())</div><div class="line">x=<span class="keyword">int</span>(<span class="keyword">input</span>())</div><div class="line">lst=[<span class="string">'012'</span>,<span class="string">'102'</span>,<span class="string">'120'</span>,<span class="string">'210'</span>,<span class="string">'201'</span>,<span class="string">'021'</span>]</div><div class="line">n %= <span class="number">6</span></div><div class="line"><span class="keyword">str</span> = lst[n]</div><div class="line"><span class="keyword">print</span>(<span class="keyword">str</span>[x])</div></pre></td></tr></table></figure>
<p>现在A题一般用py</p>
<h1 id="B-Game-of-Credit-Cards"><a href="#B-Game-of-Credit-Cards" class="headerlink" title="B. Game of Credit Cards"></a>B. Game of Credit Cards</h1><p>田忌赛马问题，求解的两个问题的区别在于如果两者数值相等，如果要自己被打次数最少就选择打平，如果要对方被打次数最多就选择打输</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">#include</span> &lt;<span class="keyword">bits/stdc++.h&gt;</span></div><div class="line"><span class="symbol">#define</span> rep(i,a,<span class="keyword">b) </span>for(int i<span class="symbol">=a</span><span class="comment">;i&lt;=b;++i)</span></div><div class="line"><span class="symbol">using</span> namespace std<span class="comment">;</span></div><div class="line"><span class="symbol">int</span> n,a[<span class="number">2000</span>],<span class="keyword">b[2000];</span></div><div class="line"><span class="symbol">int</span> main()&#123;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n)<span class="comment">;</span></div><div class="line">	rep(i,<span class="number">1</span>,n)scanf(<span class="string">"%1d"</span>,&amp;a[i])<span class="comment">;</span></div><div class="line">	rep(i,<span class="number">1</span>,n)scanf(<span class="string">"%1d"</span>,&amp;<span class="keyword">b[i]);</span></div><div class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>)<span class="comment">;</span></div><div class="line">	sort(<span class="keyword">b+1,b+n+1);</span></div><div class="line">	int al<span class="number">=1</span>,ar<span class="symbol">=n</span>,<span class="keyword">bl=1,br=n,c1=0,c2=0;</span></div><div class="line">	<span class="meta">while</span>(al &lt;= ar)&#123;</div><div class="line">		<span class="meta">if</span>(a[ar] &lt;= <span class="keyword">b[br])&#123;</span></div><div class="line">			--ar<span class="comment">; --br;</span></div><div class="line">		&#125;<span class="meta">else</span> <span class="meta">if</span>(a[al] &lt;= <span class="keyword">b[bl])&#123;</span></div><div class="line">			++al<span class="comment">; ++bl;</span></div><div class="line">		&#125;<span class="meta">else</span>&#123;</div><div class="line">			<span class="meta">if</span>(a[ar] &gt; <span class="keyword">b[bl])</span></div><div class="line">				++<span class="built_in">c1</span><span class="comment">;</span></div><div class="line">			--ar<span class="comment">; ++bl;</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	al<span class="number">=1</span>,ar<span class="symbol">=n</span>,<span class="keyword">bl=1,br=n;</span></div><div class="line">	<span class="meta">while</span>(al &lt;= ar)&#123;</div><div class="line">		<span class="meta">if</span>(a[ar] &lt; <span class="keyword">b[br])&#123;</span></div><div class="line">			--ar<span class="comment">; --br;</span></div><div class="line">			++<span class="built_in">c2</span><span class="comment">;</span></div><div class="line">		&#125;<span class="meta">else</span> <span class="meta">if</span>(a[al] &lt; <span class="keyword">b[bl])&#123;</span></div><div class="line">			++al<span class="comment">; ++bl;</span></div><div class="line">			++<span class="built_in">c2</span><span class="comment">;</span></div><div class="line">		&#125;<span class="meta">else</span>&#123;</div><div class="line">			--ar<span class="comment">; ++bl;</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	printf(<span class="string">"%d\n%d\n"</span>,<span class="built_in">c1</span>,<span class="built_in">c2</span>)<span class="comment">;</span></div><div class="line">	return <span class="number">0</span><span class="comment">;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="C-Alyona-and-Spreadsheet"><a href="#C-Alyona-and-Spreadsheet" class="headerlink" title="C. Alyona and Spreadsheet"></a>C. Alyona and Spreadsheet</h1><p>你用一个二维的表，里面有10w个数字，10w个询问是否存在某一列的[l,r]行的数是不降的<br>按每一列从上向下扫，记录每个点向上能有多少个数值是符合要求的</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">using namespace std<span class="comment">;</span></div><div class="line">const int maxm = <span class="number">1</span>e5 + <span class="number">10</span><span class="comment">;</span></div><div class="line">vector&lt;int&gt; col[maxm],lst[maxm]<span class="comment">;</span></div><div class="line">int n,m,k<span class="comment">;</span></div><div class="line">int main()&#123;</div><div class="line">	<span class="keyword">scanf("%d%d",&amp;n,&amp;m);</span></div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		rep(<span class="keyword">j,1,m)&#123;</span></div><div class="line">			int x<span class="comment">; scanf("%d",&amp;x);</span></div><div class="line">			col[<span class="keyword">j].push_back(x);</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		int p = i - <span class="number">1</span>, mx = <span class="number">0</span><span class="comment">;</span></div><div class="line">		rep(<span class="keyword">j,1,m)&#123;</span></div><div class="line">			int len = <span class="number">0</span><span class="comment">;</span></div><div class="line">			if(p &amp;&amp; col[<span class="keyword">j][p </span>- <span class="number">1</span>] &lt;= col[<span class="keyword">j][p])</span></div><div class="line">				len = lst[<span class="keyword">j][p </span>- <span class="number">1</span>] + <span class="number">1</span><span class="comment">;</span></div><div class="line">			lst[<span class="keyword">j].push_back(len);</span></div><div class="line">			mx = max(mx,len)<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line">		col[<span class="number">0</span>].push_back(mx)<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">scanf("%d",&amp;k);</span></div><div class="line">	rep(i,<span class="number">1</span>,k)&#123;</div><div class="line">		int l,r<span class="comment">;</span></div><div class="line">		<span class="keyword">scanf("%d%d",&amp;l,&amp;r);</span></div><div class="line">		--r<span class="comment">; --l;</span></div><div class="line">		if(r - l &gt; col[<span class="number">0</span>][r])</div><div class="line">			printf(<span class="string">"No\n"</span>)<span class="comment">;</span></div><div class="line">		else</div><div class="line">			printf(<span class="string">"Yes\n"</span>)<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	return <span class="number">0</span><span class="comment">;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="D-Cloud-of-Hashtags"><a href="#D-Cloud-of-Hashtags" class="headerlink" title="D. Cloud of Hashtags"></a>D. Cloud of Hashtags</h1><p>给你10w个字符串，每个字符串可以从后向前删掉一些字符，要你输出一个方案使得删除的字符总数最少并且符合字典序</p>
<p>从最后一个字符串向前一个一个贪心，每次如果小于后面一个就一个字符不用删，如果等于的话删到和后面长度相等，如果大于就停下来</p>
<figure class="highlight rust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">#include &lt;bits/stdc++.h&gt;</div><div class="line">#define rep(i,a,b) <span class="keyword">for</span>(<span class="keyword">int</span> i=a;i&lt;=b;++i)</div><div class="line">using namespace std;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500100</span>;</div><div class="line">string <span class="keyword">str</span>[maxn];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin &gt;&gt; n;</div><div class="line">	rep(i,<span class="number">1</span>,n)cin &gt;&gt; <span class="keyword">str</span>[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = n - <span class="number">1</span>; i; --i)&#123;</div><div class="line">		<span class="keyword">int</span> nlen = <span class="keyword">str</span>[i + <span class="number">1</span>].length(), len = <span class="keyword">str</span>[i].length();</div><div class="line">		<span class="keyword">int</span> npos = <span class="number">0</span>, les = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> p = <span class="number">0</span>; p &lt; len; ++p)&#123;</div><div class="line">			<span class="keyword">if</span>(<span class="keyword">str</span>[i][p] &lt; <span class="keyword">str</span>[i + <span class="number">1</span>][p])&#123;</div><div class="line">				npos = p;</div><div class="line">				les = <span class="number">1</span>;</div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">str</span>[i][p] == <span class="keyword">str</span>[i + <span class="number">1</span>][p])&#123;</div><div class="line">				npos = p;</div><div class="line">			&#125;<span class="keyword">else</span>&#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(p &gt;= nlen)<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(les)npos = len - <span class="number">1</span>;</div><div class="line">		<span class="keyword">str</span>[i] = <span class="keyword">str</span>[i].substr(<span class="number">0</span>,npos + <span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,n)cout &lt;&lt; <span class="keyword">str</span>[i] &lt;&lt; endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="E-Hanoi-Factory"><a href="#E-Hanoi-Factory" class="headerlink" title="E. Hanoi Factory"></a>E. Hanoi Factory</h1><p>问一坨圆环能摞在一起最大的高度</p>
<p>按照外径从大到小排序以后，转移条件就只剩下内径了。用map或者树状数组转移一下。trick是当外径相同的时候按内径从大到小摞上去。</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">using namespace std<span class="comment">;</span></div><div class="line"><span class="comment">#define lowbit(x) ((x)&amp;(-(x)))</span></div><div class="line">const int maxn = <span class="number">3</span>e5 + <span class="number">10</span><span class="comment">;</span></div><div class="line">typedef long long int <span class="keyword">ll;</span></div><div class="line"><span class="keyword">ll </span>f[maxn]<span class="comment">;</span></div><div class="line">int n<span class="comment">;</span></div><div class="line">struct nd&#123;</div><div class="line">	int a,<span class="keyword">b,h;</span></div><div class="line">	<span class="keyword">bool </span>operator&lt;(const nd &amp;rhs)const&#123;</div><div class="line">		return <span class="keyword">b </span>== rhs.<span class="keyword">b </span>? a &gt; rhs.a : <span class="keyword">b </span>&gt; rhs.<span class="keyword">b;</span></div><div class="line">	&#125;</div><div class="line">&#125;ring[maxn]<span class="comment">;</span></div><div class="line"><span class="keyword">ll </span><span class="keyword">bit[maxn];</span></div><div class="line">void upd(int x,<span class="keyword">ll </span>v)&#123;</div><div class="line">	while(x &lt; maxn)&#123;</div><div class="line">		<span class="keyword">bit[x]=max(bit[x],v);</span></div><div class="line">		x+=lowbit(x)<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">ll </span>query(int x)&#123;</div><div class="line">	<span class="keyword">ll </span>ans = <span class="keyword">bit[x];</span></div><div class="line">	while(x)&#123;</div><div class="line">		ans=max(ans,<span class="keyword">bit[x]);</span></div><div class="line">		x-=lowbit(x)<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	return ans<span class="comment">;</span></div><div class="line">&#125;</div><div class="line">map&lt;int,int&gt; lsh<span class="comment">;</span></div><div class="line">int main()&#123;</div><div class="line">	<span class="keyword">ll </span>ans = <span class="number">0</span><span class="comment">;</span></div><div class="line">	<span class="keyword">scanf("%d",&amp;n);</span></div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		<span class="keyword">scanf("%d%d%d",&amp;ring[i].a,&amp;ring[i].b,&amp;ring[i].h);</span></div><div class="line">		lsh[ring[i].a]=<span class="number">1</span><span class="comment">;</span></div><div class="line">		lsh[ring[i].<span class="keyword">b]=1;</span></div><div class="line">	&#125;</div><div class="line">	int lscnt = <span class="number">1</span><span class="comment">;</span></div><div class="line">	for(auto it=lsh.<span class="keyword">begin();it!=lsh.end();++it)&#123;</span></div><div class="line">		it-&gt;second = lscnt++<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	sort(ring+<span class="number">1</span>,ring+n+<span class="number">1</span>)<span class="comment">;</span></div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		ring[i].a = lsh[ring[i].a]<span class="comment">;</span></div><div class="line">		ring[i].<span class="keyword">b </span>= lsh[ring[i].<span class="keyword">b];</span></div><div class="line">		<span class="keyword">ll </span>lst = query(ring[i].<span class="keyword">b </span>- <span class="number">1</span>)<span class="comment">;</span></div><div class="line">		f[i] = lst + ring[i].h<span class="comment">;</span></div><div class="line">		upd(ring[i].a,f[i])<span class="comment">;</span></div><div class="line">		ans = max(ans,f[i])<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	cout &lt;&lt; ans &lt;&lt; endl<span class="comment">;</span></div><div class="line">	return <span class="number">0</span><span class="comment">;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这么多年了第一次AK一场…虽然全是大水题…思来想去还是纪念一下&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CDOJ 1397 A Hard-working Girl LRZ</title>
    <link href="http://tsstss123.github.io/2016/05/29/CDOJ-1397-A-Hard-working-Girl-LRZ/"/>
    <id>http://tsstss123.github.io/2016/05/29/CDOJ-1397-A-Hard-working-Girl-LRZ/</id>
    <published>2016-05-29T06:40:27.000Z</published>
    <updated>2017-01-26T01:54:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>让你计算一个很神(tao)奇(lu)的sigma</p>
<a id="more"></a>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include &lt;cassert&gt;</span></div><div class="line"><span class="meta">#include &lt;cstdio&gt;</span></div><div class="line"><span class="meta">#include &lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">const <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">mod</span> = <span class="number">1000000009</span>;</div><div class="line">typedef <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</div><div class="line"><span class="keyword">void</span> extend_gcd(ll a, ll b, ll &amp;d, ll &amp;x, ll &amp;y) &#123;</div><div class="line">    <span class="keyword">if</span> (!b)</div><div class="line">        d = a, x = <span class="number">1</span>, y = <span class="number">0</span>;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        extend_gcd(b, a % b, d, y, x);</div><div class="line">        y -= x * (a / b);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">ll inv(ll a, ll <span class="keyword">mod</span>) <span class="comment">//计算a对mod的逆元</span></div><div class="line">&#123;</div><div class="line">    ll d, x, y;</div><div class="line">    extend_gcd(a, <span class="keyword">mod</span>, d, x, y);</div><div class="line">    ll ret = (d == <span class="number">1</span> ? (x + <span class="keyword">mod</span>) % <span class="keyword">mod</span> : <span class="number">-1</span>);</div><div class="line">    assert(ret &gt; <span class="number">0</span>);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line">ll cpre[<span class="number">1001000</span>];</div><div class="line"><span class="keyword">void</span> combine1(ll n, ll <span class="keyword">mod</span>) <span class="comment">//计算组合C(n,m)%mod</span></div><div class="line">&#123;</div><div class="line">    ll <span class="keyword">sum</span> = <span class="number">1</span>; <span class="comment">//线性计算</span></div><div class="line">    cpre[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>, j = n; i &lt;= n; i++, j--) &#123;</div><div class="line">        <span class="keyword">sum</span> = (<span class="keyword">sum</span> * j) % <span class="keyword">mod</span> * inv(i, <span class="keyword">mod</span>) % <span class="keyword">mod</span>;</div><div class="line">        cpre[i] = <span class="keyword">sum</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">ll Pow(ll a, ll p, ll <span class="keyword">mod</span>) &#123;</div><div class="line">    <span class="keyword">if</span> (p == <span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>LL;</div><div class="line">    <span class="keyword">if</span> (p == <span class="number">1</span>)</div><div class="line">        <span class="keyword">return</span> a;</div><div class="line">    ll tmp = Pow(a, p / <span class="number">2</span>, <span class="keyword">mod</span>);</div><div class="line">    tmp = (tmp * tmp) % <span class="keyword">mod</span>;</div><div class="line">    <span class="keyword">if</span> (p % <span class="number">2</span>)</div><div class="line">        tmp = tmp * a % <span class="keyword">mod</span>;</div><div class="line">    <span class="keyword">return</span> tmp;</div><div class="line">&#125;</div><div class="line">ll S(ll A, ll B, ll C, ll n, <span class="keyword">int</span> k) &#123;</div><div class="line">    ll ans = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= k; ++j) &#123;</div><div class="line">        ll d = Pow(A, (k - j), <span class="keyword">mod</span>) * Pow(B, j, <span class="keyword">mod</span>) % <span class="keyword">mod</span>;</div><div class="line">        ll f = ((j % <span class="number">2</span> == <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">-1</span>);</div><div class="line">        ll di = <span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span> (d * d % <span class="keyword">mod</span> == <span class="number">1</span>) &#123;</div><div class="line">            di = (n * d) % <span class="keyword">mod</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            di = (Pow(d, <span class="number">2</span> * n + <span class="number">1</span>, <span class="keyword">mod</span>) - d + <span class="keyword">mod</span>) *</div><div class="line">                 inv(d * d - <span class="number">1</span> + <span class="keyword">mod</span>, <span class="keyword">mod</span>) % <span class="keyword">mod</span>;</div><div class="line">        &#125;</div><div class="line">        ll th = f * di % <span class="keyword">mod</span>;</div><div class="line">        ans = ((ans + cpre[j] * th) % <span class="keyword">mod</span> + <span class="keyword">mod</span>) % <span class="keyword">mod</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> (Pow(C, k, <span class="keyword">mod</span>) * ans) % <span class="keyword">mod</span>;</div><div class="line">&#125;</div><div class="line">ll C = <span class="number">276601605</span>LL, A = <span class="number">691504013</span>LL, B = <span class="number">308495997</span>LL;</div><div class="line"><span class="keyword">int</span> main() &#123;</div><div class="line">    <span class="keyword">int</span> n, k;</div><div class="line">    scanf(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</div><div class="line">    combine1(k, <span class="keyword">mod</span>);</div><div class="line">    cout &lt;&lt; S(A, B, C, n, k) &lt;&lt; endl;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">// a(n) = (phi^(2n-1)+phi^(1-2n))/sqrt(5) where phi=(1+sqrt(5))/2.</span></div><div class="line"><span class="comment">// 276601605*(691504013^(2*n-1) + 691504013^(1-2*n))</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;让你计算一个很神(tao)奇(lu)的sigma&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学" scheme="http://tsstss123.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>BUPT 186 Sasami&#39;s Power</title>
    <link href="http://tsstss123.github.io/2016/05/22/BUPT-186-Sasami-s-Power/"/>
    <id>http://tsstss123.github.io/2016/05/22/BUPT-186-Sasami-s-Power/</id>
    <published>2016-05-22T06:44:43.000Z</published>
    <updated>2016-05-22T06:52:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>题意：<br>给出了一个长度为10w的序列A，求有多少个B序列满足A[i] = B[i]+B[i+1]，并且B[i]不降</p>
<a id="more"></a>
<p>严格来说不能算数学题。。<br>想一下（看样例）对于第一个或者最后一个数来说，符合条件的序列一定是连续的。而只要确定这两个数中任意一个数这个数列就确定了。。</p>
<p>我们假定B[1]的取值范围是[-inf,inf]，那么我们瞎J8推一下就会发现通过A[1],A[2],B[1]的范围可以确定出B[2]的范围，那么我们只要这样一直递推到B[n]的范围，就是我们要的答案</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line">ll a[<span class="number">100100</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> T;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</div><div class="line">	<span class="keyword">while</span>(T--)&#123;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</div><div class="line">		ll l = <span class="number">-1e15</span>, r = <span class="number">1e15</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</div><div class="line">			ll nl = (a[i<span class="number">-1</span>] - a[i<span class="number">-1</span>]/<span class="number">2</span>);</div><div class="line">			ll nr = a[i] / <span class="number">2</span>;</div><div class="line">			nl = max(a[i<span class="number">-1</span>]-r,nl);</div><div class="line">			nr = min(a[i<span class="number">-1</span>]-l,nr);</div><div class="line">			l = nl; r = nr;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(r - l &lt; <span class="number">0</span>)&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"0\n"</span>);</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,r-l+<span class="number">1</span> );</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题意：&lt;br&gt;给出了一个长度为10w的序列A，求有多少个B序列满足A[i] = B[i]+B[i+1]，并且B[i]不降&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学" scheme="http://tsstss123.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>CF 658C Bear and Forgotten Tree 3</title>
    <link href="http://tsstss123.github.io/2016/04/02/CF-658A/"/>
    <id>http://tsstss123.github.io/2016/04/02/CF-658A/</id>
    <published>2016-04-02T14:06:19.000Z</published>
    <updated>2016-05-22T06:52:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>题意：<br>要你构造一个$n$个点,直径为$d$,从1号点出发最长路径为$h$的树</p>
<a id="more"></a>
<p>直径和$n$的关系不大，主要是$d$与$h$的关系，以及$d$$h$为1的时候的特殊情况<br>先构造主链，顺序构造的时候让某条边接到1号点上就巧妙地完成了链构造方向的转移<br>构造其他点的时候，如果$d$与$h$相等的话要把其他点接在2号点才能保证不会延长主链</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> n,d,h;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; d &gt;&gt; h;</div><div class="line">	<span class="keyword">if</span>(d &gt; <span class="number">2</span>*h || (n&gt;<span class="number">2</span> &amp;&amp; d==<span class="number">1</span>))&#123;</div><div class="line">		<span class="built_in">puts</span>(<span class="string">"-1"</span>);</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=d;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(i == h+<span class="number">1</span>)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,<span class="number">1</span>,i+<span class="number">1</span>);</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i,i+<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=d+<span class="number">2</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(h == d)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,<span class="number">2</span>,i);</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,<span class="number">1</span>,i);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题意：&lt;br&gt;要你构造一个$n$个点,直径为$d$,从1号点出发最长路径为$h$的树&lt;/p&gt;
    
    </summary>
    
    
      <category term="构造" scheme="http://tsstss123.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>HDU 5293 Tree chain problem</title>
    <link href="http://tsstss123.github.io/2016/03/14/HDU-5293/"/>
    <id>http://tsstss123.github.io/2016/03/14/HDU-5293/</id>
    <published>2016-03-14T15:16:47.000Z</published>
    <updated>2016-03-14T15:48:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>又是神奇的DP+DFS序(其实树链剖分也很方便啦</p>
<p>题意：<br>给你一棵树，树上有n个点。<br>然后给你m条链，然后让你选择一些不相交的链，使得权值和最大。（每条链都有权值） </p>
<a id="more"></a>
<p>神奇的DP转化 + DFS序维护链信息</p>
<p>先dfs一遍转有根树并预处理LCA，考虑dp(i)表示以第i个点为根的树的最优值，sum(i)表示第i个节点所有儿子的dp值之和。读入所有链，把链挂到链两端的LCA的点上去，然后开始dfs第二遍处理。</p>
<p>转移：<br>dp(i) 起码是sigma(dp(k)) k表示i的儿子<br>如果i点上挂了链子，那么对于每条链<br>w = 链子的val + 链上所有点的不在链上的儿子的dp值</p>
<p>我们发现后半部分不好统计。所以使用sum做一个转化。后半部分 = sigma(sum[链上所有点]-dp[链上除了lca以外的所有点]<br>这个转化相当巧妙的解决了这个问题</p>
<p>维护链可以用无脑的树链剖分，也可以用很巧妙的dfs序<br>大家都知道一条树链可以用从根到两点的链之和减去根到lca的链。用dfs序可以很好地维护”从根到某一点的链”上的信息（使用树状数组或者线段树）<br>记录l[u]为dfs进入时的时刻，r[u]为dfs离开时的时刻，在l[u]+=w同时r[u]-=w</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, "/STACK:1024000000,1024000000")</span></div><div class="line"><span class="meta">#include &lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100100</span>;</div><div class="line"><span class="keyword">int</span> n,m,fa[maxn][<span class="number">22</span>],dep[maxn],l[maxn&lt;&lt;<span class="number">1</span>],r[maxn&lt;&lt;<span class="number">1</span>],dp[maxn],dfscnt;</div><div class="line"><span class="keyword">int</span> b1[maxn&lt;&lt;<span class="number">1</span>],b2[maxn&lt;&lt;<span class="number">1</span>];</div><div class="line">vector&lt;<span class="keyword">int</span>&gt; mp[maxn];</div><div class="line"><span class="keyword">struct</span> Chain&#123;</div><div class="line">	<span class="keyword">int</span> u,v,w;</div><div class="line">&#125;;</div><div class="line">vector&lt;Chain&gt; chain[maxn];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">bitadd</span>(<span class="params"><span class="keyword">int</span> x,<span class="keyword">int</span> v,<span class="keyword">int</span> bit[]</span>)</span>&#123;</div><div class="line">	<span class="keyword">while</span>(x &lt;= <span class="number">2</span>*n)&#123;</div><div class="line">		bit[x] += v;</div><div class="line">		x += lowbit(x);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">bitsum</span>(<span class="params"><span class="keyword">int</span> x,<span class="keyword">int</span> bit[]</span>)</span>&#123;</div><div class="line">	<span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(x)&#123;</div><div class="line">		ret += bit[x];</div><div class="line">		x -= lowbit(x);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		chain[i].clear();</div><div class="line">		mp[i].clear();</div><div class="line">	&#125;</div><div class="line">	dfscnt = <span class="number">1</span>;</div><div class="line">	memset(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(dp));</div><div class="line">	memset(dep,<span class="number">0</span>,<span class="keyword">sizeof</span>(dep));</div><div class="line">	memset(fa,<span class="number">0</span>,<span class="keyword">sizeof</span>(fa));</div><div class="line">	memset(b1,<span class="number">0</span>,<span class="keyword">sizeof</span>(b1));</div><div class="line">	memset(b2,<span class="number">0</span>,<span class="keyword">sizeof</span>(b2));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span>(<span class="params"><span class="keyword">int</span> u,<span class="keyword">int</span> f</span>)</span>&#123;</div><div class="line">	fa[u][<span class="number">0</span>] = f;</div><div class="line">	l[u] = dfscnt++;</div><div class="line">	rep(i,<span class="number">1</span>,<span class="number">21</span>) fa[u][i] = fa[fa[u][i<span class="number">-1</span>]][i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mp[u].size(); ++i)&#123;</div><div class="line">		<span class="keyword">int</span> v = mp[u][i];</div><div class="line">		<span class="keyword">if</span>(v == f) <span class="keyword">continue</span>;</div><div class="line">		dep[v] = dep[u] + <span class="number">1</span>;</div><div class="line">		dfs(v,u);</div><div class="line">	&#125;</div><div class="line">	r[u] = dfscnt++;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span>(<span class="params"><span class="keyword">int</span> u,<span class="keyword">int</span> v</span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(dep[u] &lt; dep[v])swap(u,v);</div><div class="line">	<span class="keyword">int</span> d = dep[u] - dep[v];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">22</span>;++i)<span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;i)&amp;d)u = fa[u][i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">21</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		<span class="keyword">if</span>(fa[u][i] != fa[v][i])&#123;</div><div class="line">			u = fa[u][i];</div><div class="line">			v = fa[v][i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(u!=v)&#123;u = fa[u][<span class="number">0</span>]; v = fa[v][<span class="number">0</span>];&#125;</div><div class="line">	<span class="keyword">return</span> u;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span>(<span class="params"><span class="keyword">int</span> u</span>)</span>&#123;</div><div class="line">	<span class="keyword">int</span> f = fa[u][<span class="number">0</span>];</div><div class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mp[u].size();++i)&#123;</div><div class="line">		<span class="keyword">int</span> v = mp[u][i];</div><div class="line">		<span class="keyword">if</span>(v == f) <span class="keyword">continue</span>;</div><div class="line">		solve(v);</div><div class="line">		sum += dp[v];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> d = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;chain[u].size();++i)&#123;</div><div class="line">		Chain &amp;c = chain[u][i];</div><div class="line">		<span class="keyword">int</span> val = c.w + sum + bitsum(l[c.u],b1)+bitsum(l[c.v],b1)-bitsum(l[c.v],b2)-bitsum(l[c.u],b2);</div><div class="line">		<span class="keyword">if</span>(val &gt; d)</div><div class="line">			d = val;</div><div class="line">	&#125;</div><div class="line">	bitadd(l[u],sum,b1); bitadd(r[u],-sum,b1);</div><div class="line">	dp[u] = d = max(d,sum);</div><div class="line">	bitadd(l[u],d,b2); bitadd(r[u],-d,b2);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">int</span> T;scanf(<span class="string">"%d"</span>,&amp;T);</div><div class="line">	rep(cas,<span class="number">1</span>,T)&#123;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		init();</div><div class="line">		rep(i,<span class="number">1</span>,n<span class="number">-1</span>)&#123;</div><div class="line">			<span class="keyword">int</span> u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			mp[u].push_back(v); mp[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		dfs(<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">		rep(i,<span class="number">1</span>,m)&#123;</div><div class="line">			<span class="keyword">int</span> u,v,w;</div><div class="line">			Chain tmp;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			<span class="keyword">int</span> p = LCA(u,v);</div><div class="line">			tmp.u = u; tmp.v = v; tmp.w = w;</div><div class="line">			chain[p].push_back(tmp);</div><div class="line">		&#125;</div><div class="line">		solve(<span class="number">1</span>);</div><div class="line">		printf(<span class="string">"%d\n"</span>,dp[<span class="number">1</span>]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//16557947	2016-03-14 23:15:34 Accepted 5293 982MS 26956K 2291 B G++	Orz WJMZBMR</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又是神奇的DP+DFS序(其实树链剖分也很方便啦&lt;/p&gt;
&lt;p&gt;题意：&lt;br&gt;给你一棵树，树上有n个点。&lt;br&gt;然后给你m条链，然后让你选择一些不相交的链，使得权值和最大。（每条链都有权值） &lt;/p&gt;
    
    </summary>
    
    
      <category term="HDU" scheme="http://tsstss123.github.io/tags/HDU/"/>
    
      <category term="DFS序" scheme="http://tsstss123.github.io/tags/DFS%E5%BA%8F/"/>
    
      <category term="DP" scheme="http://tsstss123.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>HDU 5296 Annoying problem</title>
    <link href="http://tsstss123.github.io/2016/03/14/HDU-5296/"/>
    <id>http://tsstss123.github.io/2016/03/14/HDU-5296/</id>
    <published>2016-03-14T04:08:14.000Z</published>
    <updated>2016-03-14T15:21:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>题意：<br>$n$个点构成的树，$q$个询问，要你维护一个集合，每个询问让你在集合中删除或者添加一个点，然后输出一个整数，为包含集合内所有点的最小生成树的大小</p>
<a id="more"></a>
<p>官方题解：<br>先预处理下dfs序。</p>
<p>对于添加点u操作：每次查找集合中的点与添加的点 dfs序比他小的最大的点，和比他大最小点，假设这两个点为x，y（查找不到的话就找字典序最大和最小的两个点，理由下面给出）</p>
<p>每次增加的花费为<br>dis[u]−dis[lca(x,u)]−dis[lca(y,u)]+dis[lca(x,y)];<br>其中dis记得是点到根结点的距离 对于删除点u操作：每次先把点从集合中删除，然后再计算减少花费，计算公式和增加的计算方法一样。</p>
<p>根据dfs序选择两个点的理由。</p>
<p>如果集合中可以找到dfs序比操作点大和比操作点小的点，那么变化的费用就相当于， 操作点到 以这两个点为端点的链 的距离，可以用上述公式计算。</p>
<p>如果集合中dfs序都比操作点小或者都比操作点大，那么变化的费用是操作点到以字典序最大和字典序最小的点 为端点的链的距离，也可以用上面的公式计算。</p>
<p>感受：</p>
<p>DFS序太强了。完全没有意识到DFS序可以处理链问题。我提到LCA相关，潘爷提到DFS序的时候我又凭感觉直接否定了DFS序。。。卡到结束…我有罪</p>
<p>补得时候LCA自己又写错了…每次自己写LCA总有三分之二的概率要挂。。已经成为我写挂频率最高的算法了…</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="comment">#define first F</span></div><div class="line"><span class="comment">#define second S</span></div><div class="line">typedef pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</div><div class="line">const <span class="keyword">int</span> maxn = <span class="number">100100</span>;</div><div class="line"><span class="keyword">int</span> f[maxn][<span class="number">23</span>],n,<span class="keyword">q</span>;</div><div class="line">struct ed&#123;</div><div class="line">    <span class="keyword">int</span> v,w;</div><div class="line">&#125;;</div><div class="line">vector&lt;ed&gt; mp[maxn];</div><div class="line">inline void adde(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)&#123;</div><div class="line">    ed tmp;</div><div class="line">    tmp.w = w; tmp.v = v;</div><div class="line">    mp[u].push_back(tmp);</div><div class="line">    tmp.v = u;</div><div class="line">    mp[v].push_back(tmp);</div><div class="line">&#125;</div><div class="line">set&lt;<span class="keyword">int</span>&gt; st;</div><div class="line"><span class="keyword">int</span> dfscnt,dep[maxn],<span class="keyword">pos</span>[maxn],npos[maxn],dist[maxn];</div><div class="line">void dfs(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)&#123;</div><div class="line">    f[u][<span class="number">0</span>] = fa; </div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">23</span>;++i)</div><div class="line">        f[u][i] = f[f[u][i-<span class="number">1</span>]][i-<span class="number">1</span>];</div><div class="line">    <span class="keyword">pos</span>[u] = dfscnt++;</div><div class="line">    <span class="regexp">//printf</span>(<span class="string">"Point %d -&gt; %d\n"</span>,u,<span class="keyword">pos</span>[u]);</div><div class="line">    npos[<span class="keyword">pos</span>[u]] = u;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mp[u].size();++i)&#123;</div><div class="line">        <span class="keyword">int</span> v = mp[u][i].v;</div><div class="line">        <span class="keyword">if</span>(v==fa)<span class="keyword">continue</span>;</div><div class="line">        dep[v] = dep[u] + <span class="number">1</span>;</div><div class="line">        dist[v] = dist[u] + mp[u][i].w;</div><div class="line">        <span class="regexp">//printf</span>(<span class="string">"dist[%d]=%d\n"</span>,v,dist[v] );</div><div class="line">        dfs(v,u);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span>&amp; dst(<span class="keyword">int</span> <span class="keyword">x</span>)&#123;</div><div class="line">    <span class="keyword">return</span> dist[npos[<span class="keyword">x</span>]];</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> lca(<span class="keyword">int</span> u,<span class="keyword">int</span> v)&#123;</div><div class="line">    <span class="keyword">if</span>(u==v)<span class="keyword">return</span> u;</div><div class="line">    <span class="keyword">if</span>(dep[u] &lt; dep[v])swap(u,v);</div><div class="line">    <span class="keyword">int</span> d = dep[u] - dep[v];</div><div class="line">    rep(i,<span class="number">0</span>,<span class="number">22</span>)<span class="keyword">if</span>(d&amp;(<span class="number">1</span>&lt;&lt;i))u = f[u][i];</div><div class="line">    assert(dep[u]==dep[v]);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">22</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">if</span>(f[u][i]!=f[v][i])&#123;</div><div class="line">        u = f[u][i];</div><div class="line">        v = f[v][i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span>(u!=v)&#123;u=f[u][<span class="number">0</span>];v=f[v][<span class="number">0</span>];++cnt;&#125;</div><div class="line">    <span class="keyword">return</span> u;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> LCA(<span class="keyword">int</span> <span class="keyword">x</span>,<span class="keyword">int</span> <span class="keyword">y</span>)&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">pos</span>[lca(npos[<span class="keyword">x</span>],npos[<span class="keyword">y</span>])];</div><div class="line">&#125;</div><div class="line">inline void findlr(<span class="keyword">int</span> <span class="keyword">x</span>,<span class="keyword">int</span> &amp;l,<span class="keyword">int</span> &amp;r)&#123;</div><div class="line">    set&lt;<span class="keyword">int</span>&gt;::iterator it = st.lower_bound(<span class="keyword">x</span>),it2 = st.upper_bound(<span class="keyword">x</span>);</div><div class="line">    <span class="keyword">if</span>(it==st.begin()||it2==st.end())&#123;</div><div class="line">        l=*st.begin();</div><div class="line">        r=*st.rbegin();</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        --it;</div><div class="line">        l=*it;</div><div class="line">        r=*it2;</div><div class="line">    &#125;</div><div class="line">    //<span class="keyword">printf</span>(<span class="string">"x=%d l=%d,r=%d\n"</span>,<span class="keyword">x</span>,l,r);</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> deal(<span class="keyword">int</span> c,<span class="keyword">int</span> <span class="keyword">x</span>)&#123;</div><div class="line">    <span class="keyword">int</span> l,r,ans = <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span>(c==<span class="number">1</span>)&#123;</div><div class="line">        <span class="keyword">if</span>(st.find(<span class="keyword">x</span>)!=st.end())<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span>(st.begin()==st.end())&#123;</div><div class="line">            st.insert(<span class="keyword">x</span>);<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        findlr(<span class="keyword">x</span>,l,r);</div><div class="line">        ans = dst(<span class="keyword">x</span>) - dst(LCA(l,<span class="keyword">x</span>)) - dst(LCA(r,<span class="keyword">x</span>)) + dst(LCA(l,r));</div><div class="line">        st.insert(<span class="keyword">x</span>);</div><div class="line">        <span class="keyword">return</span> ans;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">if</span>(st.find(<span class="keyword">x</span>)==st.end())<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        st.erase(<span class="keyword">x</span>);</div><div class="line">        <span class="keyword">if</span>(st.empty())<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        findlr(<span class="keyword">x</span>,l,r);</div><div class="line">        ans = dst(<span class="keyword">x</span>) - dst(LCA(l,<span class="keyword">x</span>)) - dst(LCA(r,<span class="keyword">x</span>)) + dst(LCA(l,r));</div><div class="line">        <span class="keyword">return</span> -ans;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">    <span class="keyword">int</span> T;scanf(<span class="string">"%d"</span>,&amp;T);</div><div class="line">    rep(cas,<span class="number">1</span>,T)&#123;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;<span class="keyword">q</span>);</div><div class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>; dfscnt = <span class="number">1</span>;</div><div class="line">        st.clear();</div><div class="line">        memset(f,<span class="number">0</span>,sizeof(f));</div><div class="line">        memset(dist,<span class="number">0</span>,sizeof(dist));</div><div class="line">        memset(<span class="keyword">pos</span>,<span class="number">0</span>,sizeof(<span class="keyword">pos</span>));</div><div class="line">        memset(npos,<span class="number">0</span>,sizeof(npos));</div><div class="line">        memset(dep,<span class="number">0</span>,sizeof(dep));</div><div class="line">        rep(i,<span class="number">1</span>,n)</div><div class="line">            mp[i].clear();</div><div class="line">        rep(i,<span class="number">1</span>,n-<span class="number">1</span>)&#123;</div><div class="line">            <span class="keyword">int</span> u,v,w;</div><div class="line">            scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">            adde(u,v,w);</div><div class="line">        &#125;</div><div class="line">        dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">        <span class="keyword">printf</span>(<span class="string">"Case #%d:\n"</span>,cas);</div><div class="line">        rep(i,<span class="number">1</span>,<span class="keyword">q</span>)&#123;</div><div class="line">            <span class="keyword">int</span> c,<span class="keyword">x</span>;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;c,&amp;<span class="keyword">x</span>);</div><div class="line">            ans += deal(c,<span class="keyword">pos</span>[<span class="keyword">x</span>]);</div><div class="line">            <span class="keyword">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题意：&lt;br&gt;$n$个点构成的树，$q$个询问，要你维护一个集合，每个询问让你在集合中删除或者添加一个点，然后输出一个整数，为包含集合内所有点的最小生成树的大小&lt;/p&gt;
    
    </summary>
    
    
      <category term="HDU" scheme="http://tsstss123.github.io/tags/HDU/"/>
    
      <category term="DFS序" scheme="http://tsstss123.github.io/tags/DFS%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>C中的scanf与printf</title>
    <link href="http://tsstss123.github.io/2016/02/24/C-scanf-printf/"/>
    <id>http://tsstss123.github.io/2016/02/24/C-scanf-printf/</id>
    <published>2016-02-24T14:44:46.000Z</published>
    <updated>2016-02-24T14:50:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么这两个函数叫这个名字"><a href="#为什么这两个函数叫这个名字" class="headerlink" title="为什么这两个函数叫这个名字"></a>为什么这两个函数叫这个名字</h2><p>我们首先考虑一下这个问题，为什么这两个函数不叫scan和print</p>
<p>f-format<br>格式输入输出</p>
<h2 id="格式是什么"><a href="#格式是什么" class="headerlink" title="格式是什么"></a>格式是什么</h2><p>先看到两个函数的原型</p>
<a id="more"></a>
<hr>
<p>int scanf ( const char * format, … );</p>
<p><strong>Read formatted data from stdin</strong><br>Reads data from stdin and stores them according to the parameter format into the locations pointed by the additional arguments.</p>
<p>The additional arguments should point to already allocated objects of the type specified by their corresponding format specifier within the format string.</p>
<hr>
<p>int printf ( const char * format, … );</p>
<p><strong>Print formatted data to stdout</strong><br>Writes the C string pointed by format to the standard output (stdout). If format includes format specifiers (subsequences beginning with %), the additional arguments following format are formatted and inserted in the resulting string replacing their respective specifiers.</p>
<h2 id="scanf"><a href="#scanf" class="headerlink" title="scanf"></a>scanf</h2><p>举一个最简单的例子</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> a =<span class="number">1</span>, b =<span class="number">2</span>, c =<span class="number">3</span>;<span class="keyword">int</span> n = scanf(<span class="string">"%d %d %d"</span>, &amp;a, &amp;b, &amp;c);</div><div class="line"><span class="keyword">printf</span>(<span class="string">"%d\n"</span>, n );<span class="keyword">printf</span>(<span class="string">"%d, %d, %d"</span>, a, b, c);</div></pre></td></tr></table></figure>
<p>n保存了scanf的返回值<br>成功读取了几个变量就返回几，如果遇到错误则返回<strong>EOF</strong><br>先解释一下EOF</p>
<hr>
<h4 id="什么是EOF"><a href="#什么是EOF" class="headerlink" title="什么是EOF?"></a>什么是EOF?</h4><ul>
<li>一般被定义为整数-1</li>
<li>是系统给出的一个信号（并不存在于文件）告诉你<strong>没有数据</strong>可以再进行读取了</li>
</ul>
<h4 id="如何“制造”一个EOF"><a href="#如何“制造”一个EOF" class="headerlink" title="如何“制造”一个EOF?"></a>如何“制造”一个EOF?</h4><ul>
<li>Windows: Ctrl+Z + Enter</li>
<li>*nix: Ctrl+D</li>
</ul>
<hr>
<p>回到刚才的小程序，关键的一行代码<br><code>scanf(&quot;%d %d %d&quot;, &amp;a, &amp;b, &amp;c);</code><br>这个<strong>%d</strong>就是<strong>格式控制符</strong><br>还有很多其他的格式控制符，列举几个常用的</p>
<ul>
<li>%c 读入一个字符</li>
<li>%d 读入十进制整数</li>
<li>%i 读入十进制，八进制，十六进制整数</li>
<li>%o 读入八进制整数</li>
<li>%x,%X 读入十六进制整数</li>
<li>%c 读入一个字符</li>
<li>%s 读入一个字符串，遇空格、制表符或换行符结束。</li>
<li>%f,%F,%e,%E,%g,%G 用来输入float，可以用小数形式或指数形式输入。double是类似的</li>
<li>%p 读入一个指针</li>
<li>%u 读入一个无符号十进制整数</li>
<li>%n 至此已读入值的等价字符数</li>
<li>%[] <strong>正则表达式</strong></li>
<li>%% 读%符号</li>
</ul>
<p>对应每个</p>
<p>下面讲几个重要的</p>
<h3 id="i"><a href="#i" class="headerlink" title="%i"></a>%i</h3><p>我也没用过<br>单独拿出来说<br>大家都知道%d是输入一个整数。确切的说是输入一个十进制整数<br>这个标识符可以读入16进制与8进制的数并转化成十进制整数存储</p>
<h3 id="64位整数"><a href="#64位整数" class="headerlink" title="64位整数"></a>64位整数</h3><p>变量定义</p>
<ul>
<li>Windows: __int64 (gcc/高版本vs中貌似也可以用long long)</li>
<li>*nix: long long </li>
</ul>
<p>输出格式</p>
<ul>
<li>Windows: I64d</li>
<li>*nix: lld</li>
</ul>
<h3 id="long-double-类型"><a href="#long-double-类型" class="headerlink" title="long double 类型"></a>long double 类型</h3><p>long double 在C99之后成为正式的关键字<br>精度由编译器决定,有的是和double一样的8位,有的是10/12/16位<br>使用sizeof(long double)查看</p>
<p>使用<strong>%Lf</strong>或者<strong>%llf</strong></p>
<p>这些常用的格式控制符是scanf/printf都拥有相同功能的（把读入换成输出就行了）</p>
<hr>
<h3 id="除了格式控制符以外还能有什么呢"><a href="#除了格式控制符以外还能有什么呢" class="headerlink" title="除了格式控制符以外还能有什么呢"></a>除了格式控制符以外还能有什么呢</h3><ul>
<li>“空格”（包括tab和换行符）</li>
<li>不是格式控制符的普通字符</li>
</ul>
<p>遇到空格：不论有几个空格的效果都是一样的，作用是跳过缓冲区中的空格字符直到当前字符不是空格</p>
<p>普通字符：比较这个字符是不是等于下一个字符。如果是的话就读入，不是的话就停止读入（函数直接返回）</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> <span class="keyword">x</span>=-<span class="number">1</span>;</div><div class="line"><span class="keyword">int</span> n = scanf(<span class="string">" d%d"</span>,&amp;<span class="keyword">x</span>);</div><div class="line"><span class="keyword">printf</span>(<span class="string">"%d\n%d"</span>,n,<span class="keyword">x</span>);</div></pre></td></tr></table></figure>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> <span class="keyword">x</span>=<span class="number">0</span>;</div><div class="line"><span class="keyword">while</span>( scanf(<span class="string">"%d "</span>,&amp;<span class="keyword">x</span>) != EOF)&#123;</div><div class="line">	<span class="keyword">printf</span>(<span class="string">"%d\n"</span>,<span class="keyword">x</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="表达式贪心匹配"><a href="#表达式贪心匹配" class="headerlink" title="表达式贪心匹配"></a>表达式贪心匹配</h3><p>就是说每次匹配的数量尽可能的多，举个例子</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span> <span class="keyword">str</span>[<span class="number">10</span>];<span class="keyword">int</span> x;</div><div class="line">scanf(<span class="string">"%s:%d"</span>,<span class="keyword">str</span>,&amp;x);</div><div class="line">printf(<span class="string">"%s %d\n"</span>,<span class="keyword">str</span>,x);</div><div class="line"><span class="comment">//输入 ccpp:1234 7654321</span></div><div class="line"><span class="comment">//你预计输出 ccpp 1234</span></div><div class="line"><span class="comment">//但事实上输出 ccpp:1234 [未定义整数]</span></div></pre></td></tr></table></figure>
<h4 id="小测试"><a href="#小测试" class="headerlink" title="小测试"></a>小测试</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">char a[]=<span class="string">"%d,%d"</span>,b[]=<span class="string">"%d , %d"</span>,c[]=<span class="string">"%d ,%d"</span>; <span class="keyword">int</span> <span class="keyword">x</span>,<span class="keyword">y</span>;</div><div class="line"><span class="keyword">while</span>( scanf( a, &amp;<span class="keyword">x</span>, &amp;<span class="keyword">y</span>)!= EOF)&#123;</div><div class="line">	<span class="keyword">printf</span>(<span class="string">"%d, %d\n"</span>,<span class="keyword">x</span>,<span class="keyword">y</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>,<span class="number">2</span></div><div class="line"><span class="symbol">3 </span>,<span class="number">4</span></div><div class="line"><span class="number">5</span>, <span class="number">6</span></div><div class="line"><span class="symbol">7 </span>, <span class="number">8</span></div><div class="line"><span class="symbol">9 </span><span class="number">10</span></div></pre></td></tr></table></figure>
<h3 id="正则表达式的使用"><a href="#正则表达式的使用" class="headerlink" title="正则表达式的使用"></a>正则表达式的使用</h3><p>由于这个贪心匹配的规则，让字符串的匹配不是那么容易直接得到想要的结果，这个时候就要用上正则表达式来进行高级匹配</p>
<p>插播一下正则表达式学习资源：<br><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">著名的正则表达式三十分钟入门</a><br><a href="http://snowcoal.com/tools/regex/reg" target="_blank" rel="external">在线测试</a></p>
<p>最简单的应用</p>
<p>定制自己的扫描集<code>%[abc]、%[a-z]、%[^abc]、%[^a-z]</code>，比isdigit()、isalpha()更加灵活。[]内是匹配的字符,^表示求反集。</p>
<p>举个例子</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span> <span class="keyword">str</span>[<span class="number">10</span>],str2[<span class="number">10</span>];<span class="keyword">int</span> x=<span class="number">0</span>;</div><div class="line">scanf(<span class="string">"%[^#]%s"</span>,<span class="keyword">str</span>,str2);</div><div class="line">printf(<span class="string">"%s|%s"</span>,<span class="keyword">str</span>,str2);</div><div class="line">\\输入 ccpp <span class="number">2</span><span class="meta">#uestc</span></div><div class="line">\\输出 ccpp <span class="number">2</span>|<span class="meta">#uestc</span></div></pre></td></tr></table></figure>
<p>这个表达式的意思是匹配到第一个不是’#’号的内容为止<br>很容易发现这个’#’并没有被丢弃，只是匹配停止了而已</p>
<p>前两天提到一个问题，如何用scanf读取一整行内容<br>很容易想到使用<code>%[^\n]</code>即读取到换行符为止<br>那么问题就来了</p>
<ul>
<li>历史遗留问题：<code>\n</code>与<code>\r</code></li>
<li>这一行并没有真正的被读取</li>
</ul>
<p>不管怎么说，<code>\n</code>还没有地方放呢。如果你以为这一行已经读完了，Boom<br>我们要尽可能的让程序<strong>鲁棒</strong><br>所以推荐使用fgets(,,)安全方便快捷</p>
<p>以上先放一边，继续看格式控制符</p>
<hr>
<p>现在告诉你一个格式控制符完整的样子<br><code>%[*][width][length]specifier</code><br>*号的作用是读入这个格式控制符代表的数但是不存储（非常有用）<br>width是一个整数用来控制这次读入的字符长度<br>length有这么几个可选值：hh, h, l, ll, j, z, t, L 用来操纵读入数据在内存中的长度</p>
<blockquote>
<p>注意：以上三个部分都是可选的</p>
</blockquote>
<p>那么格式控制符基本介绍完啦</p>
<hr>
<h3 id="如何输入多组数据"><a href="#如何输入多组数据" class="headerlink" title="如何输入多组数据"></a>如何输入多组数据</h3><p>当输入的个数你无法预先只知道的时候，我们就要用到刚刚说的EOF啦<br>我们来看一段程序</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> x = <span class="number">0</span>;<span class="keyword">while</span>( <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x) != EOF )&#123;	... </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>看起来非常完美（并不<br>我们看看能不能制造一点问题出来</p>
<p>输入一些非数字进去看看会是神马结果：%T@#$@KI</p>
<p>进入了死循环…</p>
<p>为什么会这样呢</p>
<p>因为每一次的scanf都失败了，返回了0，然而程序并没有停下来…</p>
<p>来一段学术一点的文字</p>
<p><strong>scanf函数是以删除的方式从缓冲区读取数据(缓冲区中存储来自标准输入的数据)。</strong>如果缓冲区是空的，就阻塞之，等待从键盘输入；并且scanf还能对数字输入忽略先导的空白符，如\n\t和空格等(注意，对字符输入并不忽略先导字符，这个也是很自然的道理，因为\n\t和空格在字符中都是合法的字符)。</p>
<p>聪明的你一定已经知道如何正确的读取多组数据了吧</p>
<h2 id="printf"><a href="#printf" class="headerlink" title="printf"></a>printf</h2><h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> <span class="keyword">count</span> = printf(<span class="string">"This is a test!\n"</span>);</div><div class="line">printf(<span class="string">"%d\n"</span>, <span class="keyword">count</span>);</div><div class="line">\\<span class="keyword">This</span> is a test!</div><div class="line">\\<span class="number">16</span></div></pre></td></tr></table></figure>
<p>返回输出字符的数量</p>
<h3 id="格式控制符"><a href="#格式控制符" class="headerlink" title="格式控制符"></a>格式控制符</h3><p>我们已经有了scanf的知识了，这部分就很简单了</p>
<p><code>%[flags][width][.precision][length]specifier</code><br><code>%[标志][宽度][.精度][长度修饰]类型</code></p>
<p>稍微比scanf多一点东西。比较我们要控制输出嘛</p>
<h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><p>与scanf基本相同，只是简单类型不需要再传地址而是传值了<br>那么我来讲几个不同的</p>
<blockquote>
<p>C99加入了一坨东西，这里不说了，就现在来说没什么意思</p>
<p>浮点数的默认保留小数点后的6位（是怎么保留的呢，我们之后再讲）</p>
</blockquote>
<h4 id="f问题"><a href="#f问题" class="headerlink" title="%f问题"></a>%f问题</h4><p>读入的时候float与double是不同的控制符，但是在原来的标准中输出统一用%f，在某些编译器上用%lf输出double会RE/WA</p>
<h4 id="p问题"><a href="#p问题" class="headerlink" title="%p问题"></a>%p问题</h4><p>输出指针的十六进制标准格式</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int a=<span class="number">0</span>;</div><div class="line">printf(<span class="string">"%p"</span>, &amp;a);</div><div class="line">\\<span class="number">0x7fff5cdf57ec</span></div><div class="line">\\我是<span class="number">64</span>位机器</div></pre></td></tr></table></figure>
<h4 id="n问题"><a href="#n问题" class="headerlink" title="%n问题"></a>%n问题</h4><p>这个并不是输出标识符，而是需要你传给printf一个指向int类型的指针，printf会放入一个整数表示已经输出了多少个字符</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">char str[]=<span class="string">"uestc"</span>;</div><div class="line"><span class="keyword">int</span> len;</div><div class="line"><span class="keyword">printf</span>(<span class="string">"%s%n-ccpc\n"</span>, str, &amp;len);</div><div class="line"><span class="keyword">printf</span>(<span class="string">"%d\n"</span>,len);</div><div class="line">\\uestc-ccpc</div><div class="line">\\<span class="number">5</span></div></pre></td></tr></table></figure>
<h3 id="宽度"><a href="#宽度" class="headerlink" title="宽度"></a>宽度</h3><p>有两种选择</p>
<h4 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h4><p>指定了输出宽度</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">int a=<span class="number">2</span>, b=<span class="number">10</span>;</div><div class="line">printf(<span class="string">"%d%5d"</span>, a, b);</div><div class="line">\\<span class="number">2</span>   <span class="number">10</span></div></pre></td></tr></table></figure>
<h4 id="星号"><a href="#星号" class="headerlink" title="星号"></a>星号</h4><p>由一个参数决定输出宽度</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> a=<span class="number">2</span>, <span class="built_in">width</span>=<span class="number">3</span>;</div><div class="line">printf(<span class="string">"%*d"</span>,<span class="built_in">width</span>, a);</div><div class="line">\\  <span class="number">2</span></div></pre></td></tr></table></figure>
<h3 id="精度"><a href="#精度" class="headerlink" title="精度"></a>精度</h3><p>这个参数是控制浮点数精度的，经常搭配宽度使用，同样可以用星号来用参数决定宽度，这里不再赘述</p>
<p>重点是：程序是如何进行舍入的</p>
<h4 id="先看一个例子"><a href="#先看一个例子" class="headerlink" title="先看一个例子"></a>先看一个例子</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.805</span>, 9<span class="selector-class">.8051</span>);</div><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.815</span>, 9<span class="selector-class">.8151</span>);</div><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.825</span>, 9<span class="selector-class">.8251</span>);</div><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.835</span>, 9<span class="selector-class">.8351</span>);</div><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.845</span>, 9<span class="selector-class">.8451</span>);</div><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.855</span>, 9<span class="selector-class">.8551</span>);</div><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.865</span>, 9<span class="selector-class">.8651</span>);</div><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.875</span>, 9<span class="selector-class">.8751</span>);</div><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.885</span>, 9<span class="selector-class">.8851</span>);</div><div class="line"><span class="selector-tag">printf</span>("%<span class="selector-class">.2f</span>, %<span class="selector-class">.2f</span>\<span class="selector-tag">n</span>", 9<span class="selector-class">.895</span>, 9<span class="selector-class">.8951</span>);</div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">9<span class="selector-class">.80</span>, 9<span class="selector-class">.81</span></div><div class="line">9<span class="selector-class">.81</span>, 9<span class="selector-class">.82</span></div><div class="line">9<span class="selector-class">.82</span>, 9<span class="selector-class">.83</span></div><div class="line">9<span class="selector-class">.84</span>, 9<span class="selector-class">.84</span></div><div class="line">9<span class="selector-class">.85</span>, 9<span class="selector-class">.85</span></div><div class="line">9<span class="selector-class">.86</span>, 9<span class="selector-class">.86</span></div><div class="line">9<span class="selector-class">.87</span>, 9<span class="selector-class">.87</span></div><div class="line">9<span class="selector-class">.88</span>, 9<span class="selector-class">.88</span></div><div class="line">9<span class="selector-class">.88</span>, 9<span class="selector-class">.89</span></div><div class="line">9<span class="selector-class">.89</span>, 9<span class="selector-class">.90</span></div></pre></td></tr></table></figure>
<h4 id="Banker’s-rounding"><a href="#Banker’s-rounding" class="headerlink" title="Banker’s rounding"></a>Banker’s rounding</h4><blockquote>
<ol>
<li>被修约的数字等于或小于4时，该数字舍去；</li>
<li>被修约的数字等于或大于6时，则进位；</li>
<li>被修约的数字等于5时，要看5前面的数字，若是奇数则进位，若是偶数则将5舍掉，即修约后末尾数字都成为偶数；若5的后面还有不为“0”的任何数，则此时无论5的前面是奇数还是偶数，均应进位。</li>
</ol>
</blockquote>
<p>回到刚才的输出结果</p>
<p>貌似并不完全符合这个规律，不管5前面是奇数还是偶数，都出现了进位和舍去的情况。猜想这应该与浮点型在计算机中采用二进制存储有关。对有些无法由二进制有限表示的小数，超出浮点数尾数的部分将被直接舍去，造成了输出不稳定的现象。但是这种解释将使数值在Banker’s rounding 的基础上一定变小，而显然9.845变成9.85并不满足，原因不明。当然也有可能超出浮点数尾部的部分并不是直接舍去，而也是采取了四舍五入的方法，暂时没有找到资料支撑。</p>
<p>如果真的需要四舍五入，我们在数字不大的时候用math库中的round()，在数字很大的时候用sprintf/sscanf手工处理</p>
<h3 id="标志位"><a href="#标志位" class="headerlink" title="标志位"></a>标志位</h3><h4 id=""><a href="#" class="headerlink" title="-"></a>-</h4><p>配合宽度使用，向左对齐</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">char <span class="keyword">buf[] </span>= <span class="string">"Test"</span><span class="comment">;</span></div><div class="line">printf(<span class="string">"%-10s"</span>)<span class="comment">;</span></div><div class="line">\\<span class="string">"Test      "</span>(<span class="number">6</span>个空格)</div></pre></td></tr></table></figure>
<h4 id="-1"><a href="#-1" class="headerlink" title="+"></a>+</h4><p>数值类型专用，强制输出正负号，可以与上面的‘-’合用</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">double</span> a = <span class="number">3.4567</span>:</div><div class="line"><span class="built_in">printf</span>(<span class="string">"%-+8.2lf"</span>, a); </div><div class="line">\\<span class="string">"+3.46   "</span></div></pre></td></tr></table></figure>
<h4 id="0"><a href="#0" class="headerlink" title="0"></a>0</h4><p>若前半部分有空白，补充前导零</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> x = <span class="number">122</span>;</div><div class="line"><span class="built_in">printf</span>(<span class="string">"%05u"</span>, x); </div><div class="line">\\<span class="string">"00122"</span></div></pre></td></tr></table></figure>
<h4 id="井号"><a href="#井号" class="headerlink" title="井号"></a>井号</h4>
只对于 %o, %x 有用, 加上进制的前缀
%#o前缀为0, %#x前缀为 0x, %#X前缀为 0X

<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">unsigned <span class="keyword">int</span> a = <span class="number">15</span>;</div><div class="line"><span class="keyword">printf</span>(<span class="string">"%u %#o %#X"</span>, a, a, a);</div><div class="line">\\<span class="string">"15 017 0XF"</span></div></pre></td></tr></table></figure>
<h4 id="空白"><a href="#空白" class="headerlink" title="%(空白)"></a>%(空白)</h4><p>数值专用，不能与‘+’合用。若输出为正数，留出一个空格的符号位</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">int a=<span class="number">10</span><span class="comment">;</span></div><div class="line">printf(<span class="string">"% -5d"</span>)<span class="comment">;</span></div><div class="line">\\<span class="string">" 10  "</span></div></pre></td></tr></table></figure>
<hr>
<p>那么scanf/printf的主要内容就讲完了</p>
<hr>
<h2 id="最后来吹个B"><a href="#最后来吹个B" class="headerlink" title="最后来吹个B"></a>最后来吹个B</h2><p>关于I/O流的<br>现象不是很好重现（现在机器太快了…），对平台要求比较高（说好听点就是比较隐蔽），就当是吹B了</p>
<p>我们知道系统给我们提供了三种标准I/O流: stdin,stdout,stderr<br>当然了，和文件流操作上是基本统一了</p>
<p>先引入<strong>缓冲区</strong>这个概念</p>
<p>比如我想把一篇文章以字符序列的方式输出到计算机显示器屏幕上，那么我的程序内存作为数据源而显示器驱动程序作为数据目标，如果数据源直接对数据目标发送数据的话。数据目标获得第一个字符，便将它显示。然后从端口读取下一个字符，可是这时就不能保证数据源向端口发送的恰好是第二个字符（也许是第三个，而第二个已经在数据目标显示时发送过了）。这样的话就不能保证输出的数据能完整的被数据目标所接受并处理。</p>
<p>为了解决这个问题，我们需要在数据源与数据目标中间放置一个保存完整数据内容的区域，那就是 “缓冲区”。这样的话， 数据源可以不考虑数据目标正在处理哪部分数据，只要把数据输出到缓冲区就可以了，数据目标也可以不考虑数据源的发送频率，只是从缓冲区中依次取出下一个数据。从而保证了数据发送的完整性，同时也提高了程序的效率。为什么说提高了效率呢？首先是两边操作不需要同步，再者也方便系统做对齐之类的工作，凑够一定量的字符一口气发出去。（瞎比乱说的）</p>
<p>回到这三种I/O流上来。对于输入，只有我们在按了回车键之后，屏幕上输入的内容才一次性的被传入缓冲区。（有人问：能不能实时的监测键盘输入呢？答案是肯定的。conin.h里的getch(),getche()就是这样的，直接操作控制台，和stdin没有任何关系）这就可以解释刚刚提到的scanf死循环啊什么的问题了。scanf并不是直接从屏幕上读取，而是从缓冲区内读取数据</p>
<p>那么同理，我们的输出也不是直接发到屏幕上的，而是发送到缓冲区内的。但是为什么我们看起来就像直接看到了呢？（因为计算机快啊。。。）那么我们想想，会不会存在一个问题：程序结束了，输出缓冲区的内容还没有完全到达输出流；或者是输出printf后无法立即接收到反馈信息呢（内部交互的程序）</p>
<p>所以在C语言中如果用的文件/重定向的标准输出，程序结束之前最好fclose(stdout);<br>如果写程序之间的交互要用fflush(stdout);当然你用cout&lt;&lt;endl;的时候就直接清除缓冲区了<br>清除stdin缓冲区用gets()</p>
<hr>
<p>最后…</p>
<p><strong>以上都是前人的经验,踩过的坑</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么这两个函数叫这个名字&quot;&gt;&lt;a href=&quot;#为什么这两个函数叫这个名字&quot; class=&quot;headerlink&quot; title=&quot;为什么这两个函数叫这个名字&quot;&gt;&lt;/a&gt;为什么这两个函数叫这个名字&lt;/h2&gt;&lt;p&gt;我们首先考虑一下这个问题，为什么这两个函数不叫scan和print&lt;/p&gt;
&lt;p&gt;f-format&lt;br&gt;格式输入输出&lt;/p&gt;
&lt;h2 id=&quot;格式是什么&quot;&gt;&lt;a href=&quot;#格式是什么&quot; class=&quot;headerlink&quot; title=&quot;格式是什么&quot;&gt;&lt;/a&gt;格式是什么&lt;/h2&gt;&lt;p&gt;先看到两个函数的原型&lt;/p&gt;
    
    </summary>
    
    
      <category term="C" scheme="http://tsstss123.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #15</title>
    <link href="http://tsstss123.github.io/2016/02/22/UESTC-2016-Winter-Training-15/"/>
    <id>http://tsstss123.github.io/2016/02/22/UESTC-2016-Winter-Training-15/</id>
    <published>2016-02-22T11:53:33.000Z</published>
    <updated>2016-02-22T13:05:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>最后一场了，做的结果还可以<br>AB是纯水签到题，不说了</p>
<a id="more"></a>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>题意：<br>你有10000个物品，原价为ci，你有10w个关系，某个物品可以由某两个不同的物品合成而来（保证这三个物品两辆不同）。求得到1号物品的最低消费</p>
<p>主要是因为有环。无环或者一个环都可以直接dfs，有多个环就只能SPFA了。设a可以由xy合成而来，则加边x-y-&gt;a,y-x-&gt;a</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">const <span class="keyword">int</span> maxn = <span class="number">11000</span>;</div><div class="line">typedef long long <span class="keyword">int</span> ll;</div><div class="line"><span class="keyword">int</span> n,<span class="keyword">m</span>,w[maxn],vis[maxn];</div><div class="line">ll cst[maxn];</div><div class="line">struct craft&#123;</div><div class="line">	<span class="keyword">int</span> <span class="keyword">y</span>,a;</div><div class="line">&#125;;</div><div class="line">vector&lt;craft&gt; mp[maxn];</div><div class="line">queue&lt;<span class="keyword">int</span>&gt; <span class="keyword">q</span>;<span class="keyword">int</span> in<span class="string">q[maxn]</span>;</div><div class="line">void spfa()&#123;</div><div class="line">	rep(i,<span class="number">1</span>,n)q.push(i),in<span class="string">q[i]</span>=<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> <span class="keyword">x</span>=q.front();q.pop();in<span class="string">q[x]</span>=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mp[<span class="keyword">x</span>].size();++i)&#123;</div><div class="line">			<span class="keyword">int</span> <span class="keyword">y</span>=mp[<span class="keyword">x</span>][i].y,a=mp[<span class="keyword">x</span>][i].a;</div><div class="line">			<span class="keyword">if</span>(cst[<span class="keyword">x</span>]+cst[<span class="keyword">y</span>]&lt;cst[a])&#123;</div><div class="line">				cst[a]=cst[<span class="keyword">x</span>]+cst[<span class="keyword">y</span>];</div><div class="line">				<span class="keyword">if</span>(!in<span class="string">q[a]</span>)&#123;q.push(a);in<span class="string">q[a]</span>=<span class="number">1</span>;&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	freopen(<span class="string">"dwarf.in"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	freopen(<span class="string">"dwarf.out"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;<span class="keyword">m</span>);</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;w[i]);cst[i]=w[i];</div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,<span class="keyword">m</span>)&#123;</div><div class="line">		<span class="keyword">int</span> a,<span class="keyword">x</span>,<span class="keyword">y</span>;</div><div class="line">		scanf(<span class="string">"%d%d%d"</span>,&amp;a,&amp;<span class="keyword">x</span>,&amp;<span class="keyword">y</span>);</div><div class="line">		mp[<span class="keyword">x</span>].push_back((craft)&#123;<span class="keyword">y</span>,a&#125;);</div><div class="line">		mp[<span class="keyword">y</span>].push_back((craft)&#123;<span class="keyword">x</span>,a&#125;);</div><div class="line">	&#125;</div><div class="line">	spfa();</div><div class="line">	cout&lt;&lt;cst[<span class="number">1</span>]&lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>题意：<br>你有一个10w个方块排成一排的区域，每次给你一个1x1或者1x2的方块放在这上面，如果放不下了你可以清除掉上面的任意方块再放这个上去。每次放完时，以当时存在的方块数量作为得分。求问最大的得分是多少</p>
<p>可以很容易的看出策略：如果放不下了，就去掉1x2的放1x1的，否则不会更优。不需要模拟，只需要保存你拥有的两种方块的数量即可</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	freopen(<span class="string">"energy.in"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	freopen(<span class="string">"energy.out"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">	<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> n,a=<span class="number">0</span>,b=<span class="number">0</span>,c=<span class="number">0</span>;scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%1d"</span>,&amp;c)==<span class="number">1</span>)&#123;</div><div class="line">		<span class="keyword">if</span>(c==<span class="number">1</span>)a++;</div><div class="line">		<span class="keyword">else</span> b++;</div><div class="line">		<span class="keyword">if</span>(a+<span class="number">2</span>*b&gt;n)&#123;</div><div class="line">			<span class="keyword">if</span>(b)b--;</div><div class="line">			<span class="keyword">else</span> a--;</div><div class="line">		&#125;</div><div class="line">		ans+=a+b;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>题意：<br>一个上飞机坐座位的过程。每个飞机每一排有6个位置，若某人要去坐在第k排，那么此时他登机的麻烦程度记为前k-1排已经入座的人数。乘客到来的顺序是给定的。你可以把所有的排分成连续的k组（不超过50组），按组登机每次坐在同一组内的人按相对顺序登机，他的麻烦程度只考虑这一组在此人之前入座的前排的人数，这样每组之间相对独立。求所有人的麻烦程度总和最小的值</p>
<p>分成k段是个很简单的DP模型，难点在O(n^2)的预处理。很容易想到如果有cost[i][j]表示第i行到j行分成一段这些人的麻烦程度的总和，就可以随便DP了，现在我们来预处理这个cost数组</p>
<p>考虑每个人坐进座位的过程，想象它直接坐到位置上，再一排排向前检查计算麻烦程度。假设入座pos位置，检查到某一排，如第k排有r个人，那么cost[k][pos],cost[k][pos+1],…,cost[k][n]都要加上r。这就转化成了一个前缀和问题。我们只要在cost[k][pos]+=r 最后在一口气做一下前缀和即可</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</div><div class="line">const int maxn = <span class="number">1010</span>;</div><div class="line">int n,s,k,cost<span class="string">[maxn]</span><span class="string">[maxn]</span>,dp<span class="string">[maxn]</span><span class="string">[55]</span>,a<span class="string">[maxn]</span>,sit<span class="string">[maxn]</span>;</div><div class="line">int dfs(int ed,int ct)&#123;</div><div class="line">	if(dp<span class="string">[ed]</span><span class="string">[ct]</span>!=-<span class="number">1</span>)return dp<span class="string">[ed]</span><span class="string">[ct]</span>;</div><div class="line">	if(ct==<span class="number">1</span>)return cost<span class="string">[1]</span><span class="string">[ed]</span>;</div><div class="line">	int tmp=<span class="number">1000000007</span>;</div><div class="line">	rep(i,<span class="number">1</span>,ed-<span class="number">1</span>)tmp=min(tmp,dfs(i,ct-<span class="number">1</span>)+cost<span class="string">[i+1]</span><span class="string">[ed]</span>);</div><div class="line">	return dp<span class="string">[ed]</span><span class="string">[ct]</span>=tmp;</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	freopen(<span class="string">"flight.in"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	freopen(<span class="string">"flight.out"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">	scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;s,&amp;k);</div><div class="line">	memset(dp,-<span class="number">1</span>,sizeof(dp));</div><div class="line">	rep(i,<span class="number">1</span>,n)scanf(<span class="string">"%d"</span>,&amp;a<span class="string">[i]</span>);</div><div class="line">	rep(ct,<span class="number">1</span>,n)&#123;</div><div class="line">		int x=a<span class="string">[ct]</span>,cnt=<span class="number">0</span>;</div><div class="line">		for(int p=x-<span class="number">1</span>;p;--p)&#123;</div><div class="line">			cnt+=sit<span class="string">[p]</span>;</div><div class="line">			cost<span class="string">[p]</span><span class="string">[x]</span>+=cnt;</div><div class="line">		&#125;</div><div class="line">		sit<span class="string">[x]</span>++;</div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,s)</div><div class="line">		rep(j,i+<span class="number">1</span>,s)</div><div class="line">			cost<span class="string">[i]</span><span class="string">[j]</span>+=cost<span class="string">[i]</span><span class="string">[j-1]</span>;</div><div class="line">	cout&lt;&lt;dfs(s,k)&lt;&lt;endl;</div><div class="line">	return <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>题意：<br>
在一个$W*H$的大矩形中放置$w*h$的小矩形，要求一个不重叠且再也不能继续放置小矩形的方案使得小矩形的数量最少。
<br>考虑一下间距，简单推一下公式就好了。</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	freopen(<span class="string">"garage.in"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	freopen(<span class="string">"garage.out"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">	<span class="keyword">int</span> W,H,w,h;cin&gt;&gt;W&gt;&gt;H&gt;&gt;w&gt;&gt;h;</div><div class="line">	<span class="keyword">int</span> x=W/(<span class="number">2</span>*w);<span class="keyword">if</span>(W%(<span class="number">2</span>*w)&gt;=w)++x;</div><div class="line">	<span class="keyword">int</span> y=H/(<span class="number">2</span>*h);<span class="keyword">if</span>(H%(<span class="number">2</span>*h)&gt;=h)++y;</div><div class="line">	cout&lt;&lt;x*y&lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后一场了，做的结果还可以&lt;br&gt;AB是纯水签到题，不说了&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 7</title>
    <link href="http://tsstss123.github.io/2016/02/15/Educational-Codeforces-Round-7/"/>
    <id>http://tsstss123.github.io/2016/02/15/Educational-Codeforces-Round-7/</id>
    <published>2016-02-15T14:35:34.000Z</published>
    <updated>2016-02-15T14:59:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>有几个非常有趣的题目</p>
<a id="more"></a>
<h2 id="C-Not-Equal-on-a-Segment"><a href="#C-Not-Equal-on-a-Segment" class="headerlink" title="C. Not Equal on a Segment"></a>C. Not Equal on a Segment</h2><p>题意：<br>给你n个数，每个询问带有l,r,x表示询问[l,r]区间中任意一个值不等于x的位置，不存在输出-1</p>
<p>做法有很多，我认为两种有趣的</p>
<p>线段树维护，找到区间中的最大最小值，复杂度nlgn</p>
<p>还有预处理就是f[i]表示从左向右第一个不等于第i个的是哪个位置，每次询问O(1)解决</p>
<h2 id="D-Optimal-Number-Permutation"><a href="#D-Optimal-Number-Permutation" class="headerlink" title="D. Optimal Number Permutation"></a>D. Optimal Number Permutation</h2><p>题意：<br>给你一个平面上的点，要求构造使得题目中s值最小</p>
<p>观察后发现可以使得乘积的后面那一项等于0</p>
<h2 id="E-Ants-in-Leaves"><a href="#E-Ants-in-Leaves" class="headerlink" title="E. Ants in Leaves"></a>E. Ants in Leaves</h2><p>题意：<br>每个叶子节点上有一个蚂蚁，每秒向上爬，除了根以外每个点最多一个蚂蚁，问最少多少步能够使得所有的蚂蚁到根。</p>
<p>反过来想，每个根节点的儿子每秒能发出一个蚂蚁，策略是离这个点越远的儿子越先发出，dfs出所有的儿子的距离算一下就可以了。</p>
<h2 id="F-The-Sum-of-the-k-th-Powers"><a href="#F-The-Sum-of-the-k-th-Powers" class="headerlink" title="F. The Sum of the k-th Powers"></a>F. The Sum of the k-th Powers</h2><p>题意：<br>多项式的和。。看题解吧<br>杜教也有论文《多项式及求和》<br><a href="http://www.codeforces.com/blog/entry/23442" target="_blank" rel="external">戳这里</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有几个非常有趣的题目&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #14</title>
    <link href="http://tsstss123.github.io/2016/02/15/UESTC-2016-Winter-Training-14/"/>
    <id>http://tsstss123.github.io/2016/02/15/UESTC-2016-Winter-Training-14/</id>
    <published>2016-02-15T13:47:12.000Z</published>
    <updated>2016-02-15T14:32:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>大家好像都去过年了。。这场潘爷非常的劲啊<br>构造智商题专场</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意：<br>皇帝在山顶上住着，山下有n个村庄绕着山排了一圈。皇帝想去出去玩。线路的要求是，每一步皇帝有几个选择：从山顶上到任意一个村庄去，从任意一个村庄回到山顶，从某个村庄到相邻的另一个村庄去，线路总长度是k步。问你有多少种方案，需要上高精度。</p>
<p>一个非常好的DP状态优化题。<br>直接能想到的是DP[i][j]表示路线的第j步停在第i个点上的方案数量。然后三种转移，On时间。显然要TLE+MLE<br>观察一下发现，不论是DP中还是表示中，山下的所有村庄都是等价的，所以简化状态DP[i][0/1]表示第i步为结尾的路径上是山顶还是村庄，对i进行滚动数组后就只要4个数了，OK<br>（答案貌似有接近10000位）</p>
<p>转移方程看代码</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div></pre></td><td class="code"><pre><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;cstdio&gt;</div><div class="line">#include&lt;cstdlib&gt;</div><div class="line">#include&lt;cstring&gt;</div><div class="line">#include&lt;<span class="keyword">string</span>&gt;</div><div class="line">#define rep(i,a,b) <span class="keyword">for</span>(<span class="keyword">int</span> i=a;i&lt;=b;++i)</div><div class="line">using namespace std;</div><div class="line"><span class="comment">/*</span></div><div class="line">* 完全大数模板</div><div class="line">* 输出cin&gt;&gt;a</div><div class="line">* 输出a.print();</div><div class="line">* 注意这个输入不能自动去掉前导0的，可以先读入到char数组，去掉前导0，再用构造函数。</div><div class="line">*/</div><div class="line">#define MAXN <span class="number">9999</span></div><div class="line">#define MAXSIZE <span class="number">1010</span></div><div class="line">#define DLEN <span class="number">4</span></div><div class="line"></div><div class="line">class BigNum</div><div class="line">&#123;</div><div class="line">	private:</div><div class="line">	<span class="keyword">int</span> a[<span class="number">1900</span>];  <span class="comment">//可以控制大数的位数</span></div><div class="line">	<span class="keyword">int</span> <span class="built_in">len</span>;</div><div class="line">	public:</div><div class="line">	BigNum()&#123;<span class="built_in">len</span>=<span class="number">1</span>;memset(a,<span class="number">0</span>,sizeof(a));&#125;	<span class="comment">//构造函数</span></div><div class="line">	BigNum(<span class="keyword">const</span> <span class="keyword">int</span>);	<span class="comment">//将一个int类型的变量转化成大数</span></div><div class="line">	BigNum(<span class="keyword">const</span> char*);	<span class="comment">//将一个字符串类型的变量转化为大数</span></div><div class="line">	BigNum(<span class="keyword">const</span> BigNum &amp;); <span class="comment">//拷贝构造函数</span></div><div class="line">	BigNum &amp;operator=(<span class="keyword">const</span> BigNum &amp;); <span class="comment">//重载赋值运算符，大数之间进行赋值运算</span></div><div class="line">	friend istream&amp; operator&gt;&gt;(istream&amp;,BigNum&amp;);	<span class="comment">//重载输入运算符</span></div><div class="line">	friend ostream&amp; operator&lt;&lt;(ostream&amp;,BigNum&amp;);	<span class="comment">//重载输出运算符</span></div><div class="line"></div><div class="line">	BigNum operator+(<span class="keyword">const</span> BigNum &amp;)<span class="keyword">const</span>;  <span class="comment">//重载加法运算符，两个大数之间的相加运算</span></div><div class="line">	BigNum operator-(<span class="keyword">const</span> BigNum &amp;)<span class="keyword">const</span>;  <span class="comment">//重载减法运算符，两个大数之间的相减运算</span></div><div class="line">	BigNum operator*(<span class="keyword">const</span> BigNum &amp;)<span class="keyword">const</span>;  <span class="comment">//重载乘法运算符，两个大数之间的相乘运算</span></div><div class="line">	BigNum operator/(<span class="keyword">const</span> <span class="keyword">int</span> &amp;)<span class="keyword">const</span>;	<span class="comment">//重载除法运算符，大数对一个整数进行相除</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	BigNum operator^(<span class="keyword">const</span> <span class="keyword">int</span> &amp;)<span class="keyword">const</span>;	<span class="comment">//大数的n次方运算</span></div><div class="line">	<span class="keyword">int</span> operator%(<span class="keyword">const</span> <span class="keyword">int</span> &amp;)<span class="keyword">const</span>;	<span class="comment">//大数对一个int类型的变量进行取模运算</span></div><div class="line">	<span class="keyword">bool</span> operator&gt;(<span class="keyword">const</span> BigNum &amp;T)<span class="keyword">const</span>;	<span class="comment">//大数和另一个大数的大小比较</span></div><div class="line">	<span class="keyword">bool</span> operator&gt;(<span class="keyword">const</span> <span class="keyword">int</span> &amp;t)<span class="keyword">const</span>;	<span class="comment">//大数和一个int类型的变量的大小比较</span></div><div class="line"></div><div class="line">	void <span class="built_in">print</span>();	<span class="comment">//输出大数</span></div><div class="line">&#125;;</div><div class="line">BigNum::BigNum(<span class="keyword">const</span> <span class="keyword">int</span> b)	<span class="comment">//将一个int类型的变量转化为大数</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> c,d=b;</div><div class="line">	<span class="built_in">len</span>=<span class="number">0</span>;</div><div class="line">	memset(a,<span class="number">0</span>,sizeof(a));</div><div class="line">	while(d&gt;MAXN)</div><div class="line">	&#123;</div><div class="line">		c=d-(d/(MAXN+<span class="number">1</span>))*(MAXN+<span class="number">1</span>);</div><div class="line">		d=d/(MAXN+<span class="number">1</span>);</div><div class="line">		a[<span class="built_in">len</span>++]=c;</div><div class="line">	&#125;</div><div class="line">	a[<span class="built_in">len</span>++]=d;</div><div class="line">&#125;</div><div class="line">BigNum::BigNum(<span class="keyword">const</span> char *s)  <span class="comment">//将一个字符串类型的变量转化为大数</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> t,k,index,L,i;</div><div class="line">	memset(a,<span class="number">0</span>,sizeof(a));</div><div class="line">	L=strlen(s);</div><div class="line">	<span class="built_in">len</span>=L/DLEN;</div><div class="line">	<span class="keyword">if</span>(L%DLEN)<span class="built_in">len</span>++;</div><div class="line">	index=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i=L<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i-=DLEN)</div><div class="line">	&#123;</div><div class="line">		t=<span class="number">0</span>;</div><div class="line">		k=i-DLEN+<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(k&lt;<span class="number">0</span>)k=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=k;j&lt;=i;j++)</div><div class="line">			t=t*<span class="number">10</span>+s[j]-<span class="string">'0'</span>;</div><div class="line">		a[index++]=t;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">BigNum::BigNum(<span class="keyword">const</span> BigNum &amp;T):<span class="built_in">len</span>(T.<span class="built_in">len</span>)	<span class="comment">//拷贝构造函数</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	memset(a,<span class="number">0</span>,sizeof(a));</div><div class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">len</span>;i++)</div><div class="line">	a[i]=T.a[i];</div><div class="line">&#125;</div><div class="line">BigNum &amp; BigNum::operator=(<span class="keyword">const</span>	BigNum &amp;n)  <span class="comment">//重载赋值运算符，大数之间赋值运算</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="built_in">len</span>=n.<span class="built_in">len</span>;</div><div class="line">	memset(a,<span class="number">0</span>,sizeof(a));</div><div class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">len</span>;i++)</div><div class="line">		a[i]=n.a[i];</div><div class="line">	<span class="keyword">return</span> *this;</div><div class="line">&#125;</div><div class="line">istream&amp; operator&gt;&gt;(istream &amp;in,BigNum &amp;b)</div><div class="line">&#123;</div><div class="line">	char ch[MAXSIZE*<span class="number">4</span>];</div><div class="line">	<span class="keyword">int</span> i=<span class="number">-1</span>;</div><div class="line">	in&gt;&gt;ch;</div><div class="line">	<span class="keyword">int</span> L=strlen(ch);</div><div class="line">	<span class="keyword">int</span> count=<span class="number">0</span>,sum=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i=L<span class="number">-1</span>;i&gt;=<span class="number">0</span>;)</div><div class="line">	&#123;</div><div class="line">		sum=<span class="number">0</span>;</div><div class="line">		<span class="keyword">int</span> t=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>&amp;&amp;i&gt;=<span class="number">0</span>;j++,i--,t*=<span class="number">10</span>)</div><div class="line">		&#123;</div><div class="line">			sum+=(ch[i]-<span class="string">'0'</span>)*t;</div><div class="line">		&#125;</div><div class="line">		b.a[count]=sum;</div><div class="line">		count++;</div><div class="line">	&#125;</div><div class="line">	b.<span class="built_in">len</span>=count++;</div><div class="line">	<span class="keyword">return</span> in;</div><div class="line">&#125;</div><div class="line">ostream&amp; operator&lt;&lt;(ostream&amp; out,BigNum&amp; b)  <span class="comment">//重载输出运算符</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	cout&lt;&lt;b.a[b.<span class="built_in">len</span><span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(i=b.<span class="built_in">len</span><span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)</div><div class="line">	&#123;</div><div class="line">		printf(<span class="string">"%04d"</span>,b.a[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> out;</div><div class="line">&#125;</div><div class="line">BigNum BigNum::operator+(<span class="keyword">const</span>	BigNum &amp;T)<span class="keyword">const</span>	<span class="comment">//两个大数之间的相加运算</span></div><div class="line">&#123;</div><div class="line">	BigNum t(*this);</div><div class="line">	<span class="keyword">int</span> i,big;</div><div class="line">	big=T.<span class="built_in">len</span>&gt;<span class="built_in">len</span>?T.<span class="built_in">len</span>:<span class="built_in">len</span>;</div><div class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;big;i++)</div><div class="line">	&#123;</div><div class="line">		t.a[i]+=T.a[i];</div><div class="line">		<span class="keyword">if</span>(t.a[i]&gt;MAXN)</div><div class="line">		&#123;</div><div class="line">			t.a[i+<span class="number">1</span>]++;</div><div class="line">			t.a[i]-=MAXN+<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(t.a[big]!=<span class="number">0</span>)</div><div class="line">		t.<span class="built_in">len</span>=big+<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span> t.<span class="built_in">len</span>=big;</div><div class="line">	<span class="keyword">return</span> t;</div><div class="line">&#125;</div><div class="line">BigNum BigNum::operator-(<span class="keyword">const</span>	BigNum &amp;T)<span class="keyword">const</span>  <span class="comment">//两个大数之间的相减运算</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> i,j,big;</div><div class="line">	<span class="keyword">bool</span> flag;</div><div class="line">	BigNum t1,t2;</div><div class="line">	<span class="keyword">if</span>(*this&gt;T)</div><div class="line">	&#123;</div><div class="line">		t1=*this;</div><div class="line">		t2=T;</div><div class="line">		flag=<span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		t1=T;</div><div class="line">		t2=*this;</div><div class="line">		flag=<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	big=t1.<span class="built_in">len</span>;</div><div class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;big;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(t1.a[i]&lt;t2.a[i])</div><div class="line">		&#123;</div><div class="line">			j=i+<span class="number">1</span>;</div><div class="line">			while(t1.a[j]==<span class="number">0</span>)</div><div class="line">				j++;</div><div class="line">			t1.a[j--]--;</div><div class="line">			while(j&gt;i)</div><div class="line">				t1.a[j--]+=MAXN;</div><div class="line">			t1.a[i]+=MAXN+<span class="number">1</span>-t2.a[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> t1.a[i]-=t2.a[i];</div><div class="line">	&#125;</div><div class="line">	t1.<span class="built_in">len</span>=big;</div><div class="line">	while(t1.a[<span class="built_in">len</span><span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; t1.<span class="built_in">len</span>&gt;<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		t1.<span class="built_in">len</span>--;</div><div class="line">		big--;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag)</div><div class="line">	t1.a[big<span class="number">-1</span>]=<span class="number">0</span>-t1.a[big<span class="number">-1</span>];</div><div class="line">	<span class="keyword">return</span> t1;</div><div class="line">&#125;</div><div class="line">BigNum BigNum::operator*(<span class="keyword">const</span>	BigNum &amp;T)<span class="keyword">const</span>  <span class="comment">//两个大数之间的相乘</span></div><div class="line">&#123;</div><div class="line">	BigNum ret;</div><div class="line">	<span class="keyword">int</span> i,j,up;</div><div class="line">	<span class="keyword">int</span> temp,temp1;</div><div class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">len</span>;i++)</div><div class="line">	&#123;</div><div class="line">		up=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;T.<span class="built_in">len</span>;j++)</div><div class="line">		&#123;</div><div class="line">			temp=a[i]*T.a[j]+ret.a[i+j]+up;</div><div class="line">			<span class="keyword">if</span>(temp&gt;MAXN)</div><div class="line">			&#123;</div><div class="line">				temp1=temp-temp/(MAXN+<span class="number">1</span>)*(MAXN+<span class="number">1</span>);</div><div class="line">				up=temp/(MAXN+<span class="number">1</span>);</div><div class="line">				ret.a[i+j]=temp1;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				up=<span class="number">0</span>;</div><div class="line">				ret.a[i+j]=temp;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(up!=<span class="number">0</span>)</div><div class="line">		ret.a[i+j]=up;</div><div class="line">	&#125;</div><div class="line">	ret.<span class="built_in">len</span>=i+j;</div><div class="line">	while(ret.a[ret.<span class="built_in">len</span><span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; ret.<span class="built_in">len</span>&gt;<span class="number">1</span>)ret.<span class="built_in">len</span>--;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line">BigNum BigNum::operator/(<span class="keyword">const</span>	<span class="keyword">int</span> &amp;b)<span class="keyword">const</span>  <span class="comment">//大数对一个整数进行相除运算</span></div><div class="line">&#123;</div><div class="line">	BigNum ret;</div><div class="line">	<span class="keyword">int</span> i,down=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i=<span class="built_in">len</span><span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</div><div class="line">	&#123;</div><div class="line">		ret.a[i]=(a[i]+down*(MAXN+<span class="number">1</span>))/b;</div><div class="line">		down=a[i]+down*(MAXN+<span class="number">1</span>)-ret.a[i]*b;</div><div class="line">	&#125;</div><div class="line">	ret.<span class="built_in">len</span>=<span class="built_in">len</span>;</div><div class="line">	while(ret.a[ret.<span class="built_in">len</span><span class="number">-1</span>]==<span class="number">0</span> &amp;&amp; ret.<span class="built_in">len</span>&gt;<span class="number">1</span>)</div><div class="line">		ret.<span class="built_in">len</span>--;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> BigNum::operator%(<span class="keyword">const</span>	<span class="keyword">int</span> &amp;b)<span class="keyword">const</span>	<span class="comment">//大数对一个 int类型的变量进行取模</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> i,d=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(i=<span class="built_in">len</span><span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</div><div class="line">		d=((d*(MAXN+<span class="number">1</span>))%b+a[i])%b;</div><div class="line">	<span class="keyword">return</span> d;</div><div class="line">&#125;</div><div class="line">BigNum BigNum::operator^(<span class="keyword">const</span>	<span class="keyword">int</span> &amp;n)<span class="keyword">const</span>  <span class="comment">//大数的n次方运算</span></div><div class="line">&#123;</div><div class="line">	BigNum t,ret(<span class="number">1</span>);</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">if</span>(n&lt;<span class="number">0</span>)exit(<span class="number">-1</span>);</div><div class="line">	<span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(n==<span class="number">1</span>)<span class="keyword">return</span> *this;</div><div class="line">	<span class="keyword">int</span> m=n;</div><div class="line">	while(m&gt;<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		t =*this;</div><div class="line">		<span class="keyword">for</span>(i=<span class="number">1</span>;(i&lt;&lt;<span class="number">1</span>)&lt;=m;i&lt;&lt;=<span class="number">1</span>)</div><div class="line">		t=t*t;</div><div class="line">		m-=i;</div><div class="line">		ret=ret*t;</div><div class="line">		<span class="keyword">if</span>(m==<span class="number">1</span>)ret=ret*(*this);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="keyword">bool</span> BigNum::operator&gt;(<span class="keyword">const</span>	BigNum &amp;T)<span class="keyword">const</span>	<span class="comment">//大数和另一个大数的大小比较</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> ln;</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">len</span>&gt;T.<span class="built_in">len</span>)<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">len</span>==T.<span class="built_in">len</span>)</div><div class="line">	&#123;</div><div class="line">		ln=<span class="built_in">len</span><span class="number">-1</span>;</div><div class="line">		while(a[ln]==T.a[ln]&amp;&amp;ln&gt;=<span class="number">0</span>)</div><div class="line">			ln--;</div><div class="line">		<span class="keyword">if</span>(ln&gt;=<span class="number">0</span> &amp;&amp; a[ln]&gt;T.a[ln])</div><div class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">bool</span> BigNum::operator&gt;(<span class="keyword">const</span>	<span class="keyword">int</span> &amp;t)<span class="keyword">const</span>  <span class="comment">//大数和一个int类型的变量的大小比较</span></div><div class="line">&#123;</div><div class="line">	BigNum b(t);</div><div class="line">	<span class="keyword">return</span> *this&gt;b;</div><div class="line">&#125;</div><div class="line">void BigNum::<span class="built_in">print</span>()	<span class="comment">//输出大数</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	printf(<span class="string">"%d"</span>,a[<span class="built_in">len</span><span class="number">-1</span>]);</div><div class="line">	<span class="keyword">for</span>(i=<span class="built_in">len</span><span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)</div><div class="line">		printf(<span class="string">"%04d"</span>,a[i]);</div><div class="line">	printf(<span class="string">"\n"</span>);</div><div class="line">&#125;</div><div class="line">BigNum dp[<span class="number">2</span>][<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">	<span class="keyword">int</span> d=<span class="number">1</span>;</div><div class="line">	dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;dp[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">	rep(i,<span class="number">1</span>,m)&#123;</div><div class="line">		dp[d][<span class="number">0</span>]=dp[d^<span class="number">1</span>][<span class="number">1</span>]*n;</div><div class="line">		dp[d][<span class="number">1</span>]=dp[d^<span class="number">1</span>][<span class="number">1</span>]*<span class="number">2</span>+dp[d^<span class="number">1</span>][<span class="number">0</span>];</div><div class="line">		d^=<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	dp[d^<span class="number">1</span>][<span class="number">0</span>].<span class="built_in">print</span>();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意：<br>按照题中的规则要你构造一个最优值</p>
<p>很显然每次要么将线段延长1个单位，要么将连接最多的节点的线段再连上一条。每次得分是这两者的乘积。由均值不等式，这两者要尽可能的接近。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> n;<span class="built_in">cin</span>&gt;&gt;n;</div><div class="line">	<span class="keyword">double</span> ans=<span class="number">5.0</span>;</div><div class="line">	<span class="keyword">if</span>(n==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="number">0.0</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">1</span>)<span class="built_in">cout</span>&lt;&lt;<span class="number">1.0</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>)<span class="built_in">cout</span>&lt;&lt;<span class="number">5.0</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> a=<span class="number">2</span>,b=<span class="number">2</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;++i)&#123;</div><div class="line">			<span class="keyword">if</span>(a==b)++b;</div><div class="line">			<span class="keyword">else</span> ++a;</div><div class="line">			ans+=a*b;</div><div class="line">		&#125;<span class="built_in">printf</span>(<span class="string">"%.5lf\n"</span>,ans );</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>题意：<br>要你构造一个长宽都是N^2的0/1矩阵，要求每行每列之和都是k，将这个矩阵分成N*N大小的小块的时候每一块都有k个1</p>
<p>倒过来想，构造一个N*N的矩阵，向右拓展N次，每次将这个矩阵向下滚动一行。这N个矩阵向下拓展N次，每次向左滚动一列。这样，大矩阵的每一行都由这个矩阵的每一行组成，大矩阵的每一列是小矩阵的所有列，而每一块都是小矩阵经过滚动的，都符合条件。</p>
<figure class="highlight hsp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span>&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">using namespace std<span class="comment">;</span></div><div class="line"><span class="keyword">int</span> ori[<span class="number">22</span>][<span class="number">22</span>],tmp[<span class="number">22</span>],n,k<span class="comment">;</span></div><div class="line">void optl(<span class="keyword">int</span> <span class="keyword">line</span>)&#123;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		putchar(ori[<span class="keyword">line</span>][i]&gt;<span class="number">0</span>?<span class="string">'*'</span>:<span class="string">'.'</span>)<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	cin&gt;&gt;n&gt;&gt;k<span class="comment">;</span></div><div class="line">	rep(i,<span class="number">1</span>,n)rep(j,<span class="number">1</span>,n)&#123;</div><div class="line">		<span class="keyword">if</span>(k)&#123;--k<span class="comment">;ori[i][j]=1;&#125;</span></div><div class="line">	&#125;</div><div class="line">	rep(ct,<span class="number">1</span>,n)&#123;</div><div class="line">		<span class="comment">//rot</span></div><div class="line">		rep(i,<span class="number">1</span>,n)tmp[i]=ori[i][n]<span class="comment">;</span></div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="comment">;i&gt;1;--i)rep(j,1,n)ori[j][i]=ori[j][i-1];</span></div><div class="line">		rep(i,<span class="number">1</span>,n)ori[i][<span class="number">1</span>]=tmp[i]<span class="comment">;</span></div><div class="line">		<span class="comment">//</span></div><div class="line">		rep(li,<span class="number">1</span>,n)&#123;</div><div class="line">			<span class="keyword">int</span> <span class="keyword">line</span>=li<span class="comment">;</span></div><div class="line">			rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">				<span class="keyword">if</span>(<span class="keyword">line</span>&gt;n)<span class="keyword">line</span>=<span class="number">1</span><span class="comment">;</span></div><div class="line">				optl(<span class="keyword">line</span>)<span class="comment">;</span></div><div class="line">				<span class="keyword">if</span>(i==n)printf(<span class="string">"\n"</span>)<span class="comment">;</span></div><div class="line">				<span class="keyword">else</span> ++<span class="keyword">line</span><span class="comment">;</span></div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>题意：<br>你有一个大圆盘，圆盘上的密度满足$\rho \left( x,y \right) =\ln { \left( { x }^{ 2 }+{ y }^{ 2 } \right)  }$，你从某个点挖一个半径为r的圆盘，问这个圆盘的面积。</p>
<p>猜结论：这个圆盘的平均密度就是圆心的密度</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大家好像都去过年了。。这场潘爷非常的劲啊&lt;br&gt;构造智商题专场&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #13</title>
    <link href="http://tsstss123.github.io/2016/02/14/UESTC-2016-Winter-Training-13/"/>
    <id>http://tsstss123.github.io/2016/02/14/UESTC-2016-Winter-Training-13/</id>
    <published>2016-02-13T17:16:18.000Z</published>
    <updated>2016-02-13T17:32:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>颓废的开始..过年完全搞不动题目..大年初二家里请客也不能怪我<br>这场题目是非常好的，Aizu的神机器也非常强<br>以后来补吧</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意：<br>假定你有一块m个元素的LRU算法维护的缓冲区，要你输出给你n个询问之后缓冲区内<br>元素的分布是怎样的</p>
<p>按照询问倒着输出m个就行</p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>题意：<br>给你10000个有相同或者不同面值的钱币，问能凑不出来的最小的面值是多少</p>
<p>考虑凑不出来的这个面值x,显然x-1可以被凑出来<br>排序之后依次计算sum<br>如果a[i]&gt;s[i-1]+1那么s[i-1]+1就是答案</p>
<h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p>题意：<br>是个经典老题。平面上有n个点（不一定是整点）你需要找任意一条路径从x轴上任意一点出发到达一条平行x轴的直线上任意一点，要求这条路径上离任意一点的距离的最小值最大</p>
<p>二分答案后就变成了平面上一些圆能否找到一条从下到上不碰到圆的路径。所以把左右边界和每个圆当做点，如果有相交就连边跑dfs就可以啦<br>（柱爷的代码比我还短，看了下是并查集。。膜）</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">510</span>;</div><div class="line">vector&lt;<span class="keyword">int</span>&gt; mp[maxn];</div><div class="line"><span class="keyword">long</span> <span class="keyword">double</span> dist[maxn][maxn],x[maxn],y[maxn];</div><div class="line"><span class="keyword">int</span> W,H,n,vis[maxn];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">makemap</span>(<span class="params"><span class="keyword">double</span> r</span>)</span>&#123;</div><div class="line">	memset(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">	rep(i,<span class="number">1</span>,n+<span class="number">2</span>)mp[i].clear();</div><div class="line">	rep(i,<span class="number">1</span>,n)rep(j,i+<span class="number">1</span>,n)<span class="keyword">if</span>(sqrt(dist[i][j])&lt;(r+r))&#123;</div><div class="line">		mp[i].push_back(j);</div><div class="line">		mp[j].push_back(i);</div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		<span class="keyword">if</span>(x[i]-r&lt;<span class="number">0</span>)&#123;</div><div class="line">			mp[i].push_back(n+<span class="number">1</span>);</div><div class="line">			mp[n+<span class="number">1</span>].push_back(i);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(x[i]+r&gt;(<span class="keyword">double</span>)W)&#123;</div><div class="line">			mp[i].push_back(n+<span class="number">2</span>);</div><div class="line">			mp[n+<span class="number">2</span>].push_back(i);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span>(<span class="params"><span class="keyword">int</span> u</span>)</span>&#123;</div><div class="line">	vis[u]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(u==n+<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mp[u].size();++i)&#123;</div><div class="line">		<span class="keyword">int</span> v=mp[u][i];</div><div class="line">		<span class="keyword">if</span>(!vis[v]&amp;&amp;v!=u)</div><div class="line">			<span class="keyword">if</span>(dfs(v))<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	cin&gt;&gt;W&gt;&gt;H&gt;&gt;n;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;cin&gt;&gt;x[i]&gt;&gt;y[i];&#125;</div><div class="line">	rep(i,<span class="number">1</span>,n)rep(j,i+<span class="number">1</span>,n)&#123;dist[i][j]=dist[j][i]=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);&#125;</div><div class="line">	<span class="keyword">double</span> l=<span class="number">0</span>,r=W;</div><div class="line">	rep(ct,<span class="number">1</span>,<span class="number">80</span>)&#123;</div><div class="line">		<span class="keyword">double</span> m=(l+r)/<span class="number">2</span>;</div><div class="line">		makemap(m);</div><div class="line">		<span class="keyword">if</span>(dfs(n+<span class="number">1</span>))r=m;</div><div class="line">		<span class="keyword">else</span> l=m;</div><div class="line">	&#125;</div><div class="line">	printf(<span class="string">"%.5lf\n"</span>,l );</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;颓废的开始..过年完全搞不动题目..大年初二家里请客也不能怪我&lt;br&gt;这场题目是非常好的，Aizu的神机器也非常强&lt;br&gt;以后来补吧&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>Wunder Fund Round 2016</title>
    <link href="http://tsstss123.github.io/2016/02/05/Wunder-Fund-Round-2016/"/>
    <id>http://tsstss123.github.io/2016/02/05/Wunder-Fund-Round-2016/</id>
    <published>2016-02-05T15:18:45.000Z</published>
    <updated>2016-02-05T15:54:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>丧心病狂的一场CF<br>留了几个坑<br>有很有趣也有很暴力的题</p>
<a id="more"></a>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>题意：<br>给出n个平面上的点，要你选择其中任意三个点，使得这三个点能够构成一个内部无点的三角形。</p>
<p>对所有点按x，y轴双关键字排序。之后对所有相邻的三个点扫一遍，只要不在一条直线上的三个点即可构成满足要求的三角形</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>题意：<br>给你n个点的完全图，给出这个图上的一颗最小生成树。最小生成树上的边权是x，其他边权是y。问一条每个点仅恰好访问一次的路径最短是多长</p>
<h3 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h3><p>这个有点神啊。参见CF上最短的程序…dfs一遍，确保每个点连上的边不超过2，统计一下就是答案了。并不知道为什么对</p>
<h3 id="DP"><a href="#DP" class="headerlink" title="DP"></a>DP</h3><p>这个是正常的解…<br>Dp[u][0]表示u的子树的答案，并且u可以连边上来，1表示可以不连边上来<br>三种转移：u和所有儿子都不连边、u只和一个儿子连边、u和两个儿子连边<br>重点在于朴素的转移是平方级别的。转移时记录最小值和次小值，扫一遍儿子即可</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>题意：<br>维护一些连接着的线段。两个操作是伸长一个线段或者旋转一个线段（包括之后连着的线段），每次操作完要求输出末端节点</p>
<p>线段当成向量用线段树维护，然后两个操作可以统一成两种3维矩阵</p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>智商题。。。。。</p>
<p>题意：<br>给出2个有n个小于等于n的正数的数列，要求分别选择两个数列中的一些数字，使前一个数列中选出的数字之和等于后一个数列选出的数字之和。输出任意一个方案</p>
<p>这就是趣味赛那个题+输出方案…<br>先需要考虑为什么一定有解，然而考虑出来了就会做了</p>
<p>不妨假设AB数列，sum(A)&lt;=sum(B)<br>接下来对两个数列做前缀和，Ai/Bi表示sum{a1+…+ai},sum{b1+…+bi}</p>
<p>那么对每一个Ai都能找到恰好大于自己的一个Bj，很容易知道Bj-Ai&lt;n<br>有多少个Bj-Ai呢？记得算上0，就是n+1个。抽屉原理，会有两个相等，都懂的…取那两个相等的分别构成的区间就是解</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;丧心病狂的一场CF&lt;br&gt;留了几个坑&lt;br&gt;有很有趣也有很暴力的题&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #12</title>
    <link href="http://tsstss123.github.io/2016/02/04/UESTC-2016-Winter-Training-12/"/>
    <id>http://tsstss123.github.io/2016/02/04/UESTC-2016-Winter-Training-12/</id>
    <published>2016-02-04T15:38:43.000Z</published>
    <updated>2016-02-04T16:53:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>半个阅读场，有几个很有趣的题目</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意：<br>阅读题<br>给你一个很迷的计算延长退休的方案，再给你一些出生日期问你每个人哪年哪月哪日退休</p>
<p>迷得很</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>题意：<br>给你一个数列fi=fi-2 - fi-1的前两项，问你第几项会变负数，如果没有输出0</p>
<p>卡个次数就行了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	ll a,b,c;<span class="keyword">int</span> n=<span class="number">3</span>;<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</div><div class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">		c=a-b;</div><div class="line">		<span class="keyword">if</span>(c&lt;<span class="number">0</span>)&#123;<span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="string">" "</span>&lt;&lt;c&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;&#125;</div><div class="line">		a=b;b=c;++n;</div><div class="line">		<span class="keyword">if</span>(n&gt;<span class="number">1e7</span>)&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"0 0"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">break</span>;&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>题意：<br>给你11个矩形问你如何把他们拼成一个W*H的大矩形，保证有解。</p>
<p>柱神：<br>贪心嘛，爆搜的时候每次放最上面的最左边。因为这个点一定是一个矩形的顶角</p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>题意：<br>你有一个n个主机+一个中心服务器的p2p网络，每台主机在不同的时刻启动，启动的时刻就连入了这个网络。这个网络里每个连接每秒可以传输1个数据包。最终要求每台机子收到总共k个数据包。每台机子收到某个数据包之后这个数据包就可以存在本机上之后可以随时拿出来发送给别的主机。问最早第几秒能满足题中的条件</p>
<p>因为是p2p网络，很明显每台机子醒来了就可以不停的给别人发包，同理每台机子醒来之后每秒可以收到所有机子的包，刚刚醒来的那一刻能收到在它之前已经醒来的机子和服务器的包。做一下除法即可</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">int</span> n,k,t;cin&gt;&gt;n&gt;&gt;k;</div><div class="line">	<span class="keyword">int</span> mx=<span class="number">-1</span>,ct;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		<span class="keyword">int</span> a;cin&gt;&gt;a;</div><div class="line">		<span class="keyword">if</span>(a&gt;mx)&#123;mx=a;ct=<span class="number">1</span>;&#125;</div><div class="line">		<span class="function"><span class="keyword">else</span> <span class="title">if</span>(<span class="params">a==mx</span>)</span>&#123;++ct;&#125;</div><div class="line">	&#125;</div><div class="line">	t=mx;</div><div class="line">	k-=<span class="number">1</span>+(n-ct);++t;</div><div class="line">	<span class="keyword">if</span>(k&gt;<span class="number">0</span>)&#123;</div><div class="line">		t+=k/n+(k%n&gt;<span class="number">0</span>?<span class="number">1</span>:<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;t&lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>题意：<br>给你一些罗马数字文字，要你组成一个最大的罗马数字</p>
<p>看不懂题然后去wiki上看了罗马数字的定义还是不是很懂…</p>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>题意：<br>非常有趣…给你1e5个点，每个点上有位置（小于1e6）和0/1/2三种颜色。要你求出一个最小的A和B使得0&lt;=pos&lt;=A位置的颜色为0的点和A&lt;pos&lt;=B的颜色为1的和B&lt;pos的颜色为2的点之和最大</p>
<p>双变量最优化，要么同时处理（一般是DP或者图论）要么是分开处理。想了一下枚举A之和B的最优值很好求。给0和1的点做前缀和，2做后缀和，就可以O1得到每个A上B的最优值</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</div><div class="line">const int maxv = <span class="number">1000100</span>;</div><div class="line">int n,s<span class="string">[3]</span><span class="string">[maxv]</span>,f<span class="string">[maxv]</span><span class="string">[2]</span>;</div><div class="line">int main()&#123;</div><div class="line">	cin&gt;&gt;n;int mxv=<span class="number">0</span>;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		int x,c;scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;c);</div><div class="line">		s<span class="string">[c]</span><span class="string">[x]</span>++;</div><div class="line">		mxv=max(mxv,x);</div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,mxv)&#123;</div><div class="line">		s<span class="string">[0]</span><span class="string">[i]</span>+=s<span class="string">[0]</span><span class="string">[i-1]</span>;</div><div class="line">		s<span class="string">[1]</span><span class="string">[i]</span>+=s<span class="string">[1]</span><span class="string">[i-1]</span>;</div><div class="line">	&#125;</div><div class="line">	for(int i=mxv;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		s<span class="string">[2]</span><span class="string">[i]</span>+=s<span class="string">[2]</span><span class="string">[i+1]</span>;</div><div class="line">		f<span class="string">[i]</span><span class="string">[1]</span>=i;</div><div class="line">		if(f<span class="string">[i+1]</span><span class="string">[0]</span>&gt;s<span class="string">[1]</span><span class="string">[i]</span>+s<span class="string">[2]</span><span class="string">[i+1]</span>)&#123;</div><div class="line">			f<span class="string">[i]</span><span class="string">[0]</span>=f<span class="string">[i+1]</span><span class="string">[0]</span>;</div><div class="line">			f<span class="string">[i]</span><span class="string">[1]</span>=f<span class="string">[i+1]</span><span class="string">[1]</span>;</div><div class="line">		&#125;else&#123;</div><div class="line">			f<span class="string">[i]</span><span class="string">[0]</span>=s<span class="string">[1]</span><span class="string">[i]</span>+s<span class="string">[2]</span><span class="string">[i+1]</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	int mxp=<span class="number">0</span>,A=<span class="number">0</span>,B=<span class="number">0</span>;</div><div class="line">	rep(pos,<span class="number">0</span>,mxv)&#123;</div><div class="line">		int p=s<span class="string">[0]</span><span class="string">[pos]</span>-s<span class="string">[1]</span><span class="string">[pos]</span>+f<span class="string">[pos]</span><span class="string">[0]</span>;</div><div class="line">		if(p&gt;mxp)&#123;</div><div class="line">			A=pos;B=f<span class="string">[pos]</span><span class="string">[1]</span>;</div><div class="line">			mxp=p;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	printf(<span class="string">"%d %d\n"</span>,A,B,mxp );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;半个阅读场，有几个很有趣的题目&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #11</title>
    <link href="http://tsstss123.github.io/2016/02/04/UESTC-2016-Winter-Training-11/"/>
    <id>http://tsstss123.github.io/2016/02/04/UESTC-2016-Winter-Training-11/</id>
    <published>2016-02-04T14:44:14.000Z</published>
    <updated>2016-02-04T16:53:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>纯题意场. 每个题题意都很迷很迷（大概是因为原版题面全是毛文）<br>一个英文短语： in a row = 连续不断的<br>日。</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意：<br>给你一个摆成金字塔形状的一堆砖块，n个人依次拿走其中的一块，问什么第几个人拿完以后会有砖块掉落</p>
<p>每块砖判断一下会不会导致左右肩膀的砖块掉落就可以了<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">map&lt;<span class="keyword">int</span>,<span class="keyword">set</span>&lt;<span class="keyword">int</span>&gt; &gt; mp;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">mved</span>(<span class="params"><span class="keyword">int</span> x,<span class="keyword">int</span> y</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> mp[x].find(y)!=mp[x].end();</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> n,k;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	freopen(<span class="string">"bricks.in"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	freopen(<span class="string">"bricks.out"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">	cin&gt;&gt;n&gt;&gt;k;</div><div class="line">	rep(i,<span class="number">1</span>,k)&#123;</div><div class="line">		<span class="keyword">int</span> x,y;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">		mp[x].insert(y);</div><div class="line">		<span class="keyword">bool</span> flag=<span class="literal">false</span>;</div><div class="line">		<span class="keyword">if</span>(!mved(x<span class="number">-1</span>,y<span class="number">-1</span>)&amp;&amp;mved(x,y<span class="number">-1</span>))flag=<span class="literal">true</span>;</div><div class="line">		<span class="keyword">if</span>(!mved(x<span class="number">-1</span>,y)&amp;&amp;mved(x,y+<span class="number">1</span>))flag=<span class="literal">true</span>;</div><div class="line">		<span class="keyword">if</span>(flag)&#123;</div><div class="line">			printf(<span class="string">"%d\n"</span>,i);<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	printf(<span class="string">"-1\n"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>题意：<br>模拟了一个交通拥堵的情况，问最后一辆车离开的时刻是什么</p>
<p>推一下能发现假定不堵，每辆车出去的时间就是x。堵的话每个时刻出口应该是满车的所以把堵的车累积到下个时刻</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">typedef <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> F first</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> S second</span></div><div class="line">map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; mp;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	freopen(<span class="string">"millenium.in"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	freopen(<span class="string">"millenium.out"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">	<span class="keyword">int</span> n,a,b,x;ll y;</div><div class="line">	cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		cin&gt;&gt;x&gt;&gt;y;</div><div class="line">		mp[x]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> last=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!mp.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=mp.begin()-&gt;F,c=mp.begin()-&gt;S;</div><div class="line">		<span class="keyword">if</span>(c&gt;b)mp[x+<span class="number">1</span>]+=c-b;</div><div class="line">		<span class="keyword">else</span> last=x;</div><div class="line">		mp.erase(mp.begin());</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;last&lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>题意：<br>有一些方格点组成的岛屿，每个岛屿上有0-9个桥可以用来去别的四联块，一座桥不能连续用两次。给出起点终点问如何到达</p>
<p>其实每个点只有0/1/2三种情况，dfs一遍就好</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">const <span class="keyword">int</span> maxn = <span class="number">400000</span>;</div><div class="line"><span class="keyword">int</span> n,<span class="keyword">m</span>,vis[maxn][<span class="number">2</span>],w[maxn],S,T;</div><div class="line">vector&lt;<span class="keyword">int</span>&gt; mp[maxn];</div><div class="line">void dfs(<span class="keyword">int</span> u,<span class="keyword">int</span> usd)&#123;</div><div class="line">	vis[u][usd]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mp[u].size();++i)&#123;</div><div class="line">		<span class="keyword">int</span> v=mp[u][i];</div><div class="line">		<span class="keyword">if</span>(w[u]&gt;usd&amp;&amp;!vis[v][<span class="number">0</span>])dfs(v,<span class="number">0</span>);</div><div class="line">		<span class="keyword">if</span>(w[v]&amp;&amp;!vis[v][<span class="number">1</span>])dfs(v,<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	freopen(<span class="string">"islands.in"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	freopen(<span class="string">"islands.out"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;<span class="keyword">m</span>);</div><div class="line">	rep(i,<span class="number">1</span>,n)rep(j,<span class="number">1</span>,<span class="keyword">m</span>)&#123;</div><div class="line">		scanf(<span class="string">"%1d"</span>,&amp;w[i*<span class="keyword">m</span>+j]);</div><div class="line">		<span class="keyword">if</span>(i&lt;n)&#123;</div><div class="line">			mp[i*<span class="keyword">m</span>+j].push_back(i*<span class="keyword">m</span>+<span class="keyword">m</span>+j);</div><div class="line">			mp[i*<span class="keyword">m</span>+<span class="keyword">m</span>+j].push_back(i*<span class="keyword">m</span>+j);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(j&lt;<span class="keyword">m</span>)&#123;</div><div class="line">			mp[i*<span class="keyword">m</span>+j].push_back(i*<span class="keyword">m</span>+j+<span class="number">1</span>);</div><div class="line">			mp[i*<span class="keyword">m</span>+j+<span class="number">1</span>].push_back(i*<span class="keyword">m</span>+j);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> a,b;scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">	S=a*<span class="keyword">m</span>+b;scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">	T=a*<span class="keyword">m</span>+b;</div><div class="line">	dfs(S,<span class="number">0</span>);</div><div class="line">	cout&lt;&lt;((vis[T][<span class="number">0</span>]||vis[T][<span class="number">1</span>])?<span class="string">"YES"</span>:<span class="string">"NO"</span>) &lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><p>题意：<br>阅读题<br>有n辆车等间距并排在起跑线上，每辆车可以选一个角度&lt;180°作为方向发车，之后的路径就是直线并且走过的路会留下车辙。如果有车开到路上的车辙上就会立即停下死掉。问最后有哪些车会一直开着</p>
<p>对于每个车分大于小于等于90°来讨论，推一个范围（一开始还推错了）然后用set维护一下左边右边的情况即可</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">101000</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps =<span class="number">1e-7</span>;</div><div class="line"><span class="keyword">double</span> ang[maxn],pi;</div><div class="line"><span class="keyword">int</span> win[maxn];</div><div class="line"><span class="keyword">set</span>&lt;<span class="keyword">double</span>&gt; li,ri;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">equ</span>(<span class="params"><span class="keyword">double</span> p,<span class="keyword">double</span> q</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> fabs(p-q)&lt;eps;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;	</div><div class="line">	freopen(<span class="string">"race.in"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	freopen(<span class="string">"race.out"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">	pi=acos(<span class="number">-1.0</span>);</div><div class="line">	<span class="keyword">int</span> n=<span class="number">0</span>;cin&gt;&gt;n;</div><div class="line">	rep(i,<span class="number">1</span>,n)scanf(<span class="string">"%lf"</span>,&amp;ang[i]);</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		<span class="keyword">if</span>(equ(ang[i],pi/<span class="number">2</span>))win[i]=<span class="number">1</span>;</div><div class="line">		<span class="function"><span class="keyword">else</span> <span class="title">if</span>(<span class="params">ang[i]&gt;pi/<span class="number">2</span></span>)</span>&#123;</div><div class="line">			<span class="keyword">if</span>(li.upper_bound(pi-ang[i])==li.lower_bound(ang[i]))win[i]=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		li.insert(ang[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;--i)&#123;</div><div class="line">		<span class="keyword">if</span>(ang[i]&lt;pi/<span class="number">2</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(ri.upper_bound(ang[i])==ri.lower_bound(pi-ang[i]))win[i]=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		ri.insert(ang[i]);</div><div class="line">	&#125;</div><div class="line">	vector&lt;<span class="keyword">int</span>&gt;ans;</div><div class="line">	rep(i,<span class="number">1</span>,n)<span class="keyword">if</span>(win[i])ans.push_back(i);</div><div class="line">	cout&lt;&lt;ans.size()&lt;&lt;endl;</div><div class="line">	rep(i,<span class="number">0</span>,ans.size()<span class="number">-1</span>)cout&lt;&lt;ans[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;纯题意场. 每个题题意都很迷很迷（大概是因为原版题面全是毛文）&lt;br&gt;一个英文短语： in a row = 连续不断的&lt;br&gt;日。&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #10</title>
    <link href="http://tsstss123.github.io/2016/01/28/UESTC-2016-Winter-Training-10/"/>
    <id>http://tsstss123.github.io/2016/01/28/UESTC-2016-Winter-Training-10/</id>
    <published>2016-01-28T10:31:56.000Z</published>
    <updated>2016-01-28T10:48:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>08-09赛季的拉美区域赛…输入输出+爆搜大作战.<br>除了D以外基本每个题读入都让人不爽</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意:<br>所有时间都是由日/月/年这样的形式给出的.每个case先给出一个终止时间点,然后给出每个人的起始时间.如果这个人的起始时间与终止时间差180天以上就YES否则NO</p>
<p>直接模拟好操蛋好操蛋.最好的写法是把时间转化成从00年开始的天数然后作差</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意:<br>电子时钟上有6位,每一位都用2进制的和来表示.用()表示0,(*)表示1,要你输出这个电子钟上的字符.纯纯纯读入题.</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</div><div class="line">char str[<span class="number">100100</span>];</div><div class="line">int n,a[<span class="number">100</span>];</div><div class="line">int gt()&#123;</div><div class="line">	char c=getchar();</div><div class="line">	if(c=='\n')c=getchar();</div><div class="line">	if(c!='(')cout&lt;&lt;<span class="string">"WTF"</span>;</div><div class="line">	c=getchar();if(c==')')return <span class="number">0</span>;</div><div class="line">	if(c=='*')c=getchar();</div><div class="line">	return <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	scanf(<span class="string">"%d<span class="subst">\n</span>"</span>,&amp;n);</div><div class="line">	rep(cas,<span class="number">1</span>,n)&#123;</div><div class="line">		rep(i,<span class="number">1</span>,<span class="number">20</span>)a[i]=gt();</div><div class="line">		int p[<span class="number">10</span>];</div><div class="line">		p[<span class="number">1</span>]=<span class="number">2</span>*a[<span class="number">1</span>]+a[<span class="number">2</span>];</div><div class="line">		p[<span class="number">2</span>]=<span class="number">8</span>*a[<span class="number">3</span>]+<span class="number">4</span>*a[<span class="number">4</span>]+<span class="number">2</span>*a[<span class="number">5</span>]+a[<span class="number">6</span>];</div><div class="line">		p[<span class="number">3</span>]=<span class="number">4</span>*a[<span class="number">7</span>]+<span class="number">2</span>*a[<span class="number">8</span>]+a[<span class="number">9</span>];</div><div class="line">		p[<span class="number">4</span>]=<span class="number">8</span>*a[<span class="number">10</span>]+<span class="number">4</span>*a[<span class="number">11</span>]+<span class="number">2</span>*a[<span class="number">12</span>]+a[<span class="number">13</span>];</div><div class="line">		p[<span class="number">5</span>]=<span class="number">4</span>*a[<span class="number">14</span>]+<span class="number">2</span>*a[<span class="number">15</span>]+a[<span class="number">16</span>];</div><div class="line">		p[<span class="number">6</span>]=<span class="number">8</span>*a[<span class="number">17</span>]+<span class="number">4</span>*a[<span class="number">18</span>]+<span class="number">2</span>*a[<span class="number">19</span>]+a[<span class="number">20</span>];</div><div class="line">		printf(<span class="string">"Case %d: %d%d:%d%d:%d%d<span class="subst">\n</span>"</span>,cas,p[<span class="number">1</span>],p[<span class="number">2</span>],p[<span class="number">3</span>],p[<span class="number">4</span>],p[<span class="number">5</span>],p[<span class="number">6</span>] );</div><div class="line">	&#125;</div><div class="line">	return <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>题意:给出一个15个点的无向图,选择一些点为关键点,求从第一个关键点出发遍历所有点1次并回到出发点的路径数量.要求路径中关键点的被访问次序与给出关键点的次序相同.</p>
<p>很明显可以状压,只有”当前点”和”已经访问过的点”对后续有影响,所有把这两个当做状态,记忆化搜索</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;cstring&gt;</div><div class="line">#include&lt;cstdio&gt;</div><div class="line">using namespace std<span class="comment">;</span></div><div class="line">#define rep(<span class="name">i</span>,a,b) for(<span class="name">int</span> i=a<span class="comment">;i&lt;=b;++i)</span></div><div class="line">int n,k,a[<span class="number">20</span>],lst[<span class="number">20</span>],goal,mp[<span class="number">20</span>][<span class="number">20</span>]<span class="comment">;</span></div><div class="line">const int mod=98765431<span class="comment">;</span></div><div class="line">int f[<span class="number">1</span>&lt;&lt;16][<span class="number">16</span>]<span class="comment">;</span></div><div class="line">int dfs(<span class="name">int</span> vis,int nw)&#123;</div><div class="line">	if(<span class="name">f</span>[vis][nw]!=-1)return f[vis][nw]<span class="comment">;</span></div><div class="line">	if(<span class="name">vis==goal</span>)&#123;return mp[nw][a[<span class="number">1</span>]]<span class="comment">;&#125;</span></div><div class="line">	int <span class="literal">t</span>=0<span class="comment">;</span></div><div class="line">	rep(<span class="name">i</span>,<span class="number">0</span>,n-1)if(<span class="name">mp</span>[nw][i]<span class="symbol">&amp;&amp;</span>(<span class="name">vis&amp;</span>(<span class="number">1</span>&lt;&lt;i))==0)&#123;</div><div class="line">		if(<span class="name">lst</span>[i]!=-1)&#123;</div><div class="line">			if(((<span class="number">1</span>&lt;&lt;lst[i])<span class="symbol">&amp;vis</span>)==0)continue<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line">		<span class="literal">t</span>+=dfs(<span class="name">vis</span>|(<span class="number">1</span>&lt;&lt;i),i)<span class="comment">;</span></div><div class="line">		<span class="literal">t</span>%=mod<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	return f[vis][nw]=t<span class="comment">;</span></div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	int T<span class="comment">;scanf("%d",&amp;T);</span></div><div class="line">	rep(<span class="name">cas</span>,<span class="number">1</span>,T)&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,<span class="symbol">&amp;n</span>)<span class="comment">;</span></div><div class="line">		memset(<span class="name">f</span>,<span class="number">-1</span>,sizeof(<span class="name">f</span>))<span class="comment">;</span></div><div class="line">		memset(<span class="name">lst</span>,<span class="number">-1</span>,sizeof(<span class="name">lst</span>))<span class="comment">;</span></div><div class="line">		memset(<span class="name">a</span>,<span class="number">0</span>,sizeof(<span class="name">a</span>))<span class="comment">;</span></div><div class="line">		goal=(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span><span class="comment">;</span></div><div class="line">		rep(<span class="name">i</span>,<span class="number">1</span>,n)rep(<span class="name">j</span>,<span class="number">1</span>,n)scanf(<span class="string">"%d"</span>,<span class="symbol">&amp;mp</span>[i-1][j-1])<span class="comment">;</span></div><div class="line">		scanf(<span class="string">"%d"</span>,<span class="symbol">&amp;k</span>)<span class="comment">;</span></div><div class="line">		rep(<span class="name">i</span>,<span class="number">1</span>,k)&#123;</div><div class="line">			scanf(<span class="string">"%d"</span>,a+i)<span class="comment">;</span></div><div class="line">			if(<span class="name">i&gt;1</span>)lst[a[i]]=a[i-1]<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line">		int ans=0<span class="comment">;</span></div><div class="line">		if(<span class="name">k</span>)ans=dfs(<span class="number">1</span>&lt;&lt;a[<span class="number">1</span>],a[<span class="number">1</span>])<span class="comment">;</span></div><div class="line">		else&#123;</div><div class="line">			rep(<span class="name">i</span>,<span class="number">0</span>,n-1)&#123;</div><div class="line">				ans+=dfs(<span class="number">1</span>&lt;&lt;i,i)<span class="comment">;</span></div><div class="line">				ans%=mod<span class="comment">;</span></div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	return <span class="number">0</span><span class="comment">;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>题意:<br>非常无脑的读入坑题.输出还不能多输出换行..坑爹的UVA</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">typedef pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</div><div class="line"><span class="keyword">map</span>&lt;string,pii&gt; mp;</div><div class="line">char buf[<span class="number">1000</span>];</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	<span class="keyword">int</span> T;</div><div class="line">	scanf(<span class="string">"%d\n"</span>,&amp;T);</div><div class="line">	rep(cas,<span class="number">1</span>,T)&#123;</div><div class="line">		mp.clear();</div><div class="line">		<span class="keyword">int</span> st,<span class="keyword">gt</span>;</div><div class="line">		<span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">			buf[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">			fgets(buf,<span class="number">1000</span>,stdin);</div><div class="line">			<span class="keyword">int</span> len=strlen(buf);</div><div class="line">			<span class="keyword">if</span>(len&lt;=<span class="number">1</span>)<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">if</span>(buf[len-<span class="number">1</span>]==<span class="string">'\n'</span>)&#123;buf[len-<span class="number">1</span>]=<span class="number">0</span>;--len;&#125;</div><div class="line">			<span class="keyword">int</span> j=len-<span class="number">1</span>;</div><div class="line">			<span class="keyword">while</span>(j&gt;=<span class="number">0</span>)&#123;</div><div class="line">				<span class="keyword">if</span>(buf[j]==<span class="string">' '</span>)&#123;</div><div class="line">					sscanf(buf+j+<span class="number">1</span>,<span class="string">"%d"</span>,&amp;st);</div><div class="line">					--j;</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">				&#125;</div><div class="line">				--j;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">while</span>(j&gt;=<span class="number">0</span>)&#123;</div><div class="line">				<span class="keyword">if</span>(buf[j]==<span class="string">' '</span>)&#123;</div><div class="line">					sscanf(buf+j+<span class="number">1</span>,<span class="string">"%d"</span>,&amp;<span class="keyword">gt</span>);</div><div class="line">					string cname(buf,buf+j);</div><div class="line">					mp[cname]=make_pair(<span class="keyword">gt</span>,st);</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">				&#125;</div><div class="line">				--j;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">int</span> sc;</div><div class="line">			buf[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">			fgets(buf,<span class="number">1000</span>,stdin);</div><div class="line">			<span class="keyword">int</span> len=strlen(buf);</div><div class="line">			<span class="keyword">if</span>(len==<span class="number">1</span>||len==<span class="number">0</span>)<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">if</span>(buf[len-<span class="number">1</span>]==<span class="string">'\n'</span>)&#123;buf[len-<span class="number">1</span>]=<span class="number">0</span>;--len;&#125;</div><div class="line">			<span class="keyword">int</span> j=<span class="number">0</span>;</div><div class="line">			<span class="keyword">while</span>(buf[j]&lt;<span class="string">'0'</span>||buf[j]&gt;<span class="string">'9'</span>)++j;</div><div class="line">			sscanf(buf+j,<span class="string">"%d"</span>,&amp;sc);</div><div class="line">			string name(buf,buf+j-<span class="number">1</span>);</div><div class="line">			<span class="keyword">while</span>(buf[j]!=<span class="string">' '</span>)++j;</div><div class="line">			string cname(buf+j+<span class="number">1</span>,buf+len);</div><div class="line">			pii tat=mp[cname];</div><div class="line">			<span class="keyword">if</span>(sc&lt;tat.second)&#123;</div><div class="line">				<span class="keyword">printf</span>(<span class="string">"Refused %s %d\n"</span>,name.c_str(),sc );</div><div class="line">			&#125;<span class="keyword">else</span>&#123;</div><div class="line">				<span class="keyword">printf</span>(<span class="string">"Accepted %s %d\n"</span>,name.c_str(),sc+tat.first );</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(cas!=T)<span class="keyword">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;		</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>题意:<br>给出一种古老的乘法方式.类似乘法变快速加法.坑点是注意右边的乘数为0的情况</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">#define rep(i,a,b) <span class="keyword">for</span>(<span class="built_in">int</span> i=a;i&lt;=b;++i)</div><div class="line">typedef <span class="keyword">long</span> <span class="keyword">long</span> <span class="built_in">int</span> ll;</div><div class="line"><span class="built_in">int</span> n,m;</div><div class="line"><span class="built_in">char</span> <span class="built_in">str</span>[<span class="number">10</span>];</div><div class="line">vector&lt;ll&gt; ans;</div><div class="line"><span class="built_in">int</span> main()&#123;</div><div class="line">	<span class="built_in">int</span> cas=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">		<span class="keyword">if</span>(n==<span class="number">-1</span>)<span class="keyword">break</span>;</div><div class="line">		scanf(<span class="string">"%d%s"</span>,&amp;m,<span class="built_in">str</span>);</div><div class="line">		++cas;</div><div class="line">		ans.<span class="built_in">clear</span>();</div><div class="line">		<span class="keyword">long</span> <span class="keyword">long</span> <span class="built_in">int</span> k=m;</div><div class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span>;i&lt;=n;i&lt;&lt;=<span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(n&amp;i)&#123;</div><div class="line">				ans.push_back(k);</div><div class="line">			&#125;</div><div class="line">			k*=<span class="number">2</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(*<span class="built_in">str</span>==<span class="string">'b'</span>)<span class="built_in">reverse</span>(ans.begin(),ans.end());</div><div class="line">		printf(<span class="string">"Case %d: %d x %d = "</span>,cas,n,m);</div><div class="line">		<span class="keyword">if</span>(m==<span class="number">0</span>||ans.<span class="built_in">size</span>()==<span class="number">0</span>)cout&lt;&lt;<span class="string">"0"</span>;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();++i)&#123;</div><div class="line">				<span class="keyword">if</span>(i)cout&lt;&lt;<span class="string">" + "</span>;</div><div class="line">				cout&lt;&lt;ans[i];</div><div class="line">			&#125;			</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;08-09赛季的拉美区域赛…输入输出+爆搜大作战.&lt;br&gt;除了D以外基本每个题读入都让人不爽&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #9</title>
    <link href="http://tsstss123.github.io/2016/01/28/UESTC-2016-Winter-Training-9/"/>
    <id>http://tsstss123.github.io/2016/01/28/UESTC-2016-Winter-Training-9/</id>
    <published>2016-01-27T16:20:56.000Z</published>
    <updated>2016-01-27T17:04:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>两场CF Div1..这次做着挺舒服的…一开始不愿读题…后来发现是水题…</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意:<br>给你100个字串和一个原串.要你把字串在原串中出现(完全匹配)的所有位置上的字母都替换成题目给你的一个字符LuckyChar.如果这个原串上的这个位置上的字符本来就是LuckyChar,就可以替换成任意一个字符.求一个字典序最小的接.</p>
<p>这里字符串不长,可以用find匹配.小坑点:匹配位置可能重叠,例如[1,5][3,7]这样.所以find的时候要注意.还有一个小坑点就是LuckyChar是a的时候,你替换的字母应该是b</p>
<figure class="highlight rust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">#define rep(i,a,b) <span class="keyword">for</span>(<span class="keyword">int</span> i=a;i&lt;=b;++i)</div><div class="line">string <span class="keyword">str</span>,ls,fb[<span class="number">110</span>];</div><div class="line"><span class="keyword">int</span> n,msk[<span class="number">110</span>];</div><div class="line"><span class="keyword">char</span> lck,ulck;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	rep(i,<span class="number">1</span>,n)cin&gt;&gt;fb[i];</div><div class="line">	cin&gt;&gt;<span class="keyword">str</span>;ls=<span class="keyword">str</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ls.length();++i)ls[i]=tolower(ls[i]);</div><div class="line">	cin&gt;&gt;lck;</div><div class="line">	ulck=lck+<span class="string">'A'</span>-<span class="string">'a'</span>;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;fb[i].length();++j)fb[i][j]=tolower(fb[i][j]);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;ls.length();++s)&#123;</div><div class="line">			<span class="keyword">int</span> st=ls.find(fb[i],s);</div><div class="line">			<span class="keyword">if</span>(st!=string::npos)&#123;</div><div class="line">				rep(j,st,st+fb[i].length()-<span class="number">1</span>)msk[j]=<span class="number">1</span>;</div><div class="line">				<span class="comment">//cout&lt;&lt;"Find "&lt;&lt;fb[i]&lt;&lt;" in pos:"&lt;&lt;st&lt;&lt;endl;</span></div><div class="line">				s=st;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="keyword">str</span>.length();++i)<span class="keyword">if</span>(msk[i])&#123;</div><div class="line">		<span class="keyword">if</span>(ls[i]==lck)&#123;</div><div class="line">			<span class="keyword">if</span>(<span class="keyword">str</span>[i]&gt;=<span class="string">'A'</span>&amp;&amp;<span class="keyword">str</span>[i]&lt;=<span class="string">'Z'</span>)<span class="keyword">str</span>[i]=<span class="string">'A'</span>;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">str</span>[i]=<span class="string">'a'</span>;</div><div class="line">			<span class="keyword">if</span>(lck==<span class="string">'a'</span>)<span class="keyword">str</span>[i]++;</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">if</span>(<span class="keyword">str</span>[i]&gt;=<span class="string">'A'</span>&amp;&amp;<span class="keyword">str</span>[i]&lt;=<span class="string">'Z'</span>)<span class="keyword">str</span>[i]=ulck;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">str</span>[i]=lck;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;<span class="keyword">str</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意:<br>Lucky Number定义为十进制表示下只含有4和7,且4与7各占一半数量的数.给出一个10^6位的整数,求一个刚好大于等于这个数的Lucky Number</p>
<p>先分奇偶讨论.在一般情况下,在将某个地方改大了之后,后面的数就可以按照先4后7的情况排列.找这个位置就蛋疼了…感觉小情况很多…例如4和7都不能先用完了,否则会出现想改成<br>然而熊两发过了..有点惊奇…更奇怪的是为什么现在我还觉得很坑啊…</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line"><span class="keyword">string</span> s;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	cin&gt;&gt;s;</div><div class="line">	<span class="keyword">int</span> <span class="built_in">len</span>=s.length();</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">len</span>%<span class="number">2</span>==<span class="number">1</span>)&#123;</div><div class="line">		++<span class="built_in">len</span>;</div><div class="line">		cout&lt;&lt;<span class="keyword">string</span>(<span class="built_in">len</span>/<span class="number">2</span>,<span class="string">'4'</span>)&lt;&lt;<span class="keyword">string</span>(<span class="built_in">len</span>/<span class="number">2</span>,<span class="string">'7'</span>)&lt;&lt;endl;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">if</span>(<span class="keyword">string</span>(<span class="built_in">len</span>/<span class="number">2</span>,<span class="string">'7'</span>)+<span class="keyword">string</span>(<span class="built_in">len</span>/<span class="number">2</span>,<span class="string">'4'</span>)&lt;s)&#123;</div><div class="line">			cout&lt;&lt;<span class="keyword">string</span>(<span class="built_in">len</span>/<span class="number">2</span>+<span class="number">1</span>,<span class="string">'4'</span>)&lt;&lt;<span class="keyword">string</span>(<span class="built_in">len</span>/<span class="number">2</span>+<span class="number">1</span>,<span class="string">'7'</span>)&lt;&lt;endl;</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> bk=<span class="built_in">len</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,c4=<span class="built_in">len</span>/<span class="number">2</span>,c7=<span class="built_in">len</span>/<span class="number">2</span>;i&lt;<span class="built_in">len</span>;++i)<span class="keyword">if</span>(s[i]!=<span class="string">'4'</span>&amp;&amp;s[i]!=<span class="string">'7'</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(s[i]&gt;<span class="string">'7'</span>)&#123;</div><div class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>;--j)<span class="keyword">if</span>(s[j]&lt;<span class="string">'7'</span>)&#123;bk=j;s[j]=<span class="string">'7'</span>;<span class="keyword">break</span>;&#125;</div><div class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=bk+<span class="number">1</span>;j&lt;<span class="built_in">len</span>;++j)s[j]=<span class="string">'0'</span>;</div><div class="line">			&#125;<span class="keyword">else</span>&#123;</div><div class="line">				<span class="keyword">if</span>(s[i]&lt;<span class="string">'4'</span>)s[i]=<span class="string">'4'</span>;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(s[i]&lt;<span class="string">'7'</span>)s[i]=<span class="string">'7'</span>;</div><div class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;<span class="built_in">len</span>;++j)s[j]=<span class="string">'0'</span>;</div><div class="line">				bk=i;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(bk==<span class="built_in">len</span>)&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,c4=<span class="built_in">len</span>/<span class="number">2</span>,c7=<span class="built_in">len</span>/<span class="number">2</span>;i&lt;<span class="built_in">len</span>;++i)&#123;</div><div class="line">				<span class="keyword">if</span>(s[i]==<span class="string">'4'</span>)--c4;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'7'</span>)--c7;</div><div class="line">				<span class="keyword">if</span>(c7==<span class="number">0</span>&amp;&amp;c4&gt;<span class="number">0</span>)&#123;</div><div class="line">					<span class="keyword">int</span> bg=<span class="number">0</span>;</div><div class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;<span class="built_in">len</span>;++j)<span class="keyword">if</span>(s[j]&gt;<span class="string">'4'</span>)bg=<span class="number">1</span>;</div><div class="line">					<span class="keyword">if</span>(bg)&#123;</div><div class="line">						<span class="keyword">int</span> bk;</div><div class="line">						<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&gt;=<span class="number">0</span>;--j)<span class="keyword">if</span>(s[j]==<span class="string">'4'</span>)&#123;</div><div class="line">							<span class="comment">//printf("i=%d,in %d,%c\n",i,j,s[j] );</span></div><div class="line">							s[j]=<span class="string">'7'</span>;bk=j;<span class="keyword">break</span>;</div><div class="line">						&#125;</div><div class="line">						<span class="keyword">for</span>(<span class="keyword">int</span> j=bk+<span class="number">1</span>;j&lt;<span class="built_in">len</span>;++j)s[j]=<span class="string">'0'</span>;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">				</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,c4=<span class="built_in">len</span>/<span class="number">2</span>,c7=<span class="built_in">len</span>/<span class="number">2</span>;i&lt;<span class="built_in">len</span>;++i)&#123;</div><div class="line">			<span class="keyword">if</span>(c4&amp;&amp;s[i]&lt;=<span class="string">'4'</span>)&#123;</div><div class="line">				s[i]=<span class="string">'4'</span>;--c4;</div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(c7&amp;&amp;s[i]&lt;=<span class="string">'7'</span>)&#123;</div><div class="line">				s[i]=<span class="string">'7'</span>;--c7;</div><div class="line">			&#125;<span class="keyword">else</span> cout &lt;&lt;<span class="string">"WTF"</span>&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">		cout &lt;&lt; s &lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>题意:<br>城市里有n个节点,每个节点有一辆出租车,你要坐它要先给ci块钱,它最远跑ti米(价格都一样)而且只在节点上停下.节点之间有一些边,给出每条边的距离.求:你到达目的地最少用多少钱,不行的话输出-1</p>
<p>先用ti建图跑最短路,跑出每个车能到达哪些点,在新图中建立又向边(边权为钱),然后再跑最短路就是答案.<br>写的时候两次SPFA可以用一个函数,把图当参数传进去就好.</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">typedef long long <span class="keyword">int</span> ll;</div><div class="line">const ll inf = <span class="number">1</span>LL&lt;&lt;<span class="number">62</span>;</div><div class="line">const <span class="keyword">int</span> maxn = <span class="number">1100</span>;</div><div class="line">struct ed&#123;</div><div class="line">	<span class="keyword">int</span> v,w;</div><div class="line">&#125;;</div><div class="line">vector&lt;ed&gt; mp[maxn],mp2[maxn];</div><div class="line"><span class="keyword">int</span> n,<span class="keyword">m</span>,<span class="keyword">x</span>,<span class="keyword">y</span>,in<span class="string">q[maxn]</span>;</div><div class="line">queue&lt;<span class="keyword">int</span>&gt; <span class="keyword">q</span>;</div><div class="line">ll dist[maxn];</div><div class="line">void spfa(<span class="keyword">int</span> <span class="keyword">s</span>,vector&lt;ed&gt; mp[])&#123;</div><div class="line">	<span class="keyword">while</span>(!q.empty())q.pop();</div><div class="line">	rep(i,<span class="number">1</span>,n)dist[i]=inf,in<span class="string">q[i]</span>=<span class="number">0</span>;dist[<span class="keyword">s</span>]=<span class="number">0</span>;</div><div class="line">	q.push(<span class="keyword">s</span>);</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> u=q.front();q.pop();</div><div class="line">		in<span class="string">q[u]</span>=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mp[u].size();++i)&#123;</div><div class="line">			<span class="keyword">int</span> v=mp[u][i].v,w=mp[u][i].w;</div><div class="line">			<span class="keyword">if</span>(dist[u]+w&lt;dist[v])&#123;</div><div class="line">				dist[v]=dist[u]+w;</div><div class="line">				<span class="keyword">if</span>(!in<span class="string">q[v]</span>)&#123;</div><div class="line">					in<span class="string">q[v]</span>=<span class="number">1</span>;</div><div class="line">					q.push(v);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	scanf(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;<span class="keyword">m</span>,&amp;<span class="keyword">x</span>,&amp;<span class="keyword">y</span>);</div><div class="line">	rep(i,<span class="number">1</span>,<span class="keyword">m</span>)&#123;</div><div class="line">		<span class="keyword">int</span> u,v,w;</div><div class="line">		scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">		mp[u].push_back(ed&#123;v,w&#125;);</div><div class="line">		mp[v].push_back(ed&#123;u,w&#125;);</div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		<span class="keyword">int</span> ti,ci;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;ti,&amp;ci);</div><div class="line">		spfa(i,mp);</div><div class="line">		rep(j,<span class="number">1</span>,n)<span class="keyword">if</span>(i!=j&amp;&amp;dist[j]&lt;=ti)&#123;</div><div class="line">			mp2[i].push_back(ed&#123;j,ci&#125;);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	spfa(<span class="keyword">x</span>,mp2);</div><div class="line">	<span class="keyword">if</span>(dist[<span class="keyword">y</span>]&lt;inf)&#123;</div><div class="line">		cout&lt;&lt;dist[<span class="keyword">y</span>]&lt;&lt;endl;</div><div class="line">	&#125;<span class="keyword">else</span> cout&lt;&lt;-<span class="number">1</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>题意:<br>定义Nearly LuckyNumber为数的十进制表示中最近的两个4/7距离不超过k.For example, if k = 2, then numbers 412395497, 404, 4070400000070004007 are nearly lucky and numbers. 4, 4123954997, 4007000040070004007 are not.给你1000个询问[l,r],输出区间内有多少个合法的数.</p>
<p>数位DP,留坑</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>题意:<br>定义Lucky Number为十进制表示下只含4和7的数.给你不完全联通的无向图,问最少的加边数量,使得图内存在一个大小为Lucky Number的联通块.</p>
<p>柱神教会的DP优化.并查集维护联通性,求出联通块数量后将记录形式改为”联通块大小为Ci的联通块有几个”.这样Ci&gt;0的情况有不超过sqrt(N)个.然后跑多重背包即可.否则直接背包会爆炸~</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">typedef long long <span class="keyword">int</span> ll;</div><div class="line">const ll inf = <span class="number">1</span>LL&lt;&lt;<span class="number">62</span>;</div><div class="line">const <span class="keyword">int</span> maxn = <span class="number">1100</span>;</div><div class="line">struct ed&#123;</div><div class="line">	<span class="keyword">int</span> v,w;</div><div class="line">&#125;;</div><div class="line">vector&lt;ed&gt; mp[maxn],mp2[maxn];</div><div class="line"><span class="keyword">int</span> n,<span class="keyword">m</span>,<span class="keyword">x</span>,<span class="keyword">y</span>,in<span class="string">q[maxn]</span>;</div><div class="line">queue&lt;<span class="keyword">int</span>&gt; <span class="keyword">q</span>;</div><div class="line">ll dist[maxn];</div><div class="line">void spfa(<span class="keyword">int</span> <span class="keyword">s</span>,vector&lt;ed&gt; mp[])&#123;</div><div class="line">	<span class="keyword">while</span>(!q.empty())q.pop();</div><div class="line">	rep(i,<span class="number">1</span>,n)dist[i]=inf,in<span class="string">q[i]</span>=<span class="number">0</span>;dist[<span class="keyword">s</span>]=<span class="number">0</span>;</div><div class="line">	q.push(<span class="keyword">s</span>);</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> u=q.front();q.pop();</div><div class="line">		in<span class="string">q[u]</span>=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mp[u].size();++i)&#123;</div><div class="line">			<span class="keyword">int</span> v=mp[u][i].v,w=mp[u][i].w;</div><div class="line">			<span class="keyword">if</span>(dist[u]+w&lt;dist[v])&#123;</div><div class="line">				dist[v]=dist[u]+w;</div><div class="line">				<span class="keyword">if</span>(!in<span class="string">q[v]</span>)&#123;</div><div class="line">					in<span class="string">q[v]</span>=<span class="number">1</span>;</div><div class="line">					q.push(v);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	scanf(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;<span class="keyword">m</span>,&amp;<span class="keyword">x</span>,&amp;<span class="keyword">y</span>);</div><div class="line">	rep(i,<span class="number">1</span>,<span class="keyword">m</span>)&#123;</div><div class="line">		<span class="keyword">int</span> u,v,w;</div><div class="line">		scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">		mp[u].push_back(ed&#123;v,w&#125;);</div><div class="line">		mp[v].push_back(ed&#123;u,w&#125;);</div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		<span class="keyword">int</span> ti,ci;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;ti,&amp;ci);</div><div class="line">		spfa(i,mp);</div><div class="line">		rep(j,<span class="number">1</span>,n)<span class="keyword">if</span>(i!=j&amp;&amp;dist[j]&lt;=ti)&#123;</div><div class="line">			mp2[i].push_back(ed&#123;j,ci&#125;);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	spfa(<span class="keyword">x</span>,mp2);</div><div class="line">	<span class="keyword">if</span>(dist[<span class="keyword">y</span>]&lt;inf)&#123;</div><div class="line">		cout&lt;&lt;dist[<span class="keyword">y</span>]&lt;&lt;endl;</div><div class="line">	&#125;<span class="keyword">else</span> cout&lt;&lt;-<span class="number">1</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>题意:<br>在Windows的文件管理器下,你可以按住Ctrl拉方框来大量选择文件.现在给你文件总数和每行有多少个,你要选择从第l到第r个连续的文件.问你要拉几个方框最少.</p>
<p>题目好坑啊…好多坑点.主要是r==n的情况和r在某一行最后一个的情况是一样的.l和r相隔一行也是特殊情况.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,a,b,l1,l2,el;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> ans=<span class="number">3</span>;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; a &gt;&gt; b;</div><div class="line">	--n;--a; --b;</div><div class="line">	l1=a/m;l2=b/m;</div><div class="line">	<span class="keyword">if</span>(b==n)el=<span class="number">1</span>;<span class="keyword">else</span> el=<span class="number">0</span>;</div><div class="line">	a%=m; b%=m;</div><div class="line">	<span class="keyword">if</span>(l1==l2)ans=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(l1+<span class="number">1</span>==l2)&#123;</div><div class="line">		<span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;(b==m<span class="number">-1</span>||el))ans=<span class="number">1</span>;</div><div class="line">		<span class="keyword">else</span> ans=<span class="number">2</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;(b==m<span class="number">-1</span>||el))ans=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="number">0</span>||b==m<span class="number">-1</span>||el)ans=<span class="number">2</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a<span class="number">-1</span>==b)ans=<span class="number">2</span>;</div><div class="line">	<span class="keyword">if</span>(m==<span class="number">1</span>)ans=<span class="number">1</span>;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>题意:<br>你有n杯牛奶要倒进m个茶杯中.每杯牛奶最多能够倒进两个茶杯里.如果有这样的分配方案,输出一个.</p>
<p>贪心.先算出每个杯子最后的奶量,判一下是否可行.每个茶杯挨个找奶瓶,每杯没倒完的牛奶就努力的倒进去.记录一下每杯牛奶倒出去几次.如果有超过2次的就不可行.</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">101000</span>;</div><div class="line"><span class="keyword">int</span> fa[maxn],sz[maxn],c[maxn];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">fd</span>(<span class="params"><span class="keyword">int</span> f</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> fa[f]==f?f:fa[f]=fd(fa[f]);</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> n,m,f[maxn];</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isok</span>(<span class="params"><span class="keyword">int</span> x</span>)</span>&#123;</div><div class="line">	<span class="keyword">while</span>(x)&#123;</div><div class="line">		<span class="keyword">int</span> d=x%<span class="number">10</span>;</div><div class="line">		<span class="keyword">if</span>(d!=<span class="number">4</span>&amp;&amp;d!=<span class="number">7</span>)<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">		x/=<span class="number">10</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">bp</span>(<span class="params"><span class="keyword">int</span> v,<span class="keyword">int</span> w</span>)</span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=v;--i)</div><div class="line">		f[i]=min(f[i],f[i-v]+w);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">	rep(i,<span class="number">1</span>,n)fa[i]=i;</div><div class="line">	rep(i,<span class="number">1</span>,m)&#123;</div><div class="line">		<span class="keyword">int</span> u,v;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">		fa[fd(u)]=fd(v);</div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,n)sz[fd(i)]++;</div><div class="line">	rep(i,<span class="number">1</span>,n)c[sz[i]]++,f[i]=<span class="number">1e9</span>;</div><div class="line">	rep(i,<span class="number">1</span>,n)<span class="keyword">if</span>(c[i])&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> s=<span class="number">1</span>;s&lt;=c[i];s&lt;&lt;=<span class="number">1</span>)</div><div class="line">			bp(s*i,s),c[i]-=s;</div><div class="line">		bp(c[i]*i,c[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> ans=<span class="number">1e9</span>;</div><div class="line">	rep(i,<span class="number">1</span>,n)<span class="keyword">if</span>(isok(i))ans=min(ans,f[i]);</div><div class="line">	printf(<span class="string">"%d\n"</span>,ans==<span class="number">1e9</span>?<span class="number">-1</span>:ans<span class="number">-1</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>题意:<br>给你n&lt;=1e12,k&lt;=100个互质的数,求[1,n]内有多少个数不会被这k个数整除.</p>
<p>先看一个递推式:<br>f[i][j]=f[i][j-1]-f[i/a[j]][j-1]<br>答案为f[n][k]</p>
<p>这是一类DP.先分析这个(最后还有柱爷给出的拓展知识,求1e12内的素数个数/素数之和)<br>考虑i内有多少数被前j-1个数整除.这些数里存在只被第j个数整除的数.这个数若存在,它除了a[j]这个因子之外,前j-1个数都不会是它的因子(这个数除a[j]之后不会被前j-1个数整除),所以又可以用状态表示了.</p>
<p>这个分析还不太会,但是可以很容易看出一直在做除法所以大概是个klgn级别的?瞎b猜的啦</p>
<p>实现的时候只能对n比较小的时候记忆化,大的时候就直接爆搜啦</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std<span class="comment">;</span></div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">const int maxn = <span class="number">101000</span><span class="comment">;</span></div><div class="line">typedef long long int <span class="keyword">ll;</span></div><div class="line"><span class="keyword">ll </span>f[maxn][<span class="number">101</span>]<span class="comment">;int a[101];</span></div><div class="line"><span class="keyword">ll </span>dp(<span class="keyword">ll </span>i,int <span class="keyword">j)&#123;</span></div><div class="line">	</div><div class="line">	if(i&lt;maxn&amp;&amp;f[i][<span class="keyword">j]!=-1)return </span>f[i][<span class="keyword">j];</span></div><div class="line">	if(<span class="keyword">j==0)return </span>i<span class="comment">;</span></div><div class="line">	<span class="keyword">ll </span>t=dp(i,<span class="keyword">j-1)-dp(i/a[j],j-1);</span></div><div class="line">	if(i&lt;maxn)f[i][<span class="keyword">j]=t;</span></div><div class="line">	return t<span class="comment">;</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">ll </span>n<span class="comment">;int k;</span></div><div class="line">int main()&#123;</div><div class="line">	memset(f,-<span class="number">1</span>,sizeof(f))<span class="comment">;</span></div><div class="line">	cin&gt;&gt;n&gt;&gt;k<span class="comment">;</span></div><div class="line">	rep(i,<span class="number">1</span>,k)cin&gt;&gt;a[i]<span class="comment">;</span></div><div class="line">	sort(a+<span class="number">1</span>,a+k+<span class="number">1</span>)<span class="comment">;</span></div><div class="line">	cout&lt;&lt;dp(n,k)&lt;&lt;endl<span class="comment">;</span></div><div class="line">	return <span class="number">0</span><span class="comment">;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>同样这种思路可以处理素数和/计数问题~知乎上有链接,有时间了单独开一篇好了.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;两场CF Div1..这次做着挺舒服的…一开始不愿读题…后来发现是水题…&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #8</title>
    <link href="http://tsstss123.github.io/2016/01/27/UESTC-2016-Winter-Training-8/"/>
    <id>http://tsstss123.github.io/2016/01/27/UESTC-2016-Winter-Training-8/</id>
    <published>2016-01-27T15:55:53.000Z</published>
    <updated>2016-01-27T16:20:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>不要问我为什么没有7.<br>这场傻的心碎啊…D题排序的时候忘记标记原来的点的编号了,一直莫名wa…傻得可怜啊<br>一直说要弃疗结果还是打完了(应该说在D上wa完了)</p>
<a id="more"></a>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意:给出一个四舍五入后的表,要求你在一定条件下是否符合条件(详情需要看题面)</p>
<p>有一个巨大的坑点,题面给你的误点:以为所有的舍入都是在只有一位小数的时候进行的,实际上是.4999999这种情况…</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> a,b,c,d;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;a,&amp;b,&amp;c,&amp;d))&#123;</div><div class="line">		<span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>&amp;&amp;c==<span class="number">0</span>&amp;&amp;d==<span class="number">0</span>)<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">double</span> lo=<span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(b)&#123;lo+=(b<span class="number">-0.5</span>)*<span class="number">9</span>;&#125;</div><div class="line">		<span class="keyword">if</span>(c)&#123;lo+=(c<span class="number">-0.5</span>)*<span class="number">4</span>;&#125;</div><div class="line">		<span class="keyword">if</span>(d)&#123;lo+=(d<span class="number">-0.5</span>)*<span class="number">4</span>;&#125;</div><div class="line">		<span class="keyword">double</span> hi = (b+<span class="number">0.499999</span>)*<span class="number">9</span>+(c+<span class="number">0.499999</span>)*<span class="number">4</span>+(d+<span class="number">0.499999</span>)*<span class="number">4</span>;</div><div class="line">		<span class="keyword">int</span> l = <span class="built_in">floor</span>(lo+<span class="number">0.5</span>),r = <span class="built_in">floor</span>(hi+<span class="number">0.5</span>);</div><div class="line">		<span class="keyword">if</span>(l&lt;=a&amp;&amp;a&lt;=r)<span class="built_in">printf</span>(<span class="string">"yes\n"</span>);</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"no\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>题意:<br>给出N,M&lt;=10^5个平面上的点和直线(平行于x或者y).某个点能被看到,当且仅当站在某个直线上某个位置能够以垂直于直线的视角看到(不能越过点).求有多少个点能够被看到.</p>
<p>把”从直线上看到点”转化成”从点上看到直线”,把平行x和y的直线分开处理.若处理平行x轴的线段,就把点按照x,y双关键字排序,那么挡住这个点的点就只可能是排序后的前驱和后继.再去对应的直线(也要先排个序)里面二分确定下最近的直线位置,简单判断一下就好了~</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">101000</span>;</div><div class="line"><span class="keyword">struct</span> poi&#123;</div><div class="line">	<span class="keyword">int</span> x,y,d;</div><div class="line">&#125;pt[maxn];</div><div class="line"><span class="keyword">int</span> xl[maxn],yl[maxn],xm,ym,vis[maxn];</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmpx</span>(<span class="params"><span class="keyword">const</span> poi &amp;a,<span class="keyword">const</span> poi &amp;b</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> a.x==b.x?a.y&lt;b.y:a.x&lt;b.x;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmpy</span>(<span class="params"><span class="keyword">const</span> poi &amp;a,<span class="keyword">const</span> poi &amp;b</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> a.y==b.y?a.x&lt;b.x:a.y&lt;b.y;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d\n"</span>,&amp;n,&amp;m))&#123;</div><div class="line">		<span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)<span class="keyword">break</span>;</div><div class="line">		xm = ym = <span class="number">0</span>;</div><div class="line">		memset(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">		rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">			scanf(<span class="string">"%d%d\n"</span>,&amp;pt[i].x,&amp;pt[i].y);pt[i].d=i;</div><div class="line">		&#125;</div><div class="line">		rep(i,<span class="number">1</span>,m)&#123;</div><div class="line">			<span class="keyword">char</span> c;<span class="keyword">int</span> d;</div><div class="line">			scanf(<span class="string">"%c=%d\n"</span>,&amp;c,&amp;d);</div><div class="line">			<span class="keyword">if</span>(c==<span class="string">'x'</span>)&#123;</div><div class="line">				xl[xm++]=d;</div><div class="line">			&#125;<span class="function"><span class="keyword">else</span> <span class="title">if</span>(<span class="params">c==<span class="string">'y'</span></span>)</span>&#123;</div><div class="line">				yl[ym++]=d;</div><div class="line">			&#125;<span class="function"><span class="keyword">else</span> <span class="title">exit</span>(<span class="params"><span class="number">1000</span></span>)</span>;</div><div class="line">		&#125;</div><div class="line">		sort(yl,yl+ym);</div><div class="line">		sort(xl,xl+xm);</div><div class="line"></div><div class="line">		sort(pt+<span class="number">1</span>,pt+n+<span class="number">1</span>,cmpx);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;<span class="comment">//from y axis</span></div><div class="line">			<span class="keyword">int</span> miy=pt[i].y,mxy=pt[i].y;</div><div class="line">			<span class="keyword">if</span>(i&gt;<span class="number">1</span> &amp;&amp; pt[i].x == pt[i<span class="number">-1</span>].x)miy=pt[i<span class="number">-1</span>].y;</div><div class="line">			<span class="keyword">if</span>(i&lt;n &amp;&amp; pt[i].x == pt[i+<span class="number">1</span>].x)mxy=pt[i+<span class="number">1</span>].y;</div><div class="line">			<span class="keyword">int</span> g=upper_bound(yl,yl+ym,pt[i].y)-yl;</div><div class="line">			<span class="keyword">if</span>(g&lt;ym&amp;&amp;(mxy==pt[i].y||yl[g]&lt;mxy))vis[pt[i].d]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(g&gt;<span class="number">0</span>&amp;&amp;(miy==pt[i].y||yl[g<span class="number">-1</span>]&gt;miy))vis[pt[i].d]=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		sort(pt+<span class="number">1</span>,pt+n+<span class="number">1</span>,cmpy);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;<span class="comment">//from x axis</span></div><div class="line">			<span class="keyword">int</span> mix=pt[i].x,mxx=pt[i].x;</div><div class="line">			<span class="keyword">if</span>(i&gt;<span class="number">1</span> &amp;&amp; pt[i].y == pt[i<span class="number">-1</span>].y)mix=pt[i<span class="number">-1</span>].x;</div><div class="line">			<span class="keyword">if</span>(i&lt;n &amp;&amp; pt[i].y == pt[i+<span class="number">1</span>].y)mxx=pt[i+<span class="number">1</span>].x;</div><div class="line">			<span class="keyword">int</span> g=upper_bound(xl,xl+xm,pt[i].x)-xl;</div><div class="line">			<span class="keyword">if</span>(g&lt;xm&amp;&amp;(mxx==pt[i].x||xl[g]&lt;mxx))vis[pt[i].d]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(g&gt;<span class="number">0</span>&amp;&amp;(mix==pt[i].x||xl[g<span class="number">-1</span>]&gt;mix))vis[pt[i].d]=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> cnt=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cnt+=vis[i];</div><div class="line">		cout &lt;&lt; cnt &lt;&lt; endl;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>题意:<br>有一些城市,之间有无向边,边有一个货车高度限制和通过的花费.给你你的货物的高度(你可以选择少装一些来降低高度),求在到达目的地的你的货物高度最大的前提下的最小花费.</p>
<p>二分一下高度跑SPFA就好.</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">const <span class="keyword">int</span> maxn = <span class="number">1010</span>,inf = <span class="number">0x3f3f3f3f</span>;</div><div class="line">struct ed&#123;</div><div class="line">	<span class="keyword">int</span> v,lim,d;</div><div class="line">&#125;;</div><div class="line">vector&lt;ed&gt; mp[maxn];</div><div class="line"><span class="keyword">int</span> S,T,dist[maxn],in<span class="string">q[maxn]</span>;</div><div class="line"><span class="keyword">int</span> limt,n,<span class="keyword">m</span>;</div><div class="line">queue&lt;<span class="keyword">int</span>&gt; <span class="keyword">q</span>;</div><div class="line"><span class="keyword">int</span> spfa()&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;++i)dist[i]=inf;</div><div class="line">	dist[S]=<span class="number">0</span>;</div><div class="line">	q.push(S);</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> u = q.front(); q.pop();</div><div class="line">		in<span class="string">q[u]</span>=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(auto &amp;p:mp[u])&#123;</div><div class="line">			<span class="keyword">if</span>(p.lim&gt;=limt &amp;&amp; dist[p.v]&gt;dist[u]+p.d)&#123;</div><div class="line">				dist[p.v]=dist[u]+p.d;</div><div class="line">				<span class="keyword">if</span>(!in<span class="string">q[p.v]</span>)&#123;</div><div class="line">					in<span class="string">q[p.v]</span>=<span class="number">1</span>;</div><div class="line">					q.push(p.v);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(dist[T]==inf)<span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> dist[T];</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	<span class="keyword">int</span> cas=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;<span class="keyword">m</span>))&#123;</div><div class="line">		<span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;<span class="keyword">m</span>==<span class="number">0</span>)<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">else</span> cas++;</div><div class="line">		<span class="keyword">if</span>(cas&gt;<span class="number">1</span>)<span class="keyword">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		rep(i,<span class="number">1</span>,n)mp[i].clear();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="keyword">m</span>;++i)&#123;</div><div class="line">			<span class="keyword">int</span> u,v,l,d;</div><div class="line">			scanf(<span class="string">"%d%d%d%d"</span>,&amp;u,&amp;v,&amp;l,&amp;d);</div><div class="line">			<span class="keyword">if</span>(l==-<span class="number">1</span>)l=inf;</div><div class="line">			mp[u].push_back(ed&#123;v,l,d&#125;);</div><div class="line">			mp[v].push_back(ed&#123;u,l,d&#125;);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> u,v,hi;</div><div class="line">		scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;hi);</div><div class="line">		<span class="keyword">int</span> l=<span class="number">0</span>,r=hi,alim=<span class="number">0</span>,ans=-<span class="number">1</span>;</div><div class="line">		S=u;T=v;</div><div class="line">		<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">			limt = (l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">			<span class="keyword">int</span> tmp = spfa();</div><div class="line">			<span class="keyword">if</span>(tmp!=-<span class="number">1</span>)&#123;</div><div class="line">				ans = tmp; alim=limt;</div><div class="line">				l=limt+<span class="number">1</span>;</div><div class="line">			&#125;<span class="keyword">else</span>&#123;</div><div class="line">				r=limt-<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(S==T)&#123;</div><div class="line">			limt=alim=hi;</div><div class="line">			ans = <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(ans!=-<span class="number">1</span>&amp;&amp;alim&gt;<span class="number">0</span>&amp;&amp;limt&gt;<span class="number">0</span>)<span class="keyword">printf</span>(<span class="string">"Case %d:\nmaximum height = %d\nlength of shortest route = %d\n"</span>,cas,alim,ans);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">printf</span>(<span class="string">"Case %d:\ncannot reach destination\n"</span>,cas);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>题意:<br>把素数当底数来分解,详情见题面.</p>
<p>从大到小枚举就行.难点是输出格式的问题,用string还是用的不6啊.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</div><div class="line"><span class="keyword">int</span> pri[<span class="number">10100</span>],pcnt=<span class="number">1</span>,pvis[<span class="number">101000</span>];</div><div class="line"><span class="built_in">string</span> pstr[<span class="number">10100</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100000</span>;++i)<span class="keyword">if</span>(!pvis[i])&#123;</div><div class="line">		pvis[i]=<span class="number">1</span>;</div><div class="line">		<span class="built_in">stringstream</span> ss;</div><div class="line">		ss &lt;&lt; i;</div><div class="line">		ss &gt;&gt; pstr[pcnt];</div><div class="line">		pstr[pcnt]=pstr[pcnt<span class="number">-1</span>]+<span class="string">"*"</span>+pstr[pcnt];</div><div class="line">		pri[pcnt++]=i;</div><div class="line">		<span class="keyword">int</span> j=i;</div><div class="line">		<span class="keyword">while</span>(j&lt;=<span class="number">100000</span>)&#123;</div><div class="line">			pvis[j]=<span class="number">1</span>;</div><div class="line">			j+=i;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">ll mul[<span class="number">4000</span>];</div><div class="line"><span class="keyword">int</span> usd[<span class="number">4000</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	pre();</div><div class="line">	ll n;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</div><div class="line">		<span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">break</span>;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; n &lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="string">"= "</span>;</div><div class="line">		mul[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">		<span class="keyword">int</span> ed;</div><div class="line">		<span class="built_in">memset</span>(usd,<span class="number">0</span>,<span class="keyword">sizeof</span>(usd));</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;mul[i<span class="number">-1</span>]&lt;=n;++i)&#123;</div><div class="line">			mul[i]=mul[i<span class="number">-1</span>]*pri[i];</div><div class="line">			<span class="keyword">if</span>(mul[i]&gt;n)&#123;ed=i;<span class="keyword">break</span>;&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=ed<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">			<span class="keyword">if</span>(n&gt;=mul[i])&#123;</div><div class="line">				usd[i]+=n/mul[i];</div><div class="line">				n%=mul[i];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; opt;</div><div class="line">		<span class="keyword">char</span> buf[<span class="number">10</span>];<span class="built_in">sprintf</span>(buf,<span class="string">"%d"</span>,usd[<span class="number">0</span>]);</div><div class="line">		<span class="keyword">if</span>(usd[<span class="number">0</span>])opt.push_back(<span class="built_in">string</span>(buf));</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;ed;++i)&#123; </div><div class="line">			<span class="keyword">if</span>(usd[i])&#123;</div><div class="line">				<span class="built_in">stringstream</span> sts;</div><div class="line">				sts &lt;&lt; usd[i];</div><div class="line">				<span class="built_in">string</span> out;</div><div class="line">				sts &gt;&gt; out;</div><div class="line">				out += pstr[i];</div><div class="line">				opt.push_back(out);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;opt.size();++i)&#123;</div><div class="line">			<span class="keyword">if</span>(!i)<span class="built_in">cout</span> &lt;&lt; opt[i];</div><div class="line">			<span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt;<span class="string">" + "</span>&lt;&lt;opt[i];</div><div class="line">		&#125;<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不要问我为什么没有7.&lt;br&gt;这场傻的心碎啊…D题排序的时候忘记标记原来的点的编号了,一直莫名wa…傻得可怜啊&lt;br&gt;一直说要弃疗结果还是打完了(应该说在D上wa完了)&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #6</title>
    <link href="http://tsstss123.github.io/2016/01/21/UESTC-2016-Winter-Training-6/"/>
    <id>http://tsstss123.github.io/2016/01/21/UESTC-2016-Winter-Training-6/</id>
    <published>2016-01-21T14:43:40.000Z</published>
    <updated>2016-02-04T16:49:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>是两场CF Div1拼在一起.题目比较和谐比较有趣,符合我的智商水平.<br>排名也正常…要是等暑假选拔的时候也有这个排名…就能进Div1?</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意:<br>某人在和别人玩石头剪刀布.他有他自己的一套出拳套路.询问是你在第某次与它交手的时候应该出什么?</p>
<p>按照他的套路递归回去就好.石头剪刀布三个操作就写成012这样.就好</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line"><span class="keyword">int</span> gcd(<span class="keyword">int</span> a,<span class="keyword">int</span> b)&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);&#125;</div><div class="line"><span class="keyword">int</span> ch(char c)&#123;</div><div class="line">	<span class="keyword">if</span>(c==<span class="string">'S'</span>)<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'R'</span>)<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'P'</span>)<span class="keyword">return</span> <span class="number">2</span>;</div><div class="line">	<span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">char c1[<span class="number">1010</span>],c2[<span class="number">1010</span>];</div><div class="line"><span class="keyword">int</span> a[<span class="number">1010000</span>],b[<span class="number">1010000</span>];</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	<span class="keyword">int</span> lcm,n,p,k;</div><div class="line">	cin&gt;&gt;n;--n;</div><div class="line">	scanf(<span class="string">"%s%s"</span>,c1,c2);</div><div class="line">	p=strlen(c1);k=strlen(c2);</div><div class="line">	lcm=p/gcd(p,k)*k;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lcm;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(i)&#123;</div><div class="line">			a[i]=a[i-<span class="number">1</span>];b[i]=b[i-<span class="number">1</span>];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> cl=ch(c1[i%p]),cr=ch(c2[i%k]);</div><div class="line">		<span class="keyword">if</span>(cl==cr)<span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>((cl+<span class="number">1</span>)%3==cr)a[i]++;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>((cr+<span class="number">1</span>)%3==cl)b[i]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(n&lt;lcm)&#123;</div><div class="line">		<span class="keyword">printf</span>(<span class="string">"%d %d\n"</span>, a[n],b[n]);</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> d=n/lcm;</div><div class="line">		<span class="keyword">printf</span>(<span class="string">"%d %d\n"</span>, a[lcm-<span class="number">1</span>]*d+a[n%lcm],b[lcm-<span class="number">1</span>]*d+b[n%lcm]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意:<br>给你一个方格图.有一些格子上有一些柱子.你从左上角向右边看过去.你的视线不能拐弯,除非在视线通过某个有柱子的点的时候,让柱子上装上镜子(选了这个柱子让它生效).问你最少选多少柱子能够让视线能够从右下角的方格上向右方向射出.</p>
<p>很容易想到,除非柱子生效,否则对于每个方格上的每个视线只有一条出路.所以把每个方格加一维方向,直接在方格图上跑最短路.有一点需要注意的是,终点的方向是有限制的.注意:如果有柱子处于终点的话,可以让他们生效使得方向改变.在这里wa了几下.</p>
<figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</div><div class="line">const int maxn = <span class="number">1010</span>,inf=<span class="number">100000000</span>;</div><div class="line">const int dx[]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;,dy[]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</div><div class="line">int mp[maxn][maxn];</div><div class="line">int n,m;</div><div class="line">int inq[maxn][maxn][<span class="number">4</span>],dist[maxn][maxn][<span class="number">4</span>];</div><div class="line">struct sta</div><div class="line">&#123;</div><div class="line">	int x,y,d;</div><div class="line">&#125;;</div><div class="line">queue&lt;sta&gt; q;</div><div class="line">inline bool isok(int x,int y)&#123;</div><div class="line">	if(x&lt;=n&amp;&amp;x&gt;<span class="number">0</span>&amp;&amp;y&lt;=m&amp;&amp;y&gt;<span class="number">0</span>)return true;</div><div class="line">	return false;</div><div class="line">&#125;</div><div class="line">void psh(int x,int y,int d)&#123;</div><div class="line">	if(!inq[x][y][d])&#123;</div><div class="line">		q.push((sta)&#123;x,y,d&#125;);</div><div class="line">		inq[x][y][d]=<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void spfa()&#123;</div><div class="line">	rep(i,<span class="number">1</span>,n)rep(j,<span class="number">1</span>,m)rep(k,<span class="number">0</span>,<span class="number">3</span>)dist[i][j][k]=inf;</div><div class="line">	q.push((sta)&#123;n,m,<span class="number">0</span>&#125;);</div><div class="line">	dist[n][m][<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">	while(!q.empty())&#123;</div><div class="line">		sta s = q.front();q.pop();</div><div class="line">		inq[s.x][s.y][s.d]=<span class="number">0</span>;</div><div class="line">		//printf(<span class="string">"%d %d %d,dist=%d\n"</span>,s.x,s.y,s.d,dist[s.x][s.y][s.d] );</div><div class="line">		bool con = mp[s.x][s.y];</div><div class="line">		for(int nxt=s.d<span class="number">-1</span>;nxt&lt;=s.d+<span class="number">1</span>;++nxt)&#123;</div><div class="line">			int nd=(nxt+<span class="number">4</span>)<span class="comment">%4;</span></div><div class="line">			int e = (nd==s.d?<span class="number">0</span>:<span class="number">1</span>);</div><div class="line">			if(!con&amp;&amp;nd!=s.d)continue;</div><div class="line">			if(!isok(s.x+dx[nd],s.y+dy[nd]))continue;</div><div class="line">			if(dist[s.x+dx[nd]][s.y+dy[nd]][nd]&gt;dist[s.x][s.y][s.d]+e)&#123;</div><div class="line">				dist[s.x+dx[nd]][s.y+dy[nd]][nd]=dist[s.x][s.y][s.d]+e;</div><div class="line">				psh(s.x+dx[nd],s.y+dy[nd],nd);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	scanf(<span class="string">"%d%d\n"</span>,&amp;n,&amp;m);</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		char buf[<span class="number">1010</span>];</div><div class="line">		fgets(buf,<span class="number">1010</span>,stdin);</div><div class="line">		rep(j,<span class="number">1</span>,m)&#123;</div><div class="line">			mp[i][j]=buf[j<span class="number">-1</span>]==<span class="string">'.'</span>?<span class="number">0</span>:<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	spfa();</div><div class="line">	if(dist[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>]==inf)&#123;</div><div class="line">		if(mp[<span class="number">1</span>][<span class="number">1</span>])&#123;</div><div class="line">			dist[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>]=dist[<span class="number">1</span>][<span class="number">1</span>][<span class="number">3</span>]+<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		if(dist[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>]&gt;=inf)dist[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>]=<span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;dist[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>]&lt;&lt;endl;</div><div class="line">	return <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>题意:<br>给出一个构造图形的方案,再给出一个矩形.问你按照那个方案构造出来的所有图形放到矩形上,能选上的值得和最大是多少.</p>
<p>观察了一段时间后发现图像可以用面积和找出递推规律.O(1)时间可以从矩形上找出下一个图像对应的值.所有暴力的每个点当中心找一遍就行.<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">using namespace std;</div><div class="line">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</div><div class="line">typedef long long int ll;</div><div class="line">int n,m,mp[<span class="number">510</span>][<span class="number">510</span>],mr;</div><div class="line">const int dx[]=&#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,dy[]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</div><div class="line">ll s[<span class="number">510</span>][<span class="number">510</span>];</div><div class="line">bool expse(int x,int y,int r)&#123;</div><div class="line">	if(x-r&lt;<span class="number">1</span>||x+r&gt;n||y-r&lt;<span class="number">1</span>||y+r&gt;m)return false;</div><div class="line">	else return true;</div><div class="line">&#125;</div><div class="line">int sqsum(int x,int y,int r)&#123;</div><div class="line">	ll ret = s[x+r][y+r]+s[x-r<span class="number">-1</span>][y-r<span class="number">-1</span>];</div><div class="line">	ret -= s[x+r][y-r<span class="number">-1</span>]+s[x-r<span class="number">-1</span>][y+r];</div><div class="line">	return ret;</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">	mr = max(n,m)/<span class="number">2</span>;</div><div class="line">	rep(i,<span class="number">1</span>,n)</div><div class="line">		rep(j,<span class="number">1</span>,m)&#123;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;mp[i][j]);</div><div class="line">			s[i][j]=s[i][j<span class="number">-1</span>]+s[i<span class="number">-1</span>][j]-s[i<span class="number">-1</span>][j<span class="number">-1</span>]+mp[i][j];</div><div class="line">		&#125;</div><div class="line">	ll ans=<span class="number">-1e11</span>;</div><div class="line">	rep(i,<span class="number">1</span>,n)rep(j,<span class="number">1</span>,m)rep(d,<span class="number">0</span>,<span class="number">0</span>)&#123;</div><div class="line">		ll nw = mp[i][j];</div><div class="line">		<span class="comment">//ans = max(ans,nw);</span></div><div class="line">		int rx = i,ry = j;</div><div class="line">		rep(r,<span class="number">1</span>,mr)&#123;</div><div class="line">			if(!expse(i,j,r))break;</div><div class="line">			rx += dx[d]; ry+= dy[d];</div><div class="line">			nw = sqsum(i,j,r)-nw-mp[rx][ry];</div><div class="line">			rx += dx[(d+<span class="number">1</span>)%<span class="number">4</span>]; ry += dy[(d+<span class="number">1</span>)%<span class="number">4</span>];</div><div class="line">			ans = max(ans,nw);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	return <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>题意:<br>一个n*m的棋盘,上面有两个棋子.AB两人对弈,A先手.A一次可以选择一个棋子上下左右移动一步,B一次可以在一个空地上涂上胶水.如果棋子走到一个胶水格子上,棋子以后就无法移动了.给出棋盘大小和两个棋子的位置,问你谁能胜利</p>
<p>学长们说,推出来之和这两个棋子的距离有关…不是很懂你们这些智商流选手…</p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>题意:<br>给你两个字符串a,b.操作:如果s=c+d(c与d拼接),那么s’=d+c.所以对于一个字符串s,可以变成s’种新字符串(s’可以相同,不算相同操作).问恰好k次操作让字符串从a变成b的方案数有多少种.</p>
<p>观察发现…这种操作本质上等价于把s形成一个环然后找一点断开.所以不论怎么操作,都只有len(a)种情况.直接dp即可,k很大的话还可以上矩阵快速幂.本题不用.</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">const <span class="keyword">int</span> mod = <span class="number">1</span>e9+<span class="number">7</span>;</div><div class="line"><span class="keyword">int</span> f[<span class="number">2</span>][<span class="number">2010</span>],k;</div><div class="line">char st[<span class="number">2010</span>],ed[<span class="number">2010</span>];</div><div class="line">bool cmp(<span class="keyword">int</span> <span class="keyword">s</span>)&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;ed[i];++i,++<span class="keyword">s</span>)&#123;</div><div class="line">		<span class="keyword">if</span>(st[<span class="keyword">s</span>]!=ed[i])<span class="keyword">return</span> false;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> true;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	scanf(<span class="string">"%s%s%d"</span>,st,ed,&amp;k);</div><div class="line">	<span class="keyword">int</span> len=strlen(st);</div><div class="line">	f[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;++i)&#123;</div><div class="line">		<span class="keyword">int</span> n=i%2,<span class="keyword">last</span>=(i-<span class="number">1</span>)%2;</div><div class="line">		<span class="keyword">int</span> sum = <span class="number">0</span>;</div><div class="line">		rep(i,<span class="number">1</span>,len)sum=(sum+f[<span class="keyword">last</span>][i])%mod,f[n][i]=<span class="number">0</span>;</div><div class="line">		rep(i,<span class="number">1</span>,len)f[n][i]=(sum-f[<span class="keyword">last</span>][i]+mod)%mod;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&lt;<span class="number">2</span>*len;++i)st[i]=st[i-len];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(cmp(i))</div><div class="line">			ans=(ans+f[k%2][i+<span class="number">1</span>])%mod;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">printf</span>(<span class="string">"%d\n"</span>,ans );</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>题意:<br>有好多家店.你可以在任意一家店买一堆东西在别的店卖掉.有一些限制</p>
<p>贪心即可.</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="section">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="section">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">int n,m,k;</div><div class="line">int a[<span class="string">12</span>][<span class="symbol">110</span>],b[<span class="string">12</span>][<span class="symbol">110</span>],c[<span class="string">12</span>][<span class="symbol">110</span>];</div><div class="line">struct goo&#123;</div><div class="line"><span class="code">	int a,b,c,pf;</span></div><div class="line"><span class="code">	bool operator&lt;(const goo &amp;rhs)&#123;</span></div><div class="line"><span class="code">		return pf&gt;rhs.pf;</span></div><div class="line"><span class="code">	&#125;</span></div><div class="line">&#125;;</div><div class="line">int main()&#123;</div><div class="line"><span class="code">	cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span></div><div class="line"><span class="code">	rep(i,1,n)&#123;</span></div><div class="line"><span class="code">		string s;</span></div><div class="line"><span class="code">		cin &gt;&gt; s;</span></div><div class="line"><span class="code">		rep(j,1,m)&#123;</span></div><div class="line"><span class="code">			cin &gt;&gt; a[i][j] &gt;&gt; b[i][j] &gt;&gt; c[i][j];</span></div><div class="line"><span class="code">		&#125;</span></div><div class="line"><span class="code">	&#125;</span></div><div class="line"><span class="code">	int ans=0;</span></div><div class="line"><span class="code">	rep(c1,1,n)&#123;</span></div><div class="line"><span class="code">		rep(c2,1,n)if(c1!=c2)&#123;</span></div><div class="line"><span class="code">			goo gd[110];memset(gd,0,sizeof(gd));</span></div><div class="line"><span class="code">			rep(i,1,m)&#123;</span></div><div class="line"><span class="code">				gd[i].a=a[c1][i];</span></div><div class="line"><span class="code">				gd[i].b=b[c2][i];</span></div><div class="line"><span class="code">				gd[i].c=c[c1][i];</span></div><div class="line"><span class="code">				gd[i].pf=gd[i].b-gd[i].a;</span></div><div class="line"></div><div class="line"><span class="code">			&#125;</span></div><div class="line"></div><div class="line"><span class="code">			sort(gd+1,gd+m+1);</span></div><div class="line"><span class="code">			int K=k,pro=0;</span></div><div class="line"><span class="code">			rep(i,1,m)if(K&gt;0&amp;&amp;gd[i].pf&gt;0)&#123;</span></div><div class="line"><span class="code">				</span></div><div class="line"><span class="code">				int cnt=min(K,gd[i].c);</span></div><div class="line"><span class="code">				pro+=gd[i].pf*cnt;</span></div><div class="line"><span class="code">				K-=cnt;</span></div><div class="line"><span class="code">			&#125;</span></div><div class="line"><span class="code">			ans = max(ans,pro);</span></div><div class="line"><span class="code">		&#125;</span></div><div class="line"><span class="code">	&#125;</span></div><div class="line"><span class="code">	cout &lt;&lt; ans &lt;&lt; endl;</span></div><div class="line"><span class="code">	return 0;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;是两场CF Div1拼在一起.题目比较和谐比较有趣,符合我的智商水平.&lt;br&gt;排名也正常…要是等暑假选拔的时候也有这个排名…就能进Div1?&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #5</title>
    <link href="http://tsstss123.github.io/2016/01/19/UESTC-2016-Winter-Training-5/"/>
    <id>http://tsstss123.github.io/2016/01/19/UESTC-2016-Winter-Training-5/</id>
    <published>2016-01-19T14:19:02.000Z</published>
    <updated>2016-01-19T15:15:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>脑残的一天…<br>又是删掉了两道水题<br>又是跪在了傻逼题上</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>题意:距离相等的n个商店,距离均为1.给你一堆限制:在购买li商店物品之前必须先购买ri商店的物品.问你从0出发到n+1处最短需要走的距离.</p>
<p>把限制看成是线段.把相交的线段合并.最终会多走这些线段的距离的两倍.</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std<span class="comment">;</span></div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">struct seg&#123;</div><div class="line">	int l,r<span class="comment">;</span></div><div class="line">	<span class="keyword">bool </span>operator&lt;(const seg &amp;rhs)&#123;</div><div class="line">		return r==rhs.r?l&lt;rhs.l:r&lt;rhs.r<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">&#125;rst[<span class="number">510</span>]<span class="comment">;</span></div><div class="line">int n,m<span class="comment">;</span></div><div class="line">int main()&#123;</div><div class="line"><span class="symbol">	ios:</span>:<span class="keyword">sync_with_stdio(false);</span></div><div class="line">	cin&gt;&gt;n&gt;&gt;m<span class="comment">;</span></div><div class="line">	if(m==<span class="number">0</span>)&#123;</div><div class="line">		cout&lt;&lt;n+<span class="number">1</span>&lt;&lt;endl<span class="comment">;</span></div><div class="line">		return <span class="number">0</span><span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,m)&#123;</div><div class="line">		cin&gt;&gt;rst[i].l&gt;&gt;rst[i].r<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	rep(i,<span class="number">1</span>,m)&#123;</div><div class="line">		rep(<span class="keyword">j,1,m)if(i!=j)&#123;</span></div><div class="line">			if(rst[i].l&gt;=rst[<span class="keyword">j].l&amp;&amp;rst[i].r&lt;=rst[j].r)&#123;</span></div><div class="line">				rst[i].l=n+<span class="number">2</span><span class="comment">;rst[i].r=n+2;</span></div><div class="line">				<span class="keyword">break;</span></div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	sort(rst+<span class="number">1</span>,rst+m+<span class="number">1</span>)<span class="comment">;</span></div><div class="line">	while(rst[m].r&gt;n)--m<span class="comment">;</span></div><div class="line">	rep(i,<span class="number">1</span>,m-1)&#123;</div><div class="line">		if(rst[i].r&gt;rst[i+<span class="number">1</span>].l)&#123;</div><div class="line">			rst[i+<span class="number">1</span>].l=rst[i].l<span class="comment">;</span></div><div class="line">			rst[i].l=rst[i].r=n+<span class="number">2</span><span class="comment">;</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	sort(rst+<span class="number">1</span>,rst+m+<span class="number">1</span>)<span class="comment">;</span></div><div class="line">	while(rst[m].r&gt;n)--m<span class="comment">;</span></div><div class="line">	int ans=n+<span class="number">1</span>-rst[m].r<span class="comment">;</span></div><div class="line">	rep(i,<span class="number">1</span>,m)&#123;</div><div class="line">		ans+=(rst[i].r-rst[i-1].r)+(rst[i].r-rst[i].l)*<span class="number">2</span><span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl<span class="comment">;</span></div><div class="line">	return <span class="number">0</span><span class="comment">;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意:你在0位置扔出一个乒乓球.无空气阻力,G=1.球与地面的碰撞为完全弹性碰撞.给出一个终点位置.给出10个竖直的障碍物(宽度无穷小).你可以以任意角度任意大小的速度抛出,要求恰好能够到达终点,并且期间与地面的碰撞次数不得超过b&lt;=10次.问你最小的扔出速度是多少个.</p>
<p>枚举碰撞次数.通过每次与地面碰撞的水平距离与所有的障碍物可以推出这个抛物线最好是多少(答案一定是擦着一个障碍物过去的)</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>题意:给出一个N&lt;=500,M&lt;=50000的图.问你它的所有最小生成树中,有哪些边存在于所有的生成树中.</p>
<p>做法很多…</p>
<p>性价比最高的方法:答案一定是任意一个最小生成树的边集的子集.随便找一颗最小生成树,把上面的边依次删掉再跑一边.如果跑出来的结果有变化或者不连通,则这条边就是答案之一</p>
<p>斓少:跑出一棵树然后dfs建树.对于所有的不在树上的边(u,v,w),在树上暴力的找出树上路径(u,v)之间有多少边权值等于w.这些边可以互相替换,便不是答案.</p>
<p>sifu:这个最吊.mlogm+N的复杂度.前俩个都是NM的.<br>最小生成树那个就是考虑kruskal的过程.我们加完同一权值的所有边时,不同样子的最小生成树形成的联通块应该是一样的,所以我们在做一组时出现一个环/那这个环上随便哪个不用都行.<br>先按边权排序,然后找出最小的一组边,把点映射到并查集中对应的根,然后记录下这些边涉及到了哪些点,对它们跑tarjan找桥.然后继续缩点.每次相当于只做相同权值的那个子图,不是每次要做整个图.这个实现的时候要注意下。。不能直接memset整个vis数组之类的</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>题意:给出一个长度小于30w的左右括号序列.给出一个初始的匹配的序列.有15w个操作,把其中一个反转.每次电脑操作后,你要给出一个操作,使序列继续合法.要求你操作的那个括号位置尽可能向左.</p>
<p>sifu:把括号序列看成(-&gt;1,)-&gt;-1,记录前缀和.若平衡则意味着总和=0且每一项都&gt;=0<br>修改后找最左边括号样子对的，并且这一段最小值也对的<br>用一颗带lazy的线段树<br>支持区间加减<br>查区间最小值<br>然后还可以把左右括号分开。。这个看怎么写了<br>直接用两颗就行</p>
<p>虽然看不懂,但是感觉好厉害的样子</p>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>题意:平面上给出起点和终点.机器人有一个探测半径r.给出平面上的8个点.要求求一条最短路径使得机器人从起点到达终点,同时8个点不得出现在探测器的探测半径内.</p>
<p>sifu:暴力建图跑最短路.走的路线一定是圆弧或者切线,两两之间跑一下切线,圆上记录下用了哪些点.</p>
<p>虽然还是看不懂…留坑…</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;脑残的一天…&lt;br&gt;又是删掉了两道水题&lt;br&gt;又是跪在了傻逼题上&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2016 Winter Training #4</title>
    <link href="http://tsstss123.github.io/2016/01/18/UESTC-2016-Winter-Training-4/"/>
    <id>http://tsstss123.github.io/2016/01/18/UESTC-2016-Winter-Training-4/</id>
    <published>2016-01-18T12:16:15.000Z</published>
    <updated>2016-01-18T15:29:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>血崩的一天.亲妈爆炸!<br>暴露了心态和比赛经验的问题…</p>
<a id="more"></a>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>题意:整数的各个位上的数字之和很好玩.<br>给出n&lt;=5000.求由n个(各个位上的数字之和相等的数)的和的最小值.</p>
<p>…居然被卡了5h.没错,就是5h…<br>以为是什么有规律的东西…一直在推公式…最后放弃治疗开始瞎爆.没错…正解是爆,我是瞎爆…<br>还碰到了个很可怕的东西Bus Error…爆搜的时候弄出来的…真的是慌了…平时Segment Fault都很正常..这个BusError…</p>
<p>从1开始向上枚举就可以了.因为从小到大答案一定是最优的…无脑暴力…为什么我就想不到…简直蠢死了…脑子进屎了…</p>
<p>我就枚举”各个数位之和”是多少.然后每次更新答案,枚举到30就可以了…主要是DFS写挂了,然后让我误以为最高到9就可以枚举到了…然后前10位的数列扔进OEIS又有规律…卧槽…(这真的是学聪明了么…)5h中无数次怀疑人生怀疑xxxx….</p>
<p>最后几min,CF上的g++一直RE,本机一点问题都没有.索性改一下头文件交到VS2010上去…居然…….过了………..</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sstream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#define rep(i,a,b) for(int i=a<span class="comment">;i&lt;=b;++i)</span></span></div><div class="line">using namespace std<span class="comment">;</span></div><div class="line">vector&lt;<span class="built_in">string</span>&gt; ans<span class="comment">;</span></div><div class="line"><span class="built_in">int</span> goal<span class="comment">;</span></div><div class="line">void dfs(<span class="built_in">int</span> left,<span class="built_in">int</span> dep,<span class="built_in">string</span> s)&#123;</div><div class="line">	<span class="keyword">if</span>(goal == dep)&#123;</div><div class="line">		<span class="keyword">if</span>(left||ans.size()&gt;<span class="number">5010</span>)<span class="keyword">return</span><span class="comment">;</span></div><div class="line">		ans.push_back(s)<span class="comment">;</span></div><div class="line">		<span class="keyword">return</span> <span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(left/<span class="number">9</span>+(left%<span class="number">9</span>&gt;<span class="number">0</span>?<span class="number">1</span>:<span class="number">0</span>)&gt;(goal-dep+<span class="number">1</span>))<span class="keyword">return</span> <span class="comment">;</span></div><div class="line">	s+=<span class="string">'0'</span><span class="comment">;</span></div><div class="line">	rep(i,<span class="number">0</span>,<span class="number">9</span>)&#123;</div><div class="line">		<span class="keyword">if</span>(left-i&lt;<span class="number">0</span>)<span class="built_in">break</span><span class="comment">;</span></div><div class="line">		s[dep<span class="number">-1</span>]=i+<span class="string">'0'</span><span class="comment">;</span></div><div class="line">		dfs(left-i,dep+<span class="number">1</span>,s)<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">typedef long long <span class="built_in">int</span> ll<span class="comment">;</span></div><div class="line">ll a[<span class="number">5010</span>],f[<span class="number">5010</span>]<span class="comment">;</span></div><div class="line"><span class="built_in">int</span> main()&#123;</div><div class="line">	freopen(<span class="string">"digits.in"</span>,<span class="string">"r"</span>,stdin)<span class="comment">;</span></div><div class="line">	freopen(<span class="string">"digits.out"</span>,<span class="string">"w"</span>,stdout)<span class="comment">;</span></div><div class="line">	rep(i,<span class="number">1</span>,<span class="number">5000</span>)f[i]=<span class="number">100000000000000000</span>LL<span class="comment">;</span></div><div class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span><span class="comment">;i&lt;=30;++i)&#123;</span></div><div class="line">		goal = <span class="number">8</span><span class="comment">;</span></div><div class="line">		<span class="built_in">string</span> tmp<span class="comment">;</span></div><div class="line">		dfs(i,<span class="number">1</span>,tmp)<span class="comment">;</span></div><div class="line">		<span class="built_in">int</span> it,ct=<span class="number">1</span><span class="comment">;</span></div><div class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;ans.size();++i)&#123;</span></div><div class="line">			stringstream ss(ans[i])<span class="comment">;</span></div><div class="line">			ss &gt;&gt; a[ct++]<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line">		rep(j,<span class="number">1</span>,min(ct<span class="number">-1</span>,<span class="number">5000</span>))&#123;</div><div class="line">			<span class="keyword">if</span>(j&gt;<span class="number">5000</span>)<span class="built_in">break</span><span class="comment">;</span></div><div class="line">			a[j]+=a[j<span class="number">-1</span>]<span class="comment">;</span></div><div class="line">			<span class="keyword">if</span>(a[j]&lt;f[j])&#123;</div><div class="line">				f[j]=a[j]<span class="comment">;</span></div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		ans.clear()<span class="comment">;</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="built_in">int</span> n<span class="comment">;</span></div><div class="line">	cin&gt;&gt;n<span class="comment">;</span></div><div class="line">	cout&lt;&lt;f[n]&lt;&lt;endl<span class="comment">;</span></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>题意:给你四个矩形区域和一个矩形,问你能不能放下这个矩形</p>
<p>有一个小坑.给出的那个矩形是给定了x边和y边的..不能换顺序…</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#include&lt;iostream&gt;</div><div class="line">#define rep(<span class="name">i</span>,a,b) for(<span class="name">int</span> i=a<span class="comment">;i&lt;=b;++i)</span></div><div class="line">using namespace std<span class="comment">;</span></div><div class="line">bool flag=false<span class="comment">;</span></div><div class="line">int x1,x2,x3,x4<span class="comment">;</span></div><div class="line">int y1,y2,y3,y4<span class="comment">;</span></div><div class="line">int w,h<span class="comment">;</span></div><div class="line">inline void <span class="literal">t</span>(<span class="name">int</span> x,int y)&#123;</div><div class="line">	if(<span class="name">x&gt;=w&amp;&amp;y&gt;=h</span>)flag=true<span class="comment">;</span></div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	freopen(<span class="string">"grave.in"</span>,<span class="string">"r"</span>,stdin)<span class="comment">;</span></div><div class="line">	freopen(<span class="string">"grave.out"</span>,<span class="string">"w"</span>,stdout)<span class="comment">;</span></div><div class="line">	cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2&gt;&gt;x3&gt;&gt;y3&gt;&gt;x4&gt;&gt;y4&gt;&gt;w&gt;&gt;h<span class="comment">;</span></div><div class="line">	<span class="literal">t</span>(<span class="name">x3-x1</span>,y2-y1)<span class="comment">;</span></div><div class="line">	<span class="literal">t</span>(<span class="name">x2-x1</span>,y3-y1)<span class="comment">;</span></div><div class="line">	<span class="literal">t</span>(<span class="name">x2-x4</span>,y2-y1)<span class="comment">;</span></div><div class="line">	<span class="literal">t</span>(<span class="name">x2-x1</span>,y2-y4)<span class="comment">;</span></div><div class="line">	if(<span class="name">flag</span>)cout&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl<span class="comment">;</span></div><div class="line">	else cout&lt;&lt;<span class="string">"No"</span>&lt;&lt;endl<span class="comment">;</span></div><div class="line">	return <span class="number">0</span><span class="comment">;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>题意:你控制一个火车站.在进站前你有一些(50个)火车铁轨上的那种岔道需要控制.(就是那种二分的岔道)初始都是向小的方向.一个岔道到下一个岔道需要1的时间.给你何时哪些车要开始进站与最后车要到达哪个站台.(到达即离开)问你对这些岔道的操作是怎样的…</p>
<p>二分的岔道嘛…方案应该是唯一的…所以每个车要到达,暴力从下向上找一发就可以了</p>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>题意:k秒钟,时时刻刻天空中有风.你知道所有的风向风力(就是矢量)你发动机提供的速度最大为Vmax.给出起点和终点.求问你能否在恰好第k秒到达终点.能得话输出路径.</p>
<p>把总的风力矢量算出来,用终点-起点-风量=运动矢量.再/k就行.注意比较的适合开根号比较.</p>
<p>下面有一行神奇的代码.和B一样把我送上天<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">freopen(<span class="string">"joy.out"</span>,<span class="string">"r"</span>,<span class="built_in">stdout</span>);</div></pre></td></tr></table></figure></p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define rep(i,a,b) for(int i=a;i&lt;=b;++i)</span></div><div class="line">using namespace std;</div><div class="line">double sx,sy,fx,fy;</div><div class="line">double gx,gy,wx[<span class="number">10100</span>],wy[<span class="number">10100</span>];</div><div class="line"><span class="keyword">int</span> n,k,vmax,ti[<span class="number">10100</span>];</div><div class="line"><span class="keyword">int</span> main()&#123;</div><div class="line">	freopen(<span class="string">"joy.in"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	freopen(<span class="string">"joy.out"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">	scanf(<span class="string">"%lf%lf%lf%lf"</span>,&amp;sx,&amp;sy,&amp;fx,&amp;fy);</div><div class="line">	gx=fx-sx;gy=fy-sy;</div><div class="line">	scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;k,&amp;vmax);</div><div class="line">	rep(i,<span class="number">1</span>,n)&#123;</div><div class="line">		scanf(<span class="string">"%d%lf%lf"</span>,&amp;ti[i],&amp;wx[i],&amp;wy[i]);</div><div class="line">		<span class="keyword">if</span>(i==<span class="number">1</span>)<span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">int</span> dt = ti[i]-ti[i-<span class="number">1</span>];</div><div class="line">		gx-=dt*wx[i-<span class="number">1</span>];gy-=dt*wy[i-<span class="number">1</span>];</div><div class="line">	&#125;</div><div class="line">	gx-=(k-ti[n])*wx[n];gy-=(k-ti[n])*wy[n];</div><div class="line">	<span class="keyword">if</span>(<span class="keyword">sqrt</span>(gx*gx+gy*gy)&gt;k*vmax)&#123;</div><div class="line">		<span class="keyword">printf</span>(<span class="string">"No\n"</span>);</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	double stpx=gx/k,stpy=gy/k;</div><div class="line">	<span class="keyword">printf</span>(<span class="string">"Yes\n"</span>);</div><div class="line">	<span class="keyword">int</span> <span class="keyword">pos</span>=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(<span class="keyword">pos</span>&lt;n &amp;&amp; i&gt;ti[<span class="keyword">pos</span>+<span class="number">1</span>])++<span class="keyword">pos</span>;</div><div class="line">		sx+=stpx+wx[<span class="keyword">pos</span>];</div><div class="line">		sy+=stpy+wy[<span class="keyword">pos</span>];</div><div class="line">		<span class="keyword">printf</span>(<span class="string">"%f %f\n"</span>,sx,sy);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>题意:一个人在烤羊肉串.有n个羊肉串要烤.每个羊肉串要串Qi串肉,每串肉需要一秒钟串上去.这个人喜欢做梦,它在某一秒做梦了,这一秒就无法串上一块肉.对于第i个羊肉串至少要有Xi块肉,吃的人才能满意.这个人做了一场梦之后,隔t秒才可能做第二次梦.他要让所有的客人满意.问:有多少种做梦方式?</p>
<p>花样DP.留坑</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;血崩的一天.亲妈爆炸!&lt;br&gt;暴露了心态和比赛经验的问题…&lt;/p&gt;
    
    </summary>
    
    
      <category term="集训" scheme="http://tsstss123.github.io/tags/%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
</feed>
